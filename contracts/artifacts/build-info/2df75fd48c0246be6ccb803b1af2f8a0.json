{
	"id": "2df75fd48c0246be6ccb803b1af2f8a0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts_rename/FlashLoan.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\n\r\npragma solidity >= 0.4.22 <0.9.0;\r\npragma abicoder v2;\r\n\r\nimport './interfaces/IUniswapV3FlashCallback.sol';\r\nimport '@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol';\r\n\r\nimport './interfaces/PeripheryPayments.sol';\r\nimport './interfaces/PeripheryImmutableState.sol';\r\nimport './libraries/PoolAddress.sol';\r\nimport './libraries/CallbackValidation.sol';\r\nimport './interfaces/ISwapRouter.sol';\r\n\r\n/// @title Flash contract implementation\r\n/// @notice An example contract using the Uniswap V3 flash function\r\ncontract FlashLoan is IUniswapV3FlashCallback, PeripheryImmutableState, PeripheryPayments {\r\n    using LowGasSafeMath for uint256;\r\n    using LowGasSafeMath for int256;\r\n\r\n    ISwapRouter public immutable swapRouter;\r\n\r\n//      const _swapRouter = \"0xE592427A0AEce92De3Edee1F18E0157C05861564\";\r\n//   const _factory = \"0x1F98431c8aD98523631AE4a59f267346ea31F984\";\r\n//   const WETH_ADDRESS = \"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889\";\r\n\r\n\r\n        // Fee: 1 ETH * 0.3% = 0.003 ETH\r\n//    const token0 = \"0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174\"; // 0.30% tier \r\n//   const token1 = \"0x77A6f2e9A9E44fd5D5C3F9bE9E52831fC1C3C0A0\"; // 0.30% tier \r\n//   const fee1 = 3000; // 0.30% tier \r\n//   const amount0 = 100;\r\n//   const amount1 = 10;\r\n//   const fee2 = 2000; // 0.20% tier \r\n//   const fee3 = 2500; // 0.30% tier \r\n\r\n\r\n    constructor(\r\n        ISwapRouter _swapRouter,\r\n        address _factory,\r\n        address _WETH9\r\n    ) PeripheryImmutableState(_factory, _WETH9) {\r\n        swapRouter = _swapRouter;\r\n    }\r\n\r\n    /// @param fee0 The fee from calling flash for token0\r\n    /// @param fee1 The fee from calling flash for token1\r\n    /// @param data The data needed in the callback passed as FlashCallbackData from `initFlash`\r\n    /// @notice implements the callback called from flash\r\n    /// @dev fails if the flash is not profitable, meaning the amountOut from the flash is less than the amount borrowed\r\n    function uniswapV3FlashCallback(\r\n        uint256 fee0,\r\n        uint256 fee1,\r\n        bytes calldata data\r\n    ) external override {\r\n        FlashCallbackData memory decoded = abi.decode(data, (FlashCallbackData));\r\n        CallbackValidation.verifyCallback(factory, decoded.poolKey);\r\n\r\n        address token0 = decoded.poolKey.token0;\r\n        address token1 = decoded.poolKey.token1;\r\n\r\n        CustomTransferHelper.safeApprove(token0, address(swapRouter), decoded.amount0);\r\n        CustomTransferHelper.safeApprove(token1, address(swapRouter), decoded.amount1);\r\n\r\n        // profitable check\r\n        // exactInputSingle will fail if this amount not met\r\n        uint256 amount1Min = LowGasSafeMath.add(decoded.amount1, fee1);\r\n        uint256 amount0Min = LowGasSafeMath.add(decoded.amount0, fee0);\r\n\r\n        // call exactInputSingle for swapping token1 for token0 in pool w/fee2\r\n        uint256 amountOut0 =\r\n            swapRouter.exactInputSingle(\r\n                ISwapRouter.ExactInputSingleParams({\r\n                    tokenIn: token1,\r\n                    tokenOut: token0,\r\n                    fee: decoded.poolFee2,\r\n                    recipient: address(this),\r\n                    deadline: block.timestamp,\r\n                    amountIn: decoded.amount1,\r\n                    amountOutMinimum: amount0Min,\r\n                    sqrtPriceLimitX96: 0\r\n                })\r\n            );\r\n\r\n        // call exactInputSingle for swapping token0 for token 1 in pool w/fee3\r\n        uint256 amountOut1 =\r\n            swapRouter.exactInputSingle(\r\n                ISwapRouter.ExactInputSingleParams({\r\n                    tokenIn: token0,\r\n                    tokenOut: token1,\r\n                    fee: decoded.poolFee3,\r\n                    recipient: address(this),\r\n                    deadline: block.timestamp,\r\n                    amountIn: decoded.amount0,\r\n                    amountOutMinimum: amount1Min,\r\n                    sqrtPriceLimitX96: 0\r\n                })\r\n            );\r\n\r\n        // end up with amountOut0 of token0 from first swap and amountOut1 of token1 from second swap\r\n        uint256 amount0Owed = LowGasSafeMath.add(decoded.amount0, fee0);\r\n        uint256 amount1Owed = LowGasSafeMath.add(decoded.amount1, fee1);\r\n\r\n        CustomTransferHelper.safeApprove(token0, address(this), amount0Owed);\r\n        CustomTransferHelper.safeApprove(token1, address(this), amount1Owed);\r\n\r\n        if (amount0Owed > 0) pay(token0, address(this), msg.sender, amount0Owed);\r\n        if (amount1Owed > 0) pay(token1, address(this), msg.sender, amount1Owed);\r\n\r\n        // if profitable pay profits to payer\r\n        if (amountOut0 > amount0Owed) {\r\n            uint256 profit0 = LowGasSafeMath.sub(amountOut0, amount0Owed);\r\n\r\n            CustomTransferHelper.safeApprove(token0, address(this), profit0);\r\n            pay(token0, address(this), decoded.payer, profit0);\r\n        }\r\n        if (amountOut1 > amount1Owed) {\r\n            uint256 profit1 = LowGasSafeMath.sub(amountOut1, amount1Owed);\r\n            CustomTransferHelper.safeApprove(token0, address(this), profit1);\r\n            pay(token1, address(this), decoded.payer, profit1);\r\n        }\r\n    }\r\n\r\n    //fee1 is the fee of the pool from the initial borrow\r\n    //fee2 is the fee of the first pool to arb from\r\n    //fee3 is the fee of the second pool to arb from\r\n    struct FlashParams {\r\n        address token0;\r\n        address token1;\r\n        uint24 fee1;\r\n        uint256 amount0;\r\n        uint256 amount1;\r\n        uint24 fee2;\r\n        uint24 fee3;\r\n    }\r\n    // fee2 and fee3 are the two other fees associated with the two other pools of token0 and token1\r\n    struct FlashCallbackData {\r\n        uint256 amount0;\r\n        uint256 amount1;\r\n        address payer;\r\n        PoolAddress.PoolKey poolKey;\r\n        uint24 poolFee2;\r\n        uint24 poolFee3;\r\n    }\r\n\r\n   \r\n    function initFlash(address token0,\r\n        address token1,\r\n        uint24 fee1,\r\n        uint256 amount0,\r\n        uint256 amount1,\r\n        uint24 fee2,\r\n        uint24 fee3) external {\r\n        PoolAddress.PoolKey memory poolKey =\r\n            PoolAddress.PoolKey({token0: token0, token1: token1, fee: fee1});\r\n        IUniswapV3Pool pool = IUniswapV3Pool(PoolAddress.computeAddress(factory, poolKey));\r\n        // recipient of borrowed amounts\r\n        // amount of token0 requested to borrow\r\n        // amount of token1 requested to borrow\r\n        // need amount 0 and amount1 in callback to pay back pool\r\n        // recipient of flash should be THIS contract\r\n        pool.flash(\r\n            address(this),\r\n            amount0,\r\n            amount1,\r\n            abi.encode(\r\n                FlashCallbackData({\r\n                    amount0: amount0,\r\n                    amount1: amount1,\r\n                    payer: msg.sender,\r\n                    poolKey: poolKey,\r\n                    poolFee2: fee2,\r\n                    poolFee3: fee3\r\n                })\r\n            )\r\n        );\r\n    }\r\n}\r\n"
			},
			"contracts_rename/interfaces/ISwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.7.5;\r\npragma abicoder v2;\r\n\r\nimport './IUniswapV3SwapCallback.sol';\r\n\r\n/// @title Router token swapping functionality\r\n/// @notice Functions for swapping tokens via Uniswap V3\r\ninterface ISwapRouter is IUniswapV3SwapCallback {\r\n    struct ExactInputSingleParams {\r\n        address tokenIn;\r\n        address tokenOut;\r\n        uint24 fee;\r\n        address recipient;\r\n        uint256 deadline;\r\n        uint256 amountIn;\r\n        uint256 amountOutMinimum;\r\n        uint160 sqrtPriceLimitX96;\r\n    }\r\n\r\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\r\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\r\n    /// @return amountOut The amount of the received token\r\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\r\n\r\n    struct ExactInputParams {\r\n        bytes path;\r\n        address recipient;\r\n        uint256 deadline;\r\n        uint256 amountIn;\r\n        uint256 amountOutMinimum;\r\n    }\r\n\r\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\r\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\r\n    /// @return amountOut The amount of the received token\r\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\r\n\r\n    struct ExactOutputSingleParams {\r\n        address tokenIn;\r\n        address tokenOut;\r\n        uint24 fee;\r\n        address recipient;\r\n        uint256 deadline;\r\n        uint256 amountOut;\r\n        uint256 amountInMaximum;\r\n        uint160 sqrtPriceLimitX96;\r\n    }\r\n\r\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\r\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\r\n    /// @return amountIn The amount of the input token\r\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\r\n\r\n    struct ExactOutputParams {\r\n        bytes path;\r\n        address recipient;\r\n        uint256 deadline;\r\n        uint256 amountOut;\r\n        uint256 amountInMaximum;\r\n    }\r\n\r\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\r\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\r\n    /// @return amountIn The amount of the input token\r\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\r\n}"
			},
			"contracts_rename/libraries/CallbackValidation.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.8.19;\r\n\r\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol';\r\nimport './PoolAddress.sol';\r\n\r\n/// @notice Provides validation for callbacks from Uniswap V3 Pools\r\nlibrary CallbackValidation {\r\n    /// @notice Returns the address of a valid Uniswap V3 Pool\r\n    /// @param factory The contract address of the Uniswap V3 factory\r\n    /// @param tokenA The contract address of either token0 or token1\r\n    /// @param tokenB The contract address of the other token\r\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\r\n    /// @return pool The V3 pool contract address\r\n    function verifyCallback(\r\n        address factory,\r\n        address tokenA,\r\n        address tokenB,\r\n        uint24 fee\r\n    ) internal view returns (IUniswapV3Pool pool) {\r\n        return verifyCallback(factory, PoolAddress.getPoolKey(tokenA, tokenB, fee));\r\n    }\r\n\r\n    /// @notice Returns the address of a valid Uniswap V3 Pool\r\n    /// @param factory The contract address of the Uniswap V3 factory\r\n    /// @param poolKey The identifying key of the V3 pool\r\n    /// @return pool The V3 pool contract address\r\n    function verifyCallback(address factory, PoolAddress.PoolKey memory poolKey)\r\n        internal\r\n        view\r\n        returns (IUniswapV3Pool pool)\r\n    {\r\n        pool = IUniswapV3Pool(PoolAddress.computeAddress(factory, poolKey));\r\n        require(msg.sender == address(pool));\r\n    }\r\n}"
			},
			"contracts_rename/libraries/PoolAddress.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\n/// @title Provides functions for deriving a pool address from the factory, tokens, and the fee\r\nlibrary PoolAddress {\r\n    bytes32 internal constant POOL_INIT_CODE_HASH = 0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54;\r\n\r\n    /// @notice The identifying key of the pool\r\n    struct PoolKey {\r\n        address token0;\r\n        address token1;\r\n        uint24 fee;\r\n    }\r\n\r\n    /// @notice Returns PoolKey: the ordered tokens with the matched fee levels\r\n    /// @param tokenA The first token of a pool, unsorted\r\n    /// @param tokenB The second token of a pool, unsorted\r\n    /// @param fee The fee level of the pool\r\n    /// @return Poolkey The pool details with ordered token0 and token1 assignments\r\n    function getPoolKey(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint24 fee\r\n    ) internal pure returns (PoolKey memory) {\r\n        if (tokenA > tokenB) (tokenA, tokenB) = (tokenB, tokenA);\r\n        return PoolKey({token0: tokenA, token1: tokenB, fee: fee});\r\n    }\r\n\r\n    /// @notice Deterministically computes the pool address given the factory and PoolKey\r\n    /// @param factory The Uniswap V3 factory contract address\r\n    /// @param key The PoolKey\r\n    /// @return pool The contract address of the V3 pool\r\n   function computeAddress(address factory, PoolKey memory key) internal pure returns (address pool) {\r\n    require(key.token0 < key.token1);\r\n    bytes32 hash = keccak256(abi.encodePacked(\r\n        hex'ff',\r\n        factory,\r\n        keccak256(abi.encode(key.token0, key.token1, key.fee)),\r\n        POOL_INIT_CODE_HASH\r\n    ));\r\n    pool = address(uint160(uint256(hash)));\r\n}\r\n\r\n}"
			},
			"contracts_rename/interfaces/PeripheryImmutableState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n\r\nimport './IPeripheryImmutableState.sol';\r\n\r\n/// @title Immutable state\r\n/// @notice Immutable state used by periphery contracts\r\nabstract contract PeripheryImmutableState is IPeripheryImmutableState {\r\n    /// @inheritdoc IPeripheryImmutableState\r\n    address public immutable override factory;\r\n    /// @inheritdoc IPeripheryImmutableState\r\n    address public immutable override WETH9;\r\n\r\n    constructor(address _factory, address _WETH9) {\r\n        factory = _factory;\r\n        WETH9 = _WETH9;\r\n    }\r\n}"
			},
			"contracts_rename/interfaces/PeripheryPayments.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.7.5;\r\n\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\n\r\nimport './IPeripheryPayments.sol';\r\nimport './IWETH9.sol';\r\n\r\nimport './CustomCustomTransferHelper.sol';\r\n\r\nimport './PeripheryImmutableState.sol';\r\n\r\nabstract contract PeripheryPayments is IPeripheryPayments, PeripheryImmutableState {\r\n    receive() external payable {\r\n    }\r\n\r\n    /// @inheritdoc IPeripheryPayments\r\n    function unwrapWETH9(uint256 amountMinimum, address recipient) public payable override {\r\n        uint256 balanceWETH9 = IWETH9(WETH9).balanceOf(address(this));\r\n        require(balanceWETH9 >= amountMinimum, 'Insufficient WETH9');\r\n\r\n        if (balanceWETH9 > 0) {\r\n            IWETH9(WETH9).withdraw(balanceWETH9);\r\n            CustomTransferHelper.safeTransferETH(recipient, balanceWETH9);\r\n        }\r\n    }\r\n\r\n    /// @inheritdoc IPeripheryPayments\r\n    function sweepToken(\r\n        address token,\r\n        uint256 amountMinimum,\r\n        address recipient\r\n    ) public payable override {\r\n        uint256 balanceToken = IERC20(token).balanceOf(address(this));\r\n        require(balanceToken >= amountMinimum, 'Insufficient token');\r\n\r\n        if (balanceToken > 0) {\r\n            CustomTransferHelper.safeTransfer(token, recipient, balanceToken);\r\n        }\r\n    }\r\n\r\n    /// @inheritdoc IPeripheryPayments\r\n    function refundETH() external payable override {\r\n        if (address(this).balance > 0) CustomTransferHelper.safeTransferETH(msg.sender, address(this).balance);\r\n    }\r\n\r\n    /// @param token The token to pay\r\n    /// @param payer The entity that must pay\r\n    /// @param recipient The entity that will receive payment\r\n    /// @param value The amount to pay\r\n    function pay(\r\n        address token,\r\n        address payer,\r\n        address recipient,\r\n        uint256 value\r\n    ) internal {\r\n        if (token == WETH9 && address(this).balance >= value) {\r\n            // pay with WETH9\r\n            IWETH9(WETH9).deposit{value: value}(); // wrap only what is needed to pay\r\n            IWETH9(WETH9).transfer(recipient, value);\r\n        } else if (payer == address(this)) {\r\n            // pay with tokens already in the contract (for the exact input multihop case)\r\n            CustomTransferHelper.safeTransfer(token, recipient, value);\r\n        } else {\r\n            // pull payment\r\n            CustomTransferHelper.safeTransferFrom(token, payer, recipient, value);\r\n        }\r\n    }\r\n}"
			},
			"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.0;\n\n/// @title Optimized overflow and underflow safe math operations\n/// @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\nlibrary LowGasSafeMath {\n    /// @notice Returns x + y, reverts if sum overflows uint256\n    /// @param x The augend\n    /// @param y The addend\n    /// @return z The sum of x and y\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x + y) >= x);\n    }\n\n    /// @notice Returns x - y, reverts if underflows\n    /// @param x The minuend\n    /// @param y The subtrahend\n    /// @return z The difference of x and y\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x - y) <= x);\n    }\n\n    /// @notice Returns x * y, reverts if overflows\n    /// @param x The multiplicand\n    /// @param y The multiplier\n    /// @return z The product of x and y\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require(x == 0 || (z = x * y) / x == y);\n    }\n\n    /// @notice Returns x + y, reverts if overflows or underflows\n    /// @param x The augend\n    /// @param y The addend\n    /// @return z The sum of x and y\n    function add(int256 x, int256 y) internal pure returns (int256 z) {\n        require((z = x + y) >= x == (y >= 0));\n    }\n\n    /// @notice Returns x - y, reverts if overflows or underflows\n    /// @param x The minuend\n    /// @param y The subtrahend\n    /// @return z The difference of x and y\n    function sub(int256 x, int256 y) internal pure returns (int256 z) {\n        require((z = x - y) <= x == (y >= 0));\n    }\n}\n"
			},
			"contracts_rename/interfaces/IUniswapV3FlashCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Callback for IUniswapV3PoolActions#flash\r\n/// @notice Any contract that calls IUniswapV3PoolActions#flash must implement this interface\r\ninterface IUniswapV3FlashCallback {\r\n    /// @notice Called to `msg.sender` after transferring to the recipient from IUniswapV3Pool#flash.\r\n    /// @dev In the implementation you must repay the pool the tokens sent by flash plus the computed fee amounts.\r\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\r\n    /// @param fee0 The fee amount in token0 due to the pool by the end of the flash\r\n    /// @param fee1 The fee amount in token1 due to the pool by the end of the flash\r\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#flash call\r\n    function uniswapV3FlashCallback(\r\n        uint256 fee0,\r\n        uint256 fee1,\r\n        bytes calldata data\r\n    ) external;\r\n}\r\n"
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport './pool/IUniswapV3PoolImmutables.sol';\nimport './pool/IUniswapV3PoolState.sol';\nimport './pool/IUniswapV3PoolDerivedState.sol';\nimport './pool/IUniswapV3PoolActions.sol';\nimport './pool/IUniswapV3PoolOwnerActions.sol';\nimport './pool/IUniswapV3PoolEvents.sol';\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface IUniswapV3Pool is\n    IUniswapV3PoolImmutables,\n    IUniswapV3PoolState,\n    IUniswapV3PoolDerivedState,\n    IUniswapV3PoolActions,\n    IUniswapV3PoolOwnerActions,\n    IUniswapV3PoolEvents\n{\n\n}\n"
			},
			"contracts_rename/interfaces/CustomCustomTransferHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.6.0;\r\n\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\n\r\nlibrary CustomTransferHelper {\r\n    /// @notice Transfers tokens from the targeted address to the given destination\r\n    /// @notice Errors with 'STF' if transfer fails\r\n    /// @param token The contract address of the token to be transferred\r\n    /// @param from The originating address from which the tokens will be transferred\r\n    /// @param to The destination address of the transfer\r\n    /// @param value The amount to be transferred\r\n    function safeTransferFrom(\r\n        address token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        (bool success, bytes memory data) =\r\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\r\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\r\n    }\r\n\r\n    /// @notice Transfers tokens from msg.sender to a recipient\r\n    /// @dev Errors with ST if transfer fails\r\n    /// @param token The contract address of the token which will be transferred\r\n    /// @param to The recipient of the transfer\r\n    /// @param value The value of the transfer\r\n    function safeTransfer(\r\n        address token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\r\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\r\n    }\r\n\r\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\r\n    /// @dev Errors with 'SA' if transfer fails\r\n    /// @param token The contract address of the token to be approved\r\n    /// @param to The target of the approval\r\n    /// @param value The amount of the given token the target will be allowed to spend\r\n    function safeApprove(\r\n        address token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\r\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\r\n    }\r\n\r\n    /// @notice Transfers ETH to the recipient address\r\n    /// @dev Fails with `STE`\r\n    /// @param to The destination of the transfer\r\n    /// @param value The value to be transferred\r\n    function safeTransferETH(address to, uint256 value) internal {\r\n        (bool success, ) = to.call{value: value}(new bytes(0));\r\n        require(success, 'STE');\r\n    }\r\n}"
			},
			"contracts_rename/interfaces/IWETH9.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\n\r\n/// @title Interface for WETH9\r\ninterface IWETH9 is IERC20 {\r\n    /// @notice Deposit ether to get wrapped ether\r\n    function deposit() external payable;\r\n\r\n    /// @notice Withdraw wrapped ether to get ether\r\n    function withdraw(uint256) external;\r\n}"
			},
			"contracts_rename/interfaces/IPeripheryPayments.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.7.5;\r\n\r\n/// @title Periphery Payments\r\n/// @notice Functions to ease deposits and withdrawals of ETH\r\ninterface IPeripheryPayments {\r\n    /// @notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\r\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\r\n    /// @param amountMinimum The minimum amount of WETH9 to unwrap\r\n    /// @param recipient The address receiving ETH\r\n    function unwrapWETH9(uint256 amountMinimum, address recipient) external payable;\r\n\r\n    /// @notice Refunds any ETH balance held by this contract to the `msg.sender`\r\n    /// @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\r\n    /// that use ether for the input amount\r\n    function refundETH() external payable;\r\n\r\n    /// @notice Transfers the full amount of a token held by this contract to recipient\r\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\r\n    /// @param token The contract address of the token which will be transferred to `recipient`\r\n    /// @param amountMinimum The minimum amount of token required for a transfer\r\n    /// @param recipient The destination address of the token\r\n    function sweepToken(\r\n        address token,\r\n        uint256 amountMinimum,\r\n        address recipient\r\n    ) external payable;\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"contracts_rename/interfaces/IPeripheryImmutableState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Immutable state\r\n/// @notice Functions that return immutable state of the router\r\ninterface IPeripheryImmutableState {\r\n    /// @return Returns the address of the Uniswap V3 factory\r\n    function factory() external view returns (address);\r\n\r\n    /// @return Returns the address of WETH9\r\n    function WETH9() external view returns (address);\r\n}"
			},
			"contracts_rename/interfaces/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Callback for IUniswapV3PoolActions#swap\r\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\r\ninterface IUniswapV3SwapCallback {\r\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\r\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\r\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\r\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\r\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\r\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\r\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\r\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\r\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\r\n    function uniswapV3SwapCallback(\r\n        int256 amount0Delta,\r\n        int256 amount1Delta,\r\n        bytes calldata data\r\n    ) external;\r\n}"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IUniswapV3PoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld,\n        uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\n    /// @param sender The address that collects the protocol fees\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IUniswapV3PoolOwnerActions {\n    /// @notice Set the denominator of the protocol's % share of the fees\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\n\n    /// @notice Collect the protocol fee accrued to the pool\n    /// @param recipient The address to which collected protocol fees should be sent\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n    /// @return amount0 The protocol fee collected in token0\n    /// @return amount1 The protocol fee collected in token1\n    function collectProtocol(\n        address recipient,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface IUniswapV3PoolActions {\n    /// @notice Sets the initial price for the pool\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\n    function initialize(uint160 sqrtPriceX96) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount,\n        bytes calldata data\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(\n        address recipient,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface IUniswapV3PoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (\n            int56 tickCumulativeInside,\n            uint160 secondsPerLiquidityInsideX128,\n            uint32 secondsInside\n        );\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IUniswapV3PoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// observationIndex The index of the last oracle observation that was written,\n    /// observationCardinality The current maximum number of observations stored in the pool,\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// feeProtocol The protocol fee for both tokens of the pool.\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\n    /// @dev Protocol fees will never exceed uint128 max in either token\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    function liquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper,\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return _liquidity The amount of liquidity in the position,\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 _liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"IUniswapV3Pool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The pool interface is broken up into many smaller pieces",
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "The interface for a Uniswap V3 Pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"liquidity()": "1a686502",
							"maxLiquidityPerTick()": "70cf754a",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"observations(uint256)": "252c09d7",
							"observe(uint32[])": "883bdbfd",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"setFeeProtocol(uint8,uint8)": "8206a4d1",
							"slot0()": "3850c7bd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2",
							"swap(address,bool,int256,uint160,bytes)": "128acb08",
							"tickBitmap(int16)": "5339c296",
							"tickSpacing()": "d0c93a7c",
							"ticks(int24)": "f30dba93",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"IUniswapV3PoolActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							}
						},
						"title": "Permissionless pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"swap(address,bool,int256,uint160,bytes)": "128acb08"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							}
						},
						"notice": "Contains pool methods that can be called by anyone",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"IUniswapV3PoolDerivedState": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							}
						},
						"title": "Pool state that is not stored",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"observe(uint32[])": "883bdbfd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							}
						},
						"notice": "Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"IUniswapV3PoolEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "Events emitted by a pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {},
						"notice": "Contains all events emitted by the pool",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"IUniswapV3PoolImmutables": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "Pool state that never changes",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"maxLiquidityPerTick()": "70cf754a",
							"tickSpacing()": "d0c93a7c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"IUniswapV3PoolOwnerActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							}
						},
						"title": "Permissioned pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"setFeeProtocol(uint8,uint8)": "8206a4d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							}
						},
						"notice": "Contains pool methods that may only be called by the factory owner",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"IUniswapV3PoolState": {
					"abi": [
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							}
						},
						"title": "Pool state that can change",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"liquidity()": "1a686502",
							"observations(uint256)": "252c09d7",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"slot0()": "3850c7bd",
							"tickBitmap(int16)": "5339c296",
							"ticks(int24)": "f30dba93"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							}
						},
						"notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol": {
				"LowGasSafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Optimized overflow and underflow safe math operations",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":249:1695  library LowGasSafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":249:1695  library LowGasSafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c4415e23a8e27ab955662ee82b9a1ac7d44d3ae5259e85704ce3cbe3d024991f64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c4415e23a8e27ab955662ee82b9a1ac7d44d3ae5259e85704ce3cbe3d024991f64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 COINBASE 0x5E 0x23 0xA8 0xE2 PUSH27 0xB955662EE82B9A1AC7D44D3AE5259E85704CE3CBE3D024991F6473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "249:1446:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c4415e23a8e27ab955662ee82b9a1ac7d44d3ae5259e85704ce3cbe3d024991f64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 COINBASE 0x5E 0x23 0xA8 0xE2 PUSH27 0xB955662EE82B9A1AC7D44D3AE5259E85704CE3CBE3D024991F6473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "249:1446:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(int256,int256)": "infinite",
								"add(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(int256,int256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c4415e23a8e27ab955662ee82b9a1ac7d44d3ae5259e85704ce3cbe3d024991f64736f6c63430008140033",
									".code": [
										{
											"begin": 249,
											"end": 1695,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol",
								"contracts_rename/FlashLoan.sol",
								"contracts_rename/interfaces/CustomCustomTransferHelper.sol",
								"contracts_rename/interfaces/IPeripheryImmutableState.sol",
								"contracts_rename/interfaces/IPeripheryPayments.sol",
								"contracts_rename/interfaces/ISwapRouter.sol",
								"contracts_rename/interfaces/IUniswapV3FlashCallback.sol",
								"contracts_rename/interfaces/IUniswapV3SwapCallback.sol",
								"contracts_rename/interfaces/IWETH9.sol",
								"contracts_rename/interfaces/PeripheryImmutableState.sol",
								"contracts_rename/interfaces/PeripheryPayments.sol",
								"contracts_rename/libraries/CallbackValidation.sol",
								"contracts_rename/libraries/PoolAddress.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Optimized overflow and underflow safe math operations\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":\"LowGasSafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":{\"keccak256\":\"0x86715eb960f18e01ac94e3bba4614ed51a887fa3c5bd1c43bf80aa98e019cf2d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfc1d5d58e59015086b0e65a6c3a2ddad312e2350480510f6c0c8167f3d71a37\",\"dweb:/ipfs/QmQndULYjFsHKHjMAKLMfc12vWbVB5FawtioHtvwcWRJZp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost",
						"version": 1
					}
				}
			},
			"contracts_rename/FlashLoan.sol": {
				"FlashLoan": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "_swapRouter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_factory",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_WETH9",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee1",
									"type": "uint24"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "uint24",
									"name": "fee2",
									"type": "uint24"
								},
								{
									"internalType": "uint24",
									"name": "fee3",
									"type": "uint24"
								}
							],
							"name": "initFlash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "refundETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapRouter",
							"outputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "sweepToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "fee0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "fee1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3FlashCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "unwrapWETH9",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"refundETH()": {
								"details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"
							},
							"sweepToken(address,uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
								"params": {
									"amountMinimum": "The minimum amount of token required for a transfer",
									"recipient": "The destination address of the token",
									"token": "The contract address of the token which will be transferred to `recipient`"
								}
							},
							"uniswapV3FlashCallback(uint256,uint256,bytes)": {
								"details": "fails if the flash is not profitable, meaning the amountOut from the flash is less than the amount borrowed",
								"params": {
									"data": "The data needed in the callback passed as FlashCallbackData from `initFlash`",
									"fee0": "The fee from calling flash for token0",
									"fee1": "The fee from calling flash for token1"
								}
							},
							"unwrapWETH9(uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
								"params": {
									"amountMinimum": "The minimum amount of WETH9 to unwrap",
									"recipient": "The address receiving ETH"
								}
							}
						},
						"title": "Flash contract implementation",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts_rename/FlashLoan.sol\":563:6980  contract FlashLoan is IUniswapV3FlashCallback, PeripheryImmutableState, PeripheryPayments {... */\n  mstore(0x40, 0xe0)\n    /* \"contracts_rename/FlashLoan.sol\":1392:1582  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts_rename/FlashLoan.sol\":1521:1529  _factory */\n  dup2\n    /* \"contracts_rename/FlashLoan.sol\":1531:1537  _WETH9 */\n  dup2\n    /* \"contracts_rename/interfaces/PeripheryImmutableState.sol\":537:545  _factory */\n  dup2\n    /* \"contracts_rename/interfaces/PeripheryImmutableState.sol\":527:545  factory = _factory */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts_rename/interfaces/PeripheryImmutableState.sol\":564:570  _WETH9 */\n  dup1\n    /* \"contracts_rename/interfaces/PeripheryImmutableState.sol\":556:570  WETH9 = _WETH9 */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts_rename/interfaces/PeripheryImmutableState.sol\":470:578  constructor(address _factory, address _WETH9) {... */\n  pop\n  pop\n    /* \"contracts_rename/FlashLoan.sol\":1563:1574  _swapRouter */\n  dup3\n    /* \"contracts_rename/FlashLoan.sol\":1550:1574  swapRouter = _swapRouter */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts_rename/FlashLoan.sol\":1392:1582  constructor(... */\n  pop\n  pop\n  pop\n    /* \"contracts_rename/FlashLoan.sol\":563:6980  contract FlashLoan is IUniswapV3FlashCallback, PeripheryImmutableState, PeripheryPayments {... */\n  jump(tag_8)\n    /* \"#utility.yul\":88:205   */\ntag_10:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_12:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_13:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_25\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:684   */\ntag_14:\n    /* \"#utility.yul\":625:632   */\n  0x00\n    /* \"#utility.yul\":654:678   */\n  tag_27\n    /* \"#utility.yul\":672:677   */\n  dup3\n    /* \"#utility.yul\":654:678   */\n  tag_13\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":643:678   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:684   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":690:852   */\ntag_15:\n    /* \"#utility.yul\":783:827   */\n  tag_29\n    /* \"#utility.yul\":821:826   */\n  dup2\n    /* \"#utility.yul\":783:827   */\n  tag_14\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":776:781   */\n  dup2\n    /* \"#utility.yul\":773:828   */\n  eq\n    /* \"#utility.yul\":763:846   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":842:843   */\n  0x00\n    /* \"#utility.yul\":839:840   */\n  dup1\n    /* \"#utility.yul\":832:844   */\n  revert\n    /* \"#utility.yul\":763:846   */\ntag_30:\n    /* \"#utility.yul\":690:852   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":858:1041   */\ntag_16:\n    /* \"#utility.yul\":935:940   */\n  0x00\n    /* \"#utility.yul\":966:972   */\n  dup2\n    /* \"#utility.yul\":960:973   */\n  mload\n    /* \"#utility.yul\":951:973   */\n  swap1\n  pop\n    /* \"#utility.yul\":982:1035   */\n  tag_32\n    /* \"#utility.yul\":1029:1034   */\n  dup2\n    /* \"#utility.yul\":982:1035   */\n  tag_15\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":858:1041   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1047:1169   */\ntag_17:\n    /* \"#utility.yul\":1120:1144   */\n  tag_34\n    /* \"#utility.yul\":1138:1143   */\n  dup2\n    /* \"#utility.yul\":1120:1144   */\n  tag_13\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1113:1118   */\n  dup2\n    /* \"#utility.yul\":1110:1145   */\n  eq\n    /* \"#utility.yul\":1100:1163   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1159:1160   */\n  0x00\n    /* \"#utility.yul\":1156:1157   */\n  dup1\n    /* \"#utility.yul\":1149:1161   */\n  revert\n    /* \"#utility.yul\":1100:1163   */\ntag_35:\n    /* \"#utility.yul\":1047:1169   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1175:1318   */\ntag_18:\n    /* \"#utility.yul\":1232:1237   */\n  0x00\n    /* \"#utility.yul\":1263:1269   */\n  dup2\n    /* \"#utility.yul\":1257:1270   */\n  mload\n    /* \"#utility.yul\":1248:1270   */\n  swap1\n  pop\n    /* \"#utility.yul\":1279:1312   */\n  tag_37\n    /* \"#utility.yul\":1306:1311   */\n  dup2\n    /* \"#utility.yul\":1279:1312   */\n  tag_17\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1175:1318   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1324:2027   */\ntag_3:\n    /* \"#utility.yul\":1432:1438   */\n  0x00\n    /* \"#utility.yul\":1440:1446   */\n  dup1\n    /* \"#utility.yul\":1448:1454   */\n  0x00\n    /* \"#utility.yul\":1497:1499   */\n  0x60\n    /* \"#utility.yul\":1485:1494   */\n  dup5\n    /* \"#utility.yul\":1476:1483   */\n  dup7\n    /* \"#utility.yul\":1472:1495   */\n  sub\n    /* \"#utility.yul\":1468:1500   */\n  slt\n    /* \"#utility.yul\":1465:1584   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1503:1582   */\n  tag_40\n  tag_10\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1465:1584   */\ntag_39:\n    /* \"#utility.yul\":1623:1624   */\n  0x00\n    /* \"#utility.yul\":1648:1732   */\n  tag_41\n    /* \"#utility.yul\":1724:1731   */\n  dup7\n    /* \"#utility.yul\":1715:1721   */\n  dup3\n    /* \"#utility.yul\":1704:1713   */\n  dup8\n    /* \"#utility.yul\":1700:1722   */\n  add\n    /* \"#utility.yul\":1648:1732   */\n  tag_16\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1638:1732   */\n  swap4\n  pop\n    /* \"#utility.yul\":1594:1742   */\n  pop\n    /* \"#utility.yul\":1781:1783   */\n  0x20\n    /* \"#utility.yul\":1807:1871   */\n  tag_42\n    /* \"#utility.yul\":1863:1870   */\n  dup7\n    /* \"#utility.yul\":1854:1860   */\n  dup3\n    /* \"#utility.yul\":1843:1852   */\n  dup8\n    /* \"#utility.yul\":1839:1861   */\n  add\n    /* \"#utility.yul\":1807:1871   */\n  tag_18\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1797:1871   */\n  swap3\n  pop\n    /* \"#utility.yul\":1752:1881   */\n  pop\n    /* \"#utility.yul\":1920:1922   */\n  0x40\n    /* \"#utility.yul\":1946:2010   */\n  tag_43\n    /* \"#utility.yul\":2002:2009   */\n  dup7\n    /* \"#utility.yul\":1993:1999   */\n  dup3\n    /* \"#utility.yul\":1982:1991   */\n  dup8\n    /* \"#utility.yul\":1978:2000   */\n  add\n    /* \"#utility.yul\":1946:2010   */\n  tag_18\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1936:2010   */\n  swap2\n  pop\n    /* \"#utility.yul\":1891:2020   */\n  pop\n    /* \"#utility.yul\":1324:2027   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"contracts_rename/FlashLoan.sol\":563:6980  contract FlashLoan is IUniswapV3FlashCallback, PeripheryImmutableState, PeripheryPayments {... */\ntag_8:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xa0eca6753fe875977fae7412373db297f3c521f0c3974df73aec87123c16e827\")\n  0x00\n  assignImmutable(\"0x535ebbacc766b9aec6eaef74a72c1c73399b3f83af81812ea51294501adf4ccf\")\n  0x00\n  assignImmutable(\"0xca38719a2a201dc5ea81fbb3263fbdc427c0061a109dbff8c83ff2e8b01f39f7\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts_rename/FlashLoan.sol\":563:6980  contract FlashLoan is IUniswapV3FlashCallback, PeripheryImmutableState, PeripheryPayments {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc31c9c07\n      gt\n      tag_11\n      jumpi\n      dup1\n      0xc31c9c07\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xc45a0155\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xdf2ab5bb\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe9cbafb0\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x12210e8a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x49404b7c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4aa4a4fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x833263e6\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1377:1545  function refundETH() external payable override {... */\n    tag_3:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      stop\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":458:869  function unwrapWETH9(uint256 amountMinimum, address recipient) public payable override {... */\n    tag_4:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      stop\n        /* \"contracts_rename/interfaces/PeripheryImmutableState.sol\":422:461  address public immutable override WETH9 */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts_rename/FlashLoan.sol\":5870:6977  function initFlash(address token0,... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \"contracts_rename/FlashLoan.sol\":739:778  ISwapRouter public immutable swapRouter */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts_rename/interfaces/PeripheryImmutableState.sol\":328:369  address public immutable override factory */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":917:1329  function sweepToken(... */\n    tag_9:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"contracts_rename/FlashLoan.sol\":1987:5181  function uniswapV3FlashCallback(... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1377:1545  function refundETH() external payable override {... */\n    tag_15:\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1463:1464  0 */\n      0x00\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1439:1460  address(this).balance */\n      selfbalance\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1439:1464  address(this).balance > 0 */\n      gt\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1435:1537  if (address(this).balance > 0) CustomTransferHelper.safeTransferETH(msg.sender, address(this).balance) */\n      iszero\n      tag_49\n      jumpi\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1466:1537  CustomTransferHelper.safeTransferETH(msg.sender, address(this).balance) */\n      tag_50\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1503:1513  msg.sender */\n      caller\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1515:1536  address(this).balance */\n      selfbalance\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1466:1502  CustomTransferHelper.safeTransferETH */\n      tag_51\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1466:1537  CustomTransferHelper.safeTransferETH(msg.sender, address(this).balance) */\n      jump\t// in\n    tag_50:\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1435:1537  if (address(this).balance > 0) CustomTransferHelper.safeTransferETH(msg.sender, address(this).balance) */\n    tag_49:\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1377:1545  function refundETH() external payable override {... */\n      jump\t// out\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":458:869  function unwrapWETH9(uint256 amountMinimum, address recipient) public payable override {... */\n    tag_19:\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":556:576  uint256 balanceWETH9 */\n      0x00\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":586:591  WETH9 */\n      immutable(\"0x535ebbacc766b9aec6eaef74a72c1c73399b3f83af81812ea51294501adf4ccf\")\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":579:602  IWETH9(WETH9).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":611:615  this */\n      address\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":579:617  IWETH9(WETH9).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_53:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_55\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_55:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":556:617  uint256 balanceWETH9 = IWETH9(WETH9).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":652:665  amountMinimum */\n      dup3\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":636:648  balanceWETH9 */\n      dup2\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":636:665  balanceWETH9 >= amountMinimum */\n      lt\n      iszero\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":628:688  require(balanceWETH9 >= amountMinimum, 'Insufficient WETH9') */\n      tag_58\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_58:\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":720:721  0 */\n      0x00\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":705:717  balanceWETH9 */\n      dup2\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":705:721  balanceWETH9 > 0 */\n      gt\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":701:862  if (balanceWETH9 > 0) {... */\n      iszero\n      tag_61\n      jumpi\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":745:750  WETH9 */\n      immutable(\"0x535ebbacc766b9aec6eaef74a72c1c73399b3f83af81812ea51294501adf4ccf\")\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":738:760  IWETH9(WETH9).withdraw */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2e1a7d4d\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":761:773  balanceWETH9 */\n      dup3\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":738:774  IWETH9(WETH9).withdraw(balanceWETH9) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_66\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":789:850  CustomTransferHelper.safeTransferETH(recipient, balanceWETH9) */\n      tag_67\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":826:835  recipient */\n      dup3\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":837:849  balanceWETH9 */\n      dup3\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":789:825  CustomTransferHelper.safeTransferETH */\n      tag_51\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":789:850  CustomTransferHelper.safeTransferETH(recipient, balanceWETH9) */\n      jump\t// in\n    tag_67:\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":701:862  if (balanceWETH9 > 0) {... */\n    tag_61:\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":545:869  {... */\n      pop\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":458:869  function unwrapWETH9(uint256 amountMinimum, address recipient) public payable override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts_rename/interfaces/PeripheryImmutableState.sol\":422:461  address public immutable override WETH9 */\n    tag_22:\n      immutable(\"0x535ebbacc766b9aec6eaef74a72c1c73399b3f83af81812ea51294501adf4ccf\")\n      dup2\n      jump\t// out\n        /* \"contracts_rename/FlashLoan.sol\":5870:6977  function initFlash(address token0,... */\n    tag_29:\n        /* \"contracts_rename/FlashLoan.sol\":6068:6102  PoolAddress.PoolKey memory poolKey */\n      0x00\n        /* \"contracts_rename/FlashLoan.sol\":6118:6182  PoolAddress.PoolKey({token0: token0, token1: token1, fee: fee1}) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts_rename/FlashLoan.sol\":6147:6153  token0 */\n      dup10\n        /* \"contracts_rename/FlashLoan.sol\":6118:6182  PoolAddress.PoolKey({token0: token0, token1: token1, fee: fee1}) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts_rename/FlashLoan.sol\":6163:6169  token1 */\n      dup9\n        /* \"contracts_rename/FlashLoan.sol\":6118:6182  PoolAddress.PoolKey({token0: token0, token1: token1, fee: fee1}) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts_rename/FlashLoan.sol\":6176:6180  fee1 */\n      dup8\n        /* \"contracts_rename/FlashLoan.sol\":6118:6182  PoolAddress.PoolKey({token0: token0, token1: token1, fee: fee1}) */\n      0xffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts_rename/FlashLoan.sol\":6068:6182  PoolAddress.PoolKey memory poolKey =... */\n      swap1\n      pop\n        /* \"contracts_rename/FlashLoan.sol\":6193:6212  IUniswapV3Pool pool */\n      0x00\n        /* \"contracts_rename/FlashLoan.sol\":6230:6274  PoolAddress.computeAddress(factory, poolKey) */\n      tag_69\n        /* \"contracts_rename/FlashLoan.sol\":6257:6264  factory */\n      immutable(\"0xca38719a2a201dc5ea81fbb3263fbdc427c0061a109dbff8c83ff2e8b01f39f7\")\n        /* \"contracts_rename/FlashLoan.sol\":6266:6273  poolKey */\n      dup4\n        /* \"contracts_rename/FlashLoan.sol\":6230:6256  PoolAddress.computeAddress */\n      tag_70\n        /* \"contracts_rename/FlashLoan.sol\":6230:6274  PoolAddress.computeAddress(factory, poolKey) */\n      jump\t// in\n    tag_69:\n        /* \"contracts_rename/FlashLoan.sol\":6193:6275  IUniswapV3Pool pool = IUniswapV3Pool(PoolAddress.computeAddress(factory, poolKey)) */\n      swap1\n      pop\n        /* \"contracts_rename/FlashLoan.sol\":6548:6552  pool */\n      dup1\n        /* \"contracts_rename/FlashLoan.sol\":6548:6558  pool.flash */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x490e6cbc\n        /* \"contracts_rename/FlashLoan.sol\":6581:6585  this */\n      address\n        /* \"contracts_rename/FlashLoan.sol\":6601:6608  amount0 */\n      dup9\n        /* \"contracts_rename/FlashLoan.sol\":6623:6630  amount1 */\n      dup9\n        /* \"contracts_rename/FlashLoan.sol\":6674:6943  FlashCallbackData({... */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts_rename/FlashLoan.sol\":6724:6731  amount0 */\n      dup13\n        /* \"contracts_rename/FlashLoan.sol\":6674:6943  FlashCallbackData({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts_rename/FlashLoan.sol\":6763:6770  amount1 */\n      dup12\n        /* \"contracts_rename/FlashLoan.sol\":6674:6943  FlashCallbackData({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts_rename/FlashLoan.sol\":6800:6810  msg.sender */\n      caller\n        /* \"contracts_rename/FlashLoan.sol\":6674:6943  FlashCallbackData({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts_rename/FlashLoan.sol\":6842:6849  poolKey */\n      dup9\n        /* \"contracts_rename/FlashLoan.sol\":6674:6943  FlashCallbackData({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts_rename/FlashLoan.sol\":6882:6886  fee2 */\n      dup11\n        /* \"contracts_rename/FlashLoan.sol\":6674:6943  FlashCallbackData({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts_rename/FlashLoan.sol\":6919:6923  fee3 */\n      dup10\n        /* \"contracts_rename/FlashLoan.sol\":6674:6943  FlashCallbackData({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts_rename/FlashLoan.sol\":6645:6958  abi.encode(... */\n      add(0x20, mload(0x40))\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts_rename/FlashLoan.sol\":6548:6969  pool.flash(... */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_77\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts_rename/FlashLoan.sol\":6057:6977  {... */\n      pop\n      pop\n        /* \"contracts_rename/FlashLoan.sol\":5870:6977  function initFlash(address token0,... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts_rename/FlashLoan.sol\":739:778  ISwapRouter public immutable swapRouter */\n    tag_32:\n      immutable(\"0xa0eca6753fe875977fae7412373db297f3c521f0c3974df73aec87123c16e827\")\n      dup2\n      jump\t// out\n        /* \"contracts_rename/interfaces/PeripheryImmutableState.sol\":328:369  address public immutable override factory */\n    tag_37:\n      immutable(\"0xca38719a2a201dc5ea81fbb3263fbdc427c0061a109dbff8c83ff2e8b01f39f7\")\n      dup2\n      jump\t// out\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":917:1329  function sweepToken(... */\n    tag_42:\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1063:1083  uint256 balanceToken */\n      0x00\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1093:1098  token */\n      dup4\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1086:1109  IERC20(token).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1118:1122  this */\n      address\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1086:1124  IERC20(token).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_79:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_81\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_81:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_82:\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1063:1124  uint256 balanceToken = IERC20(token).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1159:1172  amountMinimum */\n      dup3\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1143:1155  balanceToken */\n      dup2\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1143:1172  balanceToken >= amountMinimum */\n      lt\n      iszero\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1135:1195  require(balanceToken >= amountMinimum, 'Insufficient token') */\n      tag_83\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_83:\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1227:1228  0 */\n      0x00\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1212:1224  balanceToken */\n      dup2\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1212:1228  balanceToken > 0 */\n      gt\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1208:1322  if (balanceToken > 0) {... */\n      iszero\n      tag_86\n      jumpi\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1245:1310  CustomTransferHelper.safeTransfer(token, recipient, balanceToken) */\n      tag_87\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1279:1284  token */\n      dup5\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1286:1295  recipient */\n      dup4\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1297:1309  balanceToken */\n      dup4\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1245:1278  CustomTransferHelper.safeTransfer */\n      tag_88\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1245:1310  CustomTransferHelper.safeTransfer(token, recipient, balanceToken) */\n      jump\t// in\n    tag_87:\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1208:1322  if (balanceToken > 0) {... */\n    tag_86:\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1052:1329  {... */\n      pop\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":917:1329  function sweepToken(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts_rename/FlashLoan.sol\":1987:5181  function uniswapV3FlashCallback(... */\n    tag_47:\n        /* \"contracts_rename/FlashLoan.sol\":2131:2163  FlashCallbackData memory decoded */\n      0x00\n        /* \"contracts_rename/FlashLoan.sol\":2177:2181  data */\n      dup3\n      dup3\n        /* \"contracts_rename/FlashLoan.sol\":2166:2203  abi.decode(data, (FlashCallbackData)) */\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"contracts_rename/FlashLoan.sol\":2131:2203  FlashCallbackData memory decoded = abi.decode(data, (FlashCallbackData)) */\n      swap1\n      pop\n        /* \"contracts_rename/FlashLoan.sol\":2214:2273  CallbackValidation.verifyCallback(factory, decoded.poolKey) */\n      tag_92\n        /* \"contracts_rename/FlashLoan.sol\":2248:2255  factory */\n      immutable(\"0xca38719a2a201dc5ea81fbb3263fbdc427c0061a109dbff8c83ff2e8b01f39f7\")\n        /* \"contracts_rename/FlashLoan.sol\":2257:2264  decoded */\n      dup3\n        /* \"contracts_rename/FlashLoan.sol\":2257:2272  decoded.poolKey */\n      0x60\n      add\n      mload\n        /* \"contracts_rename/FlashLoan.sol\":2214:2247  CallbackValidation.verifyCallback */\n      tag_93\n        /* \"contracts_rename/FlashLoan.sol\":2214:2273  CallbackValidation.verifyCallback(factory, decoded.poolKey) */\n      jump\t// in\n    tag_92:\n      pop\n        /* \"contracts_rename/FlashLoan.sol\":2286:2300  address token0 */\n      0x00\n        /* \"contracts_rename/FlashLoan.sol\":2303:2310  decoded */\n      dup2\n        /* \"contracts_rename/FlashLoan.sol\":2303:2318  decoded.poolKey */\n      0x60\n      add\n      mload\n        /* \"contracts_rename/FlashLoan.sol\":2303:2325  decoded.poolKey.token0 */\n      0x00\n      add\n      mload\n        /* \"contracts_rename/FlashLoan.sol\":2286:2325  address token0 = decoded.poolKey.token0 */\n      swap1\n      pop\n        /* \"contracts_rename/FlashLoan.sol\":2336:2350  address token1 */\n      0x00\n        /* \"contracts_rename/FlashLoan.sol\":2353:2360  decoded */\n      dup3\n        /* \"contracts_rename/FlashLoan.sol\":2353:2368  decoded.poolKey */\n      0x60\n      add\n      mload\n        /* \"contracts_rename/FlashLoan.sol\":2353:2375  decoded.poolKey.token1 */\n      0x20\n      add\n      mload\n        /* \"contracts_rename/FlashLoan.sol\":2336:2375  address token1 = decoded.poolKey.token1 */\n      swap1\n      pop\n        /* \"contracts_rename/FlashLoan.sol\":2388:2466  CustomTransferHelper.safeApprove(token0, address(swapRouter), decoded.amount0) */\n      tag_94\n        /* \"contracts_rename/FlashLoan.sol\":2421:2427  token0 */\n      dup3\n        /* \"contracts_rename/FlashLoan.sol\":2437:2447  swapRouter */\n      immutable(\"0xa0eca6753fe875977fae7412373db297f3c521f0c3974df73aec87123c16e827\")\n        /* \"contracts_rename/FlashLoan.sol\":2450:2457  decoded */\n      dup6\n        /* \"contracts_rename/FlashLoan.sol\":2450:2465  decoded.amount0 */\n      0x00\n      add\n      mload\n        /* \"contracts_rename/FlashLoan.sol\":2388:2420  CustomTransferHelper.safeApprove */\n      tag_95\n        /* \"contracts_rename/FlashLoan.sol\":2388:2466  CustomTransferHelper.safeApprove(token0, address(swapRouter), decoded.amount0) */\n      jump\t// in\n    tag_94:\n        /* \"contracts_rename/FlashLoan.sol\":2477:2555  CustomTransferHelper.safeApprove(token1, address(swapRouter), decoded.amount1) */\n      tag_96\n        /* \"contracts_rename/FlashLoan.sol\":2510:2516  token1 */\n      dup2\n        /* \"contracts_rename/FlashLoan.sol\":2526:2536  swapRouter */\n      immutable(\"0xa0eca6753fe875977fae7412373db297f3c521f0c3974df73aec87123c16e827\")\n        /* \"contracts_rename/FlashLoan.sol\":2539:2546  decoded */\n      dup6\n        /* \"contracts_rename/FlashLoan.sol\":2539:2554  decoded.amount1 */\n      0x20\n      add\n      mload\n        /* \"contracts_rename/FlashLoan.sol\":2477:2509  CustomTransferHelper.safeApprove */\n      tag_95\n        /* \"contracts_rename/FlashLoan.sol\":2477:2555  CustomTransferHelper.safeApprove(token1, address(swapRouter), decoded.amount1) */\n      jump\t// in\n    tag_96:\n        /* \"contracts_rename/FlashLoan.sol\":2659:2677  uint256 amount1Min */\n      0x00\n        /* \"contracts_rename/FlashLoan.sol\":2680:2721  LowGasSafeMath.add(decoded.amount1, fee1) */\n      tag_97\n        /* \"contracts_rename/FlashLoan.sol\":2699:2706  decoded */\n      dup5\n        /* \"contracts_rename/FlashLoan.sol\":2699:2714  decoded.amount1 */\n      0x20\n      add\n      mload\n        /* \"contracts_rename/FlashLoan.sol\":2716:2720  fee1 */\n      dup9\n        /* \"contracts_rename/FlashLoan.sol\":2680:2698  LowGasSafeMath.add */\n      tag_98\n        /* \"contracts_rename/FlashLoan.sol\":2680:2721  LowGasSafeMath.add(decoded.amount1, fee1) */\n      jump\t// in\n    tag_97:\n        /* \"contracts_rename/FlashLoan.sol\":2659:2721  uint256 amount1Min = LowGasSafeMath.add(decoded.amount1, fee1) */\n      swap1\n      pop\n        /* \"contracts_rename/FlashLoan.sol\":2732:2750  uint256 amount0Min */\n      0x00\n        /* \"contracts_rename/FlashLoan.sol\":2753:2794  LowGasSafeMath.add(decoded.amount0, fee0) */\n      tag_99\n        /* \"contracts_rename/FlashLoan.sol\":2772:2779  decoded */\n      dup6\n        /* \"contracts_rename/FlashLoan.sol\":2772:2787  decoded.amount0 */\n      0x00\n      add\n      mload\n        /* \"contracts_rename/FlashLoan.sol\":2789:2793  fee0 */\n      dup11\n        /* \"contracts_rename/FlashLoan.sol\":2753:2771  LowGasSafeMath.add */\n      tag_98\n        /* \"contracts_rename/FlashLoan.sol\":2753:2794  LowGasSafeMath.add(decoded.amount0, fee0) */\n      jump\t// in\n    tag_99:\n        /* \"contracts_rename/FlashLoan.sol\":2732:2794  uint256 amount0Min = LowGasSafeMath.add(decoded.amount0, fee0) */\n      swap1\n      pop\n        /* \"contracts_rename/FlashLoan.sol\":2887:2905  uint256 amountOut0 */\n      0x00\n        /* \"contracts_rename/FlashLoan.sol\":2921:2931  swapRouter */\n      immutable(\"0xa0eca6753fe875977fae7412373db297f3c521f0c3974df73aec87123c16e827\")\n        /* \"contracts_rename/FlashLoan.sol\":2921:2948  swapRouter.exactInputSingle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x414bf389\n        /* \"contracts_rename/FlashLoan.sol\":2967:3380  ISwapRouter.ExactInputSingleParams({... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts_rename/FlashLoan.sol\":3034:3040  token1 */\n      dup8\n        /* \"contracts_rename/FlashLoan.sol\":2967:3380  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts_rename/FlashLoan.sol\":3073:3079  token0 */\n      dup9\n        /* \"contracts_rename/FlashLoan.sol\":2967:3380  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts_rename/FlashLoan.sol\":3107:3114  decoded */\n      dup10\n        /* \"contracts_rename/FlashLoan.sol\":3107:3123  decoded.poolFee2 */\n      0x80\n      add\n      mload\n        /* \"contracts_rename/FlashLoan.sol\":2967:3380  ISwapRouter.ExactInputSingleParams({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts_rename/FlashLoan.sol\":3165:3169  this */\n      address\n        /* \"contracts_rename/FlashLoan.sol\":2967:3380  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts_rename/FlashLoan.sol\":3203:3218  block.timestamp */\n      timestamp\n        /* \"contracts_rename/FlashLoan.sol\":2967:3380  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts_rename/FlashLoan.sol\":3251:3258  decoded */\n      dup10\n        /* \"contracts_rename/FlashLoan.sol\":3251:3266  decoded.amount1 */\n      0x20\n      add\n      mload\n        /* \"contracts_rename/FlashLoan.sol\":2967:3380  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts_rename/FlashLoan.sol\":3307:3317  amount0Min */\n      dup6\n        /* \"contracts_rename/FlashLoan.sol\":2967:3380  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts_rename/FlashLoan.sol\":3359:3360  0 */\n      0x00\n        /* \"contracts_rename/FlashLoan.sol\":2967:3380  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts_rename/FlashLoan.sol\":2921:3395  swapRouter.exactInputSingle(... */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_103\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_103:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_104:\n        /* \"contracts_rename/FlashLoan.sol\":2887:3395  uint256 amountOut0 =... */\n      swap1\n      pop\n        /* \"contracts_rename/FlashLoan.sol\":3489:3507  uint256 amountOut1 */\n      0x00\n        /* \"contracts_rename/FlashLoan.sol\":3523:3533  swapRouter */\n      immutable(\"0xa0eca6753fe875977fae7412373db297f3c521f0c3974df73aec87123c16e827\")\n        /* \"contracts_rename/FlashLoan.sol\":3523:3550  swapRouter.exactInputSingle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x414bf389\n        /* \"contracts_rename/FlashLoan.sol\":3569:3982  ISwapRouter.ExactInputSingleParams({... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts_rename/FlashLoan.sol\":3636:3642  token0 */\n      dup10\n        /* \"contracts_rename/FlashLoan.sol\":3569:3982  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts_rename/FlashLoan.sol\":3675:3681  token1 */\n      dup9\n        /* \"contracts_rename/FlashLoan.sol\":3569:3982  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts_rename/FlashLoan.sol\":3709:3716  decoded */\n      dup11\n        /* \"contracts_rename/FlashLoan.sol\":3709:3725  decoded.poolFee3 */\n      0xa0\n      add\n      mload\n        /* \"contracts_rename/FlashLoan.sol\":3569:3982  ISwapRouter.ExactInputSingleParams({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts_rename/FlashLoan.sol\":3767:3771  this */\n      address\n        /* \"contracts_rename/FlashLoan.sol\":3569:3982  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts_rename/FlashLoan.sol\":3805:3820  block.timestamp */\n      timestamp\n        /* \"contracts_rename/FlashLoan.sol\":3569:3982  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts_rename/FlashLoan.sol\":3853:3860  decoded */\n      dup11\n        /* \"contracts_rename/FlashLoan.sol\":3853:3868  decoded.amount0 */\n      0x00\n      add\n      mload\n        /* \"contracts_rename/FlashLoan.sol\":3569:3982  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts_rename/FlashLoan.sol\":3909:3919  amount1Min */\n      dup8\n        /* \"contracts_rename/FlashLoan.sol\":3569:3982  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts_rename/FlashLoan.sol\":3961:3962  0 */\n      0x00\n        /* \"contracts_rename/FlashLoan.sol\":3569:3982  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts_rename/FlashLoan.sol\":3523:3997  swapRouter.exactInputSingle(... */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_105:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_107\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_107:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_108:\n        /* \"contracts_rename/FlashLoan.sol\":3489:3997  uint256 amountOut1 =... */\n      swap1\n      pop\n        /* \"contracts_rename/FlashLoan.sol\":4113:4132  uint256 amount0Owed */\n      0x00\n        /* \"contracts_rename/FlashLoan.sol\":4135:4176  LowGasSafeMath.add(decoded.amount0, fee0) */\n      tag_109\n        /* \"contracts_rename/FlashLoan.sol\":4154:4161  decoded */\n      dup9\n        /* \"contracts_rename/FlashLoan.sol\":4154:4169  decoded.amount0 */\n      0x00\n      add\n      mload\n        /* \"contracts_rename/FlashLoan.sol\":4171:4175  fee0 */\n      dup14\n        /* \"contracts_rename/FlashLoan.sol\":4135:4153  LowGasSafeMath.add */\n      tag_98\n        /* \"contracts_rename/FlashLoan.sol\":4135:4176  LowGasSafeMath.add(decoded.amount0, fee0) */\n      jump\t// in\n    tag_109:\n        /* \"contracts_rename/FlashLoan.sol\":4113:4176  uint256 amount0Owed = LowGasSafeMath.add(decoded.amount0, fee0) */\n      swap1\n      pop\n        /* \"contracts_rename/FlashLoan.sol\":4187:4206  uint256 amount1Owed */\n      0x00\n        /* \"contracts_rename/FlashLoan.sol\":4209:4250  LowGasSafeMath.add(decoded.amount1, fee1) */\n      tag_110\n        /* \"contracts_rename/FlashLoan.sol\":4228:4235  decoded */\n      dup10\n        /* \"contracts_rename/FlashLoan.sol\":4228:4243  decoded.amount1 */\n      0x20\n      add\n      mload\n        /* \"contracts_rename/FlashLoan.sol\":4245:4249  fee1 */\n      dup14\n        /* \"contracts_rename/FlashLoan.sol\":4209:4227  LowGasSafeMath.add */\n      tag_98\n        /* \"contracts_rename/FlashLoan.sol\":4209:4250  LowGasSafeMath.add(decoded.amount1, fee1) */\n      jump\t// in\n    tag_110:\n        /* \"contracts_rename/FlashLoan.sol\":4187:4250  uint256 amount1Owed = LowGasSafeMath.add(decoded.amount1, fee1) */\n      swap1\n      pop\n        /* \"contracts_rename/FlashLoan.sol\":4263:4331  CustomTransferHelper.safeApprove(token0, address(this), amount0Owed) */\n      tag_111\n        /* \"contracts_rename/FlashLoan.sol\":4296:4302  token0 */\n      dup9\n        /* \"contracts_rename/FlashLoan.sol\":4312:4316  this */\n      address\n        /* \"contracts_rename/FlashLoan.sol\":4319:4330  amount0Owed */\n      dup5\n        /* \"contracts_rename/FlashLoan.sol\":4263:4295  CustomTransferHelper.safeApprove */\n      tag_95\n        /* \"contracts_rename/FlashLoan.sol\":4263:4331  CustomTransferHelper.safeApprove(token0, address(this), amount0Owed) */\n      jump\t// in\n    tag_111:\n        /* \"contracts_rename/FlashLoan.sol\":4342:4410  CustomTransferHelper.safeApprove(token1, address(this), amount1Owed) */\n      tag_112\n        /* \"contracts_rename/FlashLoan.sol\":4375:4381  token1 */\n      dup8\n        /* \"contracts_rename/FlashLoan.sol\":4391:4395  this */\n      address\n        /* \"contracts_rename/FlashLoan.sol\":4398:4409  amount1Owed */\n      dup4\n        /* \"contracts_rename/FlashLoan.sol\":4342:4374  CustomTransferHelper.safeApprove */\n      tag_95\n        /* \"contracts_rename/FlashLoan.sol\":4342:4410  CustomTransferHelper.safeApprove(token1, address(this), amount1Owed) */\n      jump\t// in\n    tag_112:\n        /* \"contracts_rename/FlashLoan.sol\":4441:4442  0 */\n      0x00\n        /* \"contracts_rename/FlashLoan.sol\":4427:4438  amount0Owed */\n      dup3\n        /* \"contracts_rename/FlashLoan.sol\":4427:4442  amount0Owed > 0 */\n      gt\n        /* \"contracts_rename/FlashLoan.sol\":4423:4495  if (amount0Owed > 0) pay(token0, address(this), msg.sender, amount0Owed) */\n      iszero\n      tag_113\n      jumpi\n        /* \"contracts_rename/FlashLoan.sol\":4444:4495  pay(token0, address(this), msg.sender, amount0Owed) */\n      tag_114\n        /* \"contracts_rename/FlashLoan.sol\":4448:4454  token0 */\n      dup9\n        /* \"contracts_rename/FlashLoan.sol\":4464:4468  this */\n      address\n        /* \"contracts_rename/FlashLoan.sol\":4471:4481  msg.sender */\n      caller\n        /* \"contracts_rename/FlashLoan.sol\":4483:4494  amount0Owed */\n      dup6\n        /* \"contracts_rename/FlashLoan.sol\":4444:4447  pay */\n      tag_115\n        /* \"contracts_rename/FlashLoan.sol\":4444:4495  pay(token0, address(this), msg.sender, amount0Owed) */\n      jump\t// in\n    tag_114:\n        /* \"contracts_rename/FlashLoan.sol\":4423:4495  if (amount0Owed > 0) pay(token0, address(this), msg.sender, amount0Owed) */\n    tag_113:\n        /* \"contracts_rename/FlashLoan.sol\":4524:4525  0 */\n      0x00\n        /* \"contracts_rename/FlashLoan.sol\":4510:4521  amount1Owed */\n      dup2\n        /* \"contracts_rename/FlashLoan.sol\":4510:4525  amount1Owed > 0 */\n      gt\n        /* \"contracts_rename/FlashLoan.sol\":4506:4578  if (amount1Owed > 0) pay(token1, address(this), msg.sender, amount1Owed) */\n      iszero\n      tag_116\n      jumpi\n        /* \"contracts_rename/FlashLoan.sol\":4527:4578  pay(token1, address(this), msg.sender, amount1Owed) */\n      tag_117\n        /* \"contracts_rename/FlashLoan.sol\":4531:4537  token1 */\n      dup8\n        /* \"contracts_rename/FlashLoan.sol\":4547:4551  this */\n      address\n        /* \"contracts_rename/FlashLoan.sol\":4554:4564  msg.sender */\n      caller\n        /* \"contracts_rename/FlashLoan.sol\":4566:4577  amount1Owed */\n      dup5\n        /* \"contracts_rename/FlashLoan.sol\":4527:4530  pay */\n      tag_115\n        /* \"contracts_rename/FlashLoan.sol\":4527:4578  pay(token1, address(this), msg.sender, amount1Owed) */\n      jump\t// in\n    tag_117:\n        /* \"contracts_rename/FlashLoan.sol\":4506:4578  if (amount1Owed > 0) pay(token1, address(this), msg.sender, amount1Owed) */\n    tag_116:\n        /* \"contracts_rename/FlashLoan.sol\":4655:4666  amount0Owed */\n      dup2\n        /* \"contracts_rename/FlashLoan.sol\":4642:4652  amountOut0 */\n      dup5\n        /* \"contracts_rename/FlashLoan.sol\":4642:4666  amountOut0 > amount0Owed */\n      gt\n        /* \"contracts_rename/FlashLoan.sol\":4638:4902  if (amountOut0 > amount0Owed) {... */\n      iszero\n      tag_118\n      jumpi\n        /* \"contracts_rename/FlashLoan.sol\":4683:4698  uint256 profit0 */\n      0x00\n        /* \"contracts_rename/FlashLoan.sol\":4701:4744  LowGasSafeMath.sub(amountOut0, amount0Owed) */\n      tag_119\n        /* \"contracts_rename/FlashLoan.sol\":4720:4730  amountOut0 */\n      dup6\n        /* \"contracts_rename/FlashLoan.sol\":4732:4743  amount0Owed */\n      dup5\n        /* \"contracts_rename/FlashLoan.sol\":4701:4719  LowGasSafeMath.sub */\n      tag_120\n        /* \"contracts_rename/FlashLoan.sol\":4701:4744  LowGasSafeMath.sub(amountOut0, amount0Owed) */\n      jump\t// in\n    tag_119:\n        /* \"contracts_rename/FlashLoan.sol\":4683:4744  uint256 profit0 = LowGasSafeMath.sub(amountOut0, amount0Owed) */\n      swap1\n      pop\n        /* \"contracts_rename/FlashLoan.sol\":4761:4825  CustomTransferHelper.safeApprove(token0, address(this), profit0) */\n      tag_121\n        /* \"contracts_rename/FlashLoan.sol\":4794:4800  token0 */\n      dup10\n        /* \"contracts_rename/FlashLoan.sol\":4810:4814  this */\n      address\n        /* \"contracts_rename/FlashLoan.sol\":4817:4824  profit0 */\n      dup4\n        /* \"contracts_rename/FlashLoan.sol\":4761:4793  CustomTransferHelper.safeApprove */\n      tag_95\n        /* \"contracts_rename/FlashLoan.sol\":4761:4825  CustomTransferHelper.safeApprove(token0, address(this), profit0) */\n      jump\t// in\n    tag_121:\n        /* \"contracts_rename/FlashLoan.sol\":4840:4890  pay(token0, address(this), decoded.payer, profit0) */\n      tag_122\n        /* \"contracts_rename/FlashLoan.sol\":4844:4850  token0 */\n      dup10\n        /* \"contracts_rename/FlashLoan.sol\":4860:4864  this */\n      address\n        /* \"contracts_rename/FlashLoan.sol\":4867:4874  decoded */\n      dup13\n        /* \"contracts_rename/FlashLoan.sol\":4867:4880  decoded.payer */\n      0x40\n      add\n      mload\n        /* \"contracts_rename/FlashLoan.sol\":4882:4889  profit0 */\n      dup5\n        /* \"contracts_rename/FlashLoan.sol\":4840:4843  pay */\n      tag_115\n        /* \"contracts_rename/FlashLoan.sol\":4840:4890  pay(token0, address(this), decoded.payer, profit0) */\n      jump\t// in\n    tag_122:\n        /* \"contracts_rename/FlashLoan.sol\":4668:4902  {... */\n      pop\n        /* \"contracts_rename/FlashLoan.sol\":4638:4902  if (amountOut0 > amount0Owed) {... */\n    tag_118:\n        /* \"contracts_rename/FlashLoan.sol\":4929:4940  amount1Owed */\n      dup1\n        /* \"contracts_rename/FlashLoan.sol\":4916:4926  amountOut1 */\n      dup4\n        /* \"contracts_rename/FlashLoan.sol\":4916:4940  amountOut1 > amount1Owed */\n      gt\n        /* \"contracts_rename/FlashLoan.sol\":4912:5174  if (amountOut1 > amount1Owed) {... */\n      iszero\n      tag_123\n      jumpi\n        /* \"contracts_rename/FlashLoan.sol\":4957:4972  uint256 profit1 */\n      0x00\n        /* \"contracts_rename/FlashLoan.sol\":4975:5018  LowGasSafeMath.sub(amountOut1, amount1Owed) */\n      tag_124\n        /* \"contracts_rename/FlashLoan.sol\":4994:5004  amountOut1 */\n      dup5\n        /* \"contracts_rename/FlashLoan.sol\":5006:5017  amount1Owed */\n      dup4\n        /* \"contracts_rename/FlashLoan.sol\":4975:4993  LowGasSafeMath.sub */\n      tag_120\n        /* \"contracts_rename/FlashLoan.sol\":4975:5018  LowGasSafeMath.sub(amountOut1, amount1Owed) */\n      jump\t// in\n    tag_124:\n        /* \"contracts_rename/FlashLoan.sol\":4957:5018  uint256 profit1 = LowGasSafeMath.sub(amountOut1, amount1Owed) */\n      swap1\n      pop\n        /* \"contracts_rename/FlashLoan.sol\":5033:5097  CustomTransferHelper.safeApprove(token0, address(this), profit1) */\n      tag_125\n        /* \"contracts_rename/FlashLoan.sol\":5066:5072  token0 */\n      dup10\n        /* \"contracts_rename/FlashLoan.sol\":5082:5086  this */\n      address\n        /* \"contracts_rename/FlashLoan.sol\":5089:5096  profit1 */\n      dup4\n        /* \"contracts_rename/FlashLoan.sol\":5033:5065  CustomTransferHelper.safeApprove */\n      tag_95\n        /* \"contracts_rename/FlashLoan.sol\":5033:5097  CustomTransferHelper.safeApprove(token0, address(this), profit1) */\n      jump\t// in\n    tag_125:\n        /* \"contracts_rename/FlashLoan.sol\":5112:5162  pay(token1, address(this), decoded.payer, profit1) */\n      tag_126\n        /* \"contracts_rename/FlashLoan.sol\":5116:5122  token1 */\n      dup9\n        /* \"contracts_rename/FlashLoan.sol\":5132:5136  this */\n      address\n        /* \"contracts_rename/FlashLoan.sol\":5139:5146  decoded */\n      dup13\n        /* \"contracts_rename/FlashLoan.sol\":5139:5152  decoded.payer */\n      0x40\n      add\n      mload\n        /* \"contracts_rename/FlashLoan.sol\":5154:5161  profit1 */\n      dup5\n        /* \"contracts_rename/FlashLoan.sol\":5112:5115  pay */\n      tag_115\n        /* \"contracts_rename/FlashLoan.sol\":5112:5162  pay(token1, address(this), decoded.payer, profit1) */\n      jump\t// in\n    tag_126:\n        /* \"contracts_rename/FlashLoan.sol\":4942:5174  {... */\n      pop\n        /* \"contracts_rename/FlashLoan.sol\":4912:5174  if (amountOut1 > amount1Owed) {... */\n    tag_123:\n        /* \"contracts_rename/FlashLoan.sol\":2120:5181  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts_rename/FlashLoan.sol\":1987:5181  function uniswapV3FlashCallback(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":2431:2599  function safeTransferETH(address to, uint256 value) internal {... */\n    tag_51:\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":2504:2516  bool success */\n      0x00\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":2522:2524  to */\n      dup3\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":2522:2529  to.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":2537:2542  value */\n      dup3\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":2554:2555  0 */\n      0x00\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":2544:2556  new bytes(0) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_128\n      jumpi\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n    tag_128:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_131\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_131:\n      pop\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":2522:2557  to.call{value: value}(new bytes(0)) */\n      mload(0x40)\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_136\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_135)\n    tag_136:\n      0x60\n      swap2\n      pop\n    tag_135:\n      pop\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":2503:2557  (bool success, ) = to.call{value: value}(new bytes(0)) */\n      pop\n      swap1\n      pop\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":2576:2583  success */\n      dup1\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":2568:2591  require(success, 'STE') */\n      tag_137\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":2492:2599  {... */\n      pop\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":2431:2599  function safeTransferETH(address to, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts_rename/libraries/PoolAddress.sol\":1334:1707  function computeAddress(address factory, PoolKey memory key) internal pure returns (address pool) {... */\n    tag_70:\n        /* \"contracts_rename/libraries/PoolAddress.sol\":1418:1430  address pool */\n      0x00\n        /* \"contracts_rename/libraries/PoolAddress.sol\":1460:1463  key */\n      dup2\n        /* \"contracts_rename/libraries/PoolAddress.sol\":1460:1470  key.token1 */\n      0x20\n      add\n      mload\n        /* \"contracts_rename/libraries/PoolAddress.sol\":1447:1470  key.token0 < key.token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts_rename/libraries/PoolAddress.sol\":1447:1450  key */\n      dup3\n        /* \"contracts_rename/libraries/PoolAddress.sol\":1447:1457  key.token0 */\n      0x00\n      add\n      mload\n        /* \"contracts_rename/libraries/PoolAddress.sol\":1447:1470  key.token0 < key.token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n        /* \"contracts_rename/libraries/PoolAddress.sol\":1439:1471  require(key.token0 < key.token1) */\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n        /* \"contracts_rename/libraries/PoolAddress.sol\":1478:1490  bytes32 hash */\n      0x00\n        /* \"contracts_rename/libraries/PoolAddress.sol\":1548:1555  factory */\n      dup4\n        /* \"contracts_rename/libraries/PoolAddress.sol\":1587:1590  key */\n      dup4\n        /* \"contracts_rename/libraries/PoolAddress.sol\":1587:1597  key.token0 */\n      0x00\n      add\n      mload\n        /* \"contracts_rename/libraries/PoolAddress.sol\":1599:1602  key */\n      dup5\n        /* \"contracts_rename/libraries/PoolAddress.sol\":1599:1609  key.token1 */\n      0x20\n      add\n      mload\n        /* \"contracts_rename/libraries/PoolAddress.sol\":1611:1614  key */\n      dup6\n        /* \"contracts_rename/libraries/PoolAddress.sol\":1611:1618  key.fee */\n      0x40\n      add\n      mload\n        /* \"contracts_rename/libraries/PoolAddress.sol\":1576:1619  abi.encode(key.token0, key.token1, key.fee) */\n      add(0x20, mload(0x40))\n      tag_142\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts_rename/libraries/PoolAddress.sol\":1566:1620  keccak256(abi.encode(key.token0, key.token1, key.fee)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts_rename/libraries/PoolAddress.sol\":244:310  0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54 */\n      0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54\n        /* \"contracts_rename/libraries/PoolAddress.sol\":1631:1650  POOL_INIT_CODE_HASH */\n      0x00\n      shl\n        /* \"contracts_rename/libraries/PoolAddress.sol\":1503:1657  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_144\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts_rename/libraries/PoolAddress.sol\":1493:1658  keccak256(abi.encodePacked(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts_rename/libraries/PoolAddress.sol\":1478:1658  bytes32 hash = keccak256(abi.encodePacked(... */\n      swap1\n      pop\n        /* \"contracts_rename/libraries/PoolAddress.sol\":1696:1700  hash */\n      dup1\n        /* \"contracts_rename/libraries/PoolAddress.sol\":1688:1701  uint256(hash) */\n      0x00\n      shr\n        /* \"contracts_rename/libraries/PoolAddress.sol\":1665:1703  pool = address(uint160(uint256(hash))) */\n      swap2\n      pop\n        /* \"contracts_rename/libraries/PoolAddress.sol\":1432:1707  {... */\n      pop\n        /* \"contracts_rename/libraries/PoolAddress.sol\":1334:1707  function computeAddress(address factory, PoolKey memory key) internal pure returns (address pool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":1245:1561  function safeTransfer(... */\n    tag_88:\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":1364:1376  bool success */\n      0x00\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":1378:1395  bytes memory data */\n      dup1\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":1399:1404  token */\n      dup5\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":1399:1409  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":1433:1457  IERC20.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":1459:1461  to */\n      dup6\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":1463:1468  value */\n      dup6\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":1410:1469  abi.encodeWithSelector(IERC20.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_147\n      swap3\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":1399:1470  token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value)) */\n      mload(0x40)\n      tag_149\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_149:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_152\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_151)\n    tag_152:\n      0x60\n      swap2\n      pop\n    tag_151:\n      pop\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":1363:1470  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":1489:1496  success */\n      dup2\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":1489:1546  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_153\n      jumpi\n      pop\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":1516:1517  0 */\n      0x00\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":1501:1505  data */\n      dup2\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":1501:1512  data.length */\n      mload\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":1501:1517  data.length == 0 */\n      eq\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":1501:1545  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_154\n      jumpi\n      pop\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":1532:1536  data */\n      dup1\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":1521:1545  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_155\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":1501:1545  data.length == 0 || abi.decode(data, (bool)) */\n    tag_154:\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":1489:1546  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_153:\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":1481:1553  require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST') */\n      tag_157\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_157:\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":1352:1561  {... */\n      pop\n      pop\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":1245:1561  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts_rename/libraries/CallbackValidation.sol\":1218:1504  function verifyCallback(address factory, PoolAddress.PoolKey memory poolKey)... */\n    tag_93:\n        /* \"contracts_rename/libraries/CallbackValidation.sol\":1345:1364  IUniswapV3Pool pool */\n      0x00\n        /* \"contracts_rename/libraries/CallbackValidation.sol\":1404:1448  PoolAddress.computeAddress(factory, poolKey) */\n      tag_161\n        /* \"contracts_rename/libraries/CallbackValidation.sol\":1431:1438  factory */\n      dup4\n        /* \"contracts_rename/libraries/CallbackValidation.sol\":1440:1447  poolKey */\n      dup4\n        /* \"contracts_rename/libraries/CallbackValidation.sol\":1404:1430  PoolAddress.computeAddress */\n      tag_70\n        /* \"contracts_rename/libraries/CallbackValidation.sol\":1404:1448  PoolAddress.computeAddress(factory, poolKey) */\n      jump\t// in\n    tag_161:\n        /* \"contracts_rename/libraries/CallbackValidation.sol\":1382:1449  pool = IUniswapV3Pool(PoolAddress.computeAddress(factory, poolKey)) */\n      swap1\n      pop\n        /* \"contracts_rename/libraries/CallbackValidation.sol\":1490:1494  pool */\n      dup1\n        /* \"contracts_rename/libraries/CallbackValidation.sol\":1468:1495  msg.sender == address(pool) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts_rename/libraries/CallbackValidation.sol\":1468:1478  msg.sender */\n      caller\n        /* \"contracts_rename/libraries/CallbackValidation.sol\":1468:1495  msg.sender == address(pool) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts_rename/libraries/CallbackValidation.sol\":1460:1496  require(msg.sender == address(pool)) */\n      tag_162\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_162:\n        /* \"contracts_rename/libraries/CallbackValidation.sol\":1218:1504  function verifyCallback(address factory, PoolAddress.PoolKey memory poolKey)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":1921:2235  function safeApprove(... */\n    tag_95:\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":2039:2051  bool success */\n      0x00\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":2053:2070  bytes memory data */\n      dup1\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":2074:2079  token */\n      dup5\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":2074:2084  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":2108:2131  IERC20.approve.selector */\n      shl(0xe0, 0x095ea7b3)\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":2133:2135  to */\n      dup6\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":2137:2142  value */\n      dup6\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":2085:2143  abi.encodeWithSelector(IERC20.approve.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_164\n      swap3\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":2074:2144  token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      mload(0x40)\n      tag_165\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_165:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_168\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_167)\n    tag_168:\n      0x60\n      swap2\n      pop\n    tag_167:\n      pop\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":2038:2144  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":2163:2170  success */\n      dup2\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":2163:2220  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_169\n      jumpi\n      pop\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":2190:2191  0 */\n      0x00\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":2175:2179  data */\n      dup2\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":2175:2186  data.length */\n      mload\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":2175:2191  data.length == 0 */\n      eq\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":2175:2219  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_170\n      jumpi\n      pop\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":2206:2210  data */\n      dup1\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":2195:2219  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_171\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_171:\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":2175:2219  data.length == 0 || abi.decode(data, (bool)) */\n    tag_170:\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":2163:2220  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_169:\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":2155:2227  require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA') */\n      tag_172\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":2027:2235  {... */\n      pop\n      pop\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":1921:2235  function safeApprove(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":435:546  function add(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_98:\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":493:502  uint256 z */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":537:538  x */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":531:532  y */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":527:528  x */\n      dup5\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":527:532  x + y */\n      tag_176\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":523:532  z = x + y */\n      swap2\n      pop\n      dup2\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":522:538  (z = x + y) >= x */\n      lt\n      iszero\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":514:539  require((z = x + y) >= x) */\n      tag_178\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_178:\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":435:546  function add(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1742:2470  function pay(... */\n    tag_115:\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1895:1900  WETH9 */\n      immutable(\"0x535ebbacc766b9aec6eaef74a72c1c73399b3f83af81812ea51294501adf4ccf\")\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1886:1900  token == WETH9 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1886:1891  token */\n      dup5\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1886:1900  token == WETH9 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1886:1934  token == WETH9 && address(this).balance >= value */\n      dup1\n      iszero\n      tag_180\n      jumpi\n      pop\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1929:1934  value */\n      dup1\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1904:1925  address(this).balance */\n      selfbalance\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1904:1934  address(this).balance >= value */\n      lt\n      iszero\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1886:1934  token == WETH9 && address(this).balance >= value */\n    tag_180:\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1882:2463  if (token == WETH9 && address(this).balance >= value) {... */\n      iszero\n      tag_181\n      jumpi\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1989:1994  WETH9 */\n      immutable(\"0x535ebbacc766b9aec6eaef74a72c1c73399b3f83af81812ea51294501adf4ccf\")\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1982:2003  IWETH9(WETH9).deposit */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd0e30db0\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":2011:2016  value */\n      dup3\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1982:2019  IWETH9(WETH9).deposit{value: value}() */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_182\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_182:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_184\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_184:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":2076:2081  WETH9 */\n      immutable(\"0x535ebbacc766b9aec6eaef74a72c1c73399b3f83af81812ea51294501adf4ccf\")\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":2069:2091  IWETH9(WETH9).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":2092:2101  recipient */\n      dup4\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":2103:2108  value */\n      dup4\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":2069:2109  IWETH9(WETH9).transfer(recipient, value) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap3\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_185:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_187\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_187:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_188\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_188:\n      pop\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1882:2463  if (token == WETH9 && address(this).balance >= value) {... */\n      jump(tag_189)\n    tag_181:\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":2148:2152  this */\n      address\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":2131:2153  payer == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":2131:2136  payer */\n      dup4\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":2131:2153  payer == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":2127:2463  if (payer == address(this)) {... */\n      tag_190\n      jumpi\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":2262:2320  CustomTransferHelper.safeTransfer(token, recipient, value) */\n      tag_191\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":2296:2301  token */\n      dup5\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":2303:2312  recipient */\n      dup4\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":2314:2319  value */\n      dup4\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":2262:2295  CustomTransferHelper.safeTransfer */\n      tag_88\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":2262:2320  CustomTransferHelper.safeTransfer(token, recipient, value) */\n      jump\t// in\n    tag_191:\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":2127:2463  if (payer == address(this)) {... */\n      jump(tag_192)\n    tag_190:\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":2382:2451  CustomTransferHelper.safeTransferFrom(token, payer, recipient, value) */\n      tag_193\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":2420:2425  token */\n      dup5\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":2427:2432  payer */\n      dup5\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":2434:2443  recipient */\n      dup5\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":2445:2450  value */\n      dup5\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":2382:2419  CustomTransferHelper.safeTransferFrom */\n      tag_194\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":2382:2451  CustomTransferHelper.safeTransferFrom(token, payer, recipient, value) */\n      jump\t// in\n    tag_193:\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":2127:2463  if (payer == address(this)) {... */\n    tag_192:\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1882:2463  if (token == WETH9 && address(this).balance >= value) {... */\n    tag_189:\n        /* \"contracts_rename/interfaces/PeripheryPayments.sol\":1742:2470  function pay(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":710:821  function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_120:\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":768:777  uint256 z */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":812:813  x */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":806:807  y */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":802:803  x */\n      dup5\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":802:807  x - y */\n      tag_196\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":798:807  z = x - y */\n      swap2\n      pop\n      dup2\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":797:813  (z = x - y) <= x */\n      gt\n      iszero\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":789:814  require((z = x - y) <= x) */\n      tag_198\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_198:\n        /* \"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":710:821  function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":579:946  function safeTransferFrom(... */\n    tag_194:\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":725:737  bool success */\n      0x00\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":739:756  bytes memory data */\n      dup1\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":773:778  token */\n      dup6\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":773:783  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":807:835  IERC20.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":837:841  from */\n      dup7\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":843:845  to */\n      dup7\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":847:852  value */\n      dup7\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":784:853  abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_200\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":773:854  token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value)) */\n      mload(0x40)\n      tag_202\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_202:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_205\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_204)\n    tag_205:\n      0x60\n      swap2\n      pop\n    tag_204:\n      pop\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":724:854  (bool success, bytes memory data) =... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":873:880  success */\n      dup2\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":873:930  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_206\n      jumpi\n      pop\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":900:901  0 */\n      0x00\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":885:889  data */\n      dup2\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":885:896  data.length */\n      mload\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":885:901  data.length == 0 */\n      eq\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":885:929  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_207\n      jumpi\n      pop\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":916:920  data */\n      dup1\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":905:929  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_208\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_208:\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":885:929  data.length == 0 || abi.decode(data, (bool)) */\n    tag_207:\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":873:930  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_206:\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":865:938  require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF') */\n      tag_209\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_209:\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":713:946  {... */\n      pop\n      pop\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":579:946  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_212:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_213:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_214:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_215:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_216:\n        /* \"#utility.yul\":490:514   */\n      tag_291\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_215\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_292\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_292:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_217:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_294\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_216\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:816   */\n    tag_218:\n        /* \"#utility.yul\":727:734   */\n      0x00\n        /* \"#utility.yul\":767:809   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":760:765   */\n      dup3\n        /* \"#utility.yul\":756:810   */\n      and\n        /* \"#utility.yul\":745:810   */\n      swap1\n      pop\n        /* \"#utility.yul\":690:816   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":822:918   */\n    tag_219:\n        /* \"#utility.yul\":859:866   */\n      0x00\n        /* \"#utility.yul\":888:912   */\n      tag_297\n        /* \"#utility.yul\":906:911   */\n      dup3\n        /* \"#utility.yul\":888:912   */\n      tag_218\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":877:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":822:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_220:\n        /* \"#utility.yul\":997:1021   */\n      tag_299\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_219\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_300\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_300:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_221:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_302\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_220\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_18:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_305\n      tag_213\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":1290:1409   */\n    tag_304:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_306\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_217\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_307\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_221\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_222:\n        /* \"#utility.yul\":1764:1788   */\n      tag_309\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_219\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_24:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_311\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_222\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2120   */\n    tag_223:\n        /* \"#utility.yul\":2065:2072   */\n      0x00\n        /* \"#utility.yul\":2105:2113   */\n      0xffffff\n        /* \"#utility.yul\":2098:2103   */\n      dup3\n        /* \"#utility.yul\":2094:2114   */\n      and\n        /* \"#utility.yul\":2083:2114   */\n      swap1\n      pop\n        /* \"#utility.yul\":2029:2120   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2126:2246   */\n    tag_224:\n        /* \"#utility.yul\":2198:2221   */\n      tag_314\n        /* \"#utility.yul\":2215:2220   */\n      dup2\n        /* \"#utility.yul\":2198:2221   */\n      tag_223\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":2191:2196   */\n      dup2\n        /* \"#utility.yul\":2188:2222   */\n      eq\n        /* \"#utility.yul\":2178:2240   */\n      tag_315\n      jumpi\n        /* \"#utility.yul\":2236:2237   */\n      0x00\n        /* \"#utility.yul\":2233:2234   */\n      dup1\n        /* \"#utility.yul\":2226:2238   */\n      revert\n        /* \"#utility.yul\":2178:2240   */\n    tag_315:\n        /* \"#utility.yul\":2126:2246   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2252:2389   */\n    tag_225:\n        /* \"#utility.yul\":2297:2302   */\n      0x00\n        /* \"#utility.yul\":2335:2341   */\n      dup2\n        /* \"#utility.yul\":2322:2342   */\n      calldataload\n        /* \"#utility.yul\":2313:2342   */\n      swap1\n      pop\n        /* \"#utility.yul\":2351:2383   */\n      tag_317\n        /* \"#utility.yul\":2377:2382   */\n      dup2\n        /* \"#utility.yul\":2351:2383   */\n      tag_224\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":2252:2389   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2395:3592   */\n    tag_28:\n        /* \"#utility.yul\":2505:2511   */\n      0x00\n        /* \"#utility.yul\":2513:2519   */\n      dup1\n        /* \"#utility.yul\":2521:2527   */\n      0x00\n        /* \"#utility.yul\":2529:2535   */\n      dup1\n        /* \"#utility.yul\":2537:2543   */\n      0x00\n        /* \"#utility.yul\":2545:2551   */\n      dup1\n        /* \"#utility.yul\":2553:2559   */\n      0x00\n        /* \"#utility.yul\":2602:2605   */\n      0xe0\n        /* \"#utility.yul\":2590:2599   */\n      dup9\n        /* \"#utility.yul\":2581:2588   */\n      dup11\n        /* \"#utility.yul\":2577:2600   */\n      sub\n        /* \"#utility.yul\":2573:2606   */\n      slt\n        /* \"#utility.yul\":2570:2690   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":2609:2688   */\n      tag_320\n      tag_213\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":2570:2690   */\n    tag_319:\n        /* \"#utility.yul\":2729:2730   */\n      0x00\n        /* \"#utility.yul\":2754:2807   */\n      tag_321\n        /* \"#utility.yul\":2799:2806   */\n      dup11\n        /* \"#utility.yul\":2790:2796   */\n      dup3\n        /* \"#utility.yul\":2779:2788   */\n      dup12\n        /* \"#utility.yul\":2775:2797   */\n      add\n        /* \"#utility.yul\":2754:2807   */\n      tag_221\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":2744:2807   */\n      swap8\n      pop\n        /* \"#utility.yul\":2700:2817   */\n      pop\n        /* \"#utility.yul\":2856:2858   */\n      0x20\n        /* \"#utility.yul\":2882:2935   */\n      tag_322\n        /* \"#utility.yul\":2927:2934   */\n      dup11\n        /* \"#utility.yul\":2918:2924   */\n      dup3\n        /* \"#utility.yul\":2907:2916   */\n      dup12\n        /* \"#utility.yul\":2903:2925   */\n      add\n        /* \"#utility.yul\":2882:2935   */\n      tag_221\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":2872:2935   */\n      swap7\n      pop\n        /* \"#utility.yul\":2827:2945   */\n      pop\n        /* \"#utility.yul\":2984:2986   */\n      0x40\n        /* \"#utility.yul\":3010:3062   */\n      tag_323\n        /* \"#utility.yul\":3054:3061   */\n      dup11\n        /* \"#utility.yul\":3045:3051   */\n      dup3\n        /* \"#utility.yul\":3034:3043   */\n      dup12\n        /* \"#utility.yul\":3030:3052   */\n      add\n        /* \"#utility.yul\":3010:3062   */\n      tag_225\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":3000:3062   */\n      swap6\n      pop\n        /* \"#utility.yul\":2955:3072   */\n      pop\n        /* \"#utility.yul\":3111:3113   */\n      0x60\n        /* \"#utility.yul\":3137:3190   */\n      tag_324\n        /* \"#utility.yul\":3182:3189   */\n      dup11\n        /* \"#utility.yul\":3173:3179   */\n      dup3\n        /* \"#utility.yul\":3162:3171   */\n      dup12\n        /* \"#utility.yul\":3158:3180   */\n      add\n        /* \"#utility.yul\":3137:3190   */\n      tag_217\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":3127:3190   */\n      swap5\n      pop\n        /* \"#utility.yul\":3082:3200   */\n      pop\n        /* \"#utility.yul\":3239:3242   */\n      0x80\n        /* \"#utility.yul\":3266:3319   */\n      tag_325\n        /* \"#utility.yul\":3311:3318   */\n      dup11\n        /* \"#utility.yul\":3302:3308   */\n      dup3\n        /* \"#utility.yul\":3291:3300   */\n      dup12\n        /* \"#utility.yul\":3287:3309   */\n      add\n        /* \"#utility.yul\":3266:3319   */\n      tag_217\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":3256:3319   */\n      swap4\n      pop\n        /* \"#utility.yul\":3210:3329   */\n      pop\n        /* \"#utility.yul\":3368:3371   */\n      0xa0\n        /* \"#utility.yul\":3395:3447   */\n      tag_326\n        /* \"#utility.yul\":3439:3446   */\n      dup11\n        /* \"#utility.yul\":3430:3436   */\n      dup3\n        /* \"#utility.yul\":3419:3428   */\n      dup12\n        /* \"#utility.yul\":3415:3437   */\n      add\n        /* \"#utility.yul\":3395:3447   */\n      tag_225\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":3385:3447   */\n      swap3\n      pop\n        /* \"#utility.yul\":3339:3457   */\n      pop\n        /* \"#utility.yul\":3496:3499   */\n      0xc0\n        /* \"#utility.yul\":3523:3575   */\n      tag_327\n        /* \"#utility.yul\":3567:3574   */\n      dup11\n        /* \"#utility.yul\":3558:3564   */\n      dup3\n        /* \"#utility.yul\":3547:3556   */\n      dup12\n        /* \"#utility.yul\":3543:3565   */\n      add\n        /* \"#utility.yul\":3523:3575   */\n      tag_225\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":3513:3575   */\n      swap2\n      pop\n        /* \"#utility.yul\":3467:3585   */\n      pop\n        /* \"#utility.yul\":2395:3592   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3598:3658   */\n    tag_226:\n        /* \"#utility.yul\":3626:3629   */\n      0x00\n        /* \"#utility.yul\":3647:3652   */\n      dup2\n        /* \"#utility.yul\":3640:3652   */\n      swap1\n      pop\n        /* \"#utility.yul\":3598:3658   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3664:3806   */\n    tag_227:\n        /* \"#utility.yul\":3714:3723   */\n      0x00\n        /* \"#utility.yul\":3747:3800   */\n      tag_330\n        /* \"#utility.yul\":3765:3799   */\n      tag_331\n        /* \"#utility.yul\":3774:3798   */\n      tag_332\n        /* \"#utility.yul\":3792:3797   */\n      dup5\n        /* \"#utility.yul\":3774:3798   */\n      tag_218\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":3765:3799   */\n      tag_226\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":3747:3800   */\n      tag_218\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":3734:3800   */\n      swap1\n      pop\n        /* \"#utility.yul\":3664:3806   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3812:3938   */\n    tag_228:\n        /* \"#utility.yul\":3862:3871   */\n      0x00\n        /* \"#utility.yul\":3895:3932   */\n      tag_334\n        /* \"#utility.yul\":3926:3931   */\n      dup3\n        /* \"#utility.yul\":3895:3932   */\n      tag_227\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":3882:3932   */\n      swap1\n      pop\n        /* \"#utility.yul\":3812:3938   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3944:4090   */\n    tag_229:\n        /* \"#utility.yul\":4014:4023   */\n      0x00\n        /* \"#utility.yul\":4047:4084   */\n      tag_336\n        /* \"#utility.yul\":4078:4083   */\n      dup3\n        /* \"#utility.yul\":4047:4084   */\n      tag_228\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":4034:4084   */\n      swap1\n      pop\n        /* \"#utility.yul\":3944:4090   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4096:4267   */\n    tag_230:\n        /* \"#utility.yul\":4203:4260   */\n      tag_338\n        /* \"#utility.yul\":4254:4259   */\n      dup2\n        /* \"#utility.yul\":4203:4260   */\n      tag_229\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":4198:4201   */\n      dup3\n        /* \"#utility.yul\":4191:4261   */\n      mstore\n        /* \"#utility.yul\":4096:4267   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4273:4535   */\n    tag_34:\n        /* \"#utility.yul\":4386:4390   */\n      0x00\n        /* \"#utility.yul\":4424:4426   */\n      0x20\n        /* \"#utility.yul\":4413:4422   */\n      dup3\n        /* \"#utility.yul\":4409:4427   */\n      add\n        /* \"#utility.yul\":4401:4427   */\n      swap1\n      pop\n        /* \"#utility.yul\":4437:4528   */\n      tag_340\n        /* \"#utility.yul\":4525:4526   */\n      0x00\n        /* \"#utility.yul\":4514:4523   */\n      dup4\n        /* \"#utility.yul\":4510:4527   */\n      add\n        /* \"#utility.yul\":4501:4507   */\n      dup5\n        /* \"#utility.yul\":4437:4528   */\n      tag_230\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":4273:4535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4541:5160   */\n    tag_41:\n        /* \"#utility.yul\":4618:4624   */\n      0x00\n        /* \"#utility.yul\":4626:4632   */\n      dup1\n        /* \"#utility.yul\":4634:4640   */\n      0x00\n        /* \"#utility.yul\":4683:4685   */\n      0x60\n        /* \"#utility.yul\":4671:4680   */\n      dup5\n        /* \"#utility.yul\":4662:4669   */\n      dup7\n        /* \"#utility.yul\":4658:4681   */\n      sub\n        /* \"#utility.yul\":4654:4686   */\n      slt\n        /* \"#utility.yul\":4651:4770   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":4689:4768   */\n      tag_343\n      tag_213\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":4651:4770   */\n    tag_342:\n        /* \"#utility.yul\":4809:4810   */\n      0x00\n        /* \"#utility.yul\":4834:4887   */\n      tag_344\n        /* \"#utility.yul\":4879:4886   */\n      dup7\n        /* \"#utility.yul\":4870:4876   */\n      dup3\n        /* \"#utility.yul\":4859:4868   */\n      dup8\n        /* \"#utility.yul\":4855:4877   */\n      add\n        /* \"#utility.yul\":4834:4887   */\n      tag_221\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":4824:4887   */\n      swap4\n      pop\n        /* \"#utility.yul\":4780:4897   */\n      pop\n        /* \"#utility.yul\":4936:4938   */\n      0x20\n        /* \"#utility.yul\":4962:5015   */\n      tag_345\n        /* \"#utility.yul\":5007:5014   */\n      dup7\n        /* \"#utility.yul\":4998:5004   */\n      dup3\n        /* \"#utility.yul\":4987:4996   */\n      dup8\n        /* \"#utility.yul\":4983:5005   */\n      add\n        /* \"#utility.yul\":4962:5015   */\n      tag_217\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":4952:5015   */\n      swap3\n      pop\n        /* \"#utility.yul\":4907:5025   */\n      pop\n        /* \"#utility.yul\":5064:5066   */\n      0x40\n        /* \"#utility.yul\":5090:5143   */\n      tag_346\n        /* \"#utility.yul\":5135:5142   */\n      dup7\n        /* \"#utility.yul\":5126:5132   */\n      dup3\n        /* \"#utility.yul\":5115:5124   */\n      dup8\n        /* \"#utility.yul\":5111:5133   */\n      add\n        /* \"#utility.yul\":5090:5143   */\n      tag_221\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":5080:5143   */\n      swap2\n      pop\n        /* \"#utility.yul\":5035:5153   */\n      pop\n        /* \"#utility.yul\":4541:5160   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5166:5283   */\n    tag_231:\n        /* \"#utility.yul\":5275:5276   */\n      0x00\n        /* \"#utility.yul\":5272:5273   */\n      dup1\n        /* \"#utility.yul\":5265:5277   */\n      revert\n        /* \"#utility.yul\":5289:5406   */\n    tag_232:\n        /* \"#utility.yul\":5398:5399   */\n      0x00\n        /* \"#utility.yul\":5395:5396   */\n      dup1\n        /* \"#utility.yul\":5388:5400   */\n      revert\n        /* \"#utility.yul\":5412:5529   */\n    tag_233:\n        /* \"#utility.yul\":5521:5522   */\n      0x00\n        /* \"#utility.yul\":5518:5519   */\n      dup1\n        /* \"#utility.yul\":5511:5523   */\n      revert\n        /* \"#utility.yul\":5548:6100   */\n    tag_234:\n        /* \"#utility.yul\":5605:5613   */\n      0x00\n        /* \"#utility.yul\":5615:5621   */\n      dup1\n        /* \"#utility.yul\":5665:5668   */\n      dup4\n        /* \"#utility.yul\":5658:5662   */\n      0x1f\n        /* \"#utility.yul\":5650:5656   */\n      dup5\n        /* \"#utility.yul\":5646:5663   */\n      add\n        /* \"#utility.yul\":5642:5669   */\n      slt\n        /* \"#utility.yul\":5632:5754   */\n      tag_351\n      jumpi\n        /* \"#utility.yul\":5673:5752   */\n      tag_352\n      tag_231\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":5632:5754   */\n    tag_351:\n        /* \"#utility.yul\":5786:5792   */\n      dup3\n        /* \"#utility.yul\":5773:5793   */\n      calldataload\n        /* \"#utility.yul\":5763:5793   */\n      swap1\n      pop\n        /* \"#utility.yul\":5816:5834   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5808:5814   */\n      dup2\n        /* \"#utility.yul\":5805:5835   */\n      gt\n        /* \"#utility.yul\":5802:5919   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":5838:5917   */\n      tag_354\n      tag_232\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":5802:5919   */\n    tag_353:\n        /* \"#utility.yul\":5952:5956   */\n      0x20\n        /* \"#utility.yul\":5944:5950   */\n      dup4\n        /* \"#utility.yul\":5940:5957   */\n      add\n        /* \"#utility.yul\":5928:5957   */\n      swap2\n      pop\n        /* \"#utility.yul\":6006:6009   */\n      dup4\n        /* \"#utility.yul\":5998:6002   */\n      0x01\n        /* \"#utility.yul\":5990:5996   */\n      dup3\n        /* \"#utility.yul\":5986:6003   */\n      mul\n        /* \"#utility.yul\":5976:5984   */\n      dup4\n        /* \"#utility.yul\":5972:6004   */\n      add\n        /* \"#utility.yul\":5969:6010   */\n      gt\n        /* \"#utility.yul\":5966:6094   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":6013:6092   */\n      tag_356\n      tag_233\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":5966:6094   */\n    tag_355:\n        /* \"#utility.yul\":5548:6100   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6106:6923   */\n    tag_46:\n        /* \"#utility.yul\":6194:6200   */\n      0x00\n        /* \"#utility.yul\":6202:6208   */\n      dup1\n        /* \"#utility.yul\":6210:6216   */\n      0x00\n        /* \"#utility.yul\":6218:6224   */\n      dup1\n        /* \"#utility.yul\":6267:6269   */\n      0x60\n        /* \"#utility.yul\":6255:6264   */\n      dup6\n        /* \"#utility.yul\":6246:6253   */\n      dup8\n        /* \"#utility.yul\":6242:6265   */\n      sub\n        /* \"#utility.yul\":6238:6270   */\n      slt\n        /* \"#utility.yul\":6235:6354   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":6273:6352   */\n      tag_359\n      tag_213\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":6235:6354   */\n    tag_358:\n        /* \"#utility.yul\":6393:6394   */\n      0x00\n        /* \"#utility.yul\":6418:6471   */\n      tag_360\n        /* \"#utility.yul\":6463:6470   */\n      dup8\n        /* \"#utility.yul\":6454:6460   */\n      dup3\n        /* \"#utility.yul\":6443:6452   */\n      dup9\n        /* \"#utility.yul\":6439:6461   */\n      add\n        /* \"#utility.yul\":6418:6471   */\n      tag_217\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":6408:6471   */\n      swap5\n      pop\n        /* \"#utility.yul\":6364:6481   */\n      pop\n        /* \"#utility.yul\":6520:6522   */\n      0x20\n        /* \"#utility.yul\":6546:6599   */\n      tag_361\n        /* \"#utility.yul\":6591:6598   */\n      dup8\n        /* \"#utility.yul\":6582:6588   */\n      dup3\n        /* \"#utility.yul\":6571:6580   */\n      dup9\n        /* \"#utility.yul\":6567:6589   */\n      add\n        /* \"#utility.yul\":6546:6599   */\n      tag_217\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":6536:6599   */\n      swap4\n      pop\n        /* \"#utility.yul\":6491:6609   */\n      pop\n        /* \"#utility.yul\":6676:6678   */\n      0x40\n        /* \"#utility.yul\":6665:6674   */\n      dup6\n        /* \"#utility.yul\":6661:6679   */\n      add\n        /* \"#utility.yul\":6648:6680   */\n      calldataload\n        /* \"#utility.yul\":6707:6725   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6699:6705   */\n      dup2\n        /* \"#utility.yul\":6696:6726   */\n      gt\n        /* \"#utility.yul\":6693:6810   */\n      iszero\n      tag_362\n      jumpi\n        /* \"#utility.yul\":6729:6808   */\n      tag_363\n      tag_214\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":6693:6810   */\n    tag_362:\n        /* \"#utility.yul\":6842:6906   */\n      tag_364\n        /* \"#utility.yul\":6898:6905   */\n      dup8\n        /* \"#utility.yul\":6889:6895   */\n      dup3\n        /* \"#utility.yul\":6878:6887   */\n      dup9\n        /* \"#utility.yul\":6874:6896   */\n      add\n        /* \"#utility.yul\":6842:6906   */\n      tag_234\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":6824:6906   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":6619:6916   */\n      pop\n        /* \"#utility.yul\":6106:6923   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6929:7072   */\n    tag_235:\n        /* \"#utility.yul\":6986:6991   */\n      0x00\n        /* \"#utility.yul\":7017:7023   */\n      dup2\n        /* \"#utility.yul\":7011:7024   */\n      mload\n        /* \"#utility.yul\":7002:7024   */\n      swap1\n      pop\n        /* \"#utility.yul\":7033:7066   */\n      tag_366\n        /* \"#utility.yul\":7060:7065   */\n      dup2\n        /* \"#utility.yul\":7033:7066   */\n      tag_216\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":6929:7072   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7078:7429   */\n    tag_57:\n        /* \"#utility.yul\":7148:7154   */\n      0x00\n        /* \"#utility.yul\":7197:7199   */\n      0x20\n        /* \"#utility.yul\":7185:7194   */\n      dup3\n        /* \"#utility.yul\":7176:7183   */\n      dup5\n        /* \"#utility.yul\":7172:7195   */\n      sub\n        /* \"#utility.yul\":7168:7200   */\n      slt\n        /* \"#utility.yul\":7165:7284   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":7203:7282   */\n      tag_369\n      tag_213\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":7165:7284   */\n    tag_368:\n        /* \"#utility.yul\":7323:7324   */\n      0x00\n        /* \"#utility.yul\":7348:7412   */\n      tag_370\n        /* \"#utility.yul\":7404:7411   */\n      dup5\n        /* \"#utility.yul\":7395:7401   */\n      dup3\n        /* \"#utility.yul\":7384:7393   */\n      dup6\n        /* \"#utility.yul\":7380:7402   */\n      add\n        /* \"#utility.yul\":7348:7412   */\n      tag_235\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":7338:7412   */\n      swap2\n      pop\n        /* \"#utility.yul\":7294:7422   */\n      pop\n        /* \"#utility.yul\":7078:7429   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7435:7604   */\n    tag_236:\n        /* \"#utility.yul\":7519:7530   */\n      0x00\n        /* \"#utility.yul\":7553:7559   */\n      dup3\n        /* \"#utility.yul\":7548:7551   */\n      dup3\n        /* \"#utility.yul\":7541:7560   */\n      mstore\n        /* \"#utility.yul\":7593:7597   */\n      0x20\n        /* \"#utility.yul\":7588:7591   */\n      dup3\n        /* \"#utility.yul\":7584:7598   */\n      add\n        /* \"#utility.yul\":7569:7598   */\n      swap1\n      pop\n        /* \"#utility.yul\":7435:7604   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7610:7778   */\n    tag_237:\n        /* \"#utility.yul\":7750:7770   */\n      0x496e73756666696369656e742057455448390000000000000000000000000000\n        /* \"#utility.yul\":7746:7747   */\n      0x00\n        /* \"#utility.yul\":7738:7744   */\n      dup3\n        /* \"#utility.yul\":7734:7748   */\n      add\n        /* \"#utility.yul\":7727:7771   */\n      mstore\n        /* \"#utility.yul\":7610:7778   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7784:8150   */\n    tag_238:\n        /* \"#utility.yul\":7926:7929   */\n      0x00\n        /* \"#utility.yul\":7947:8014   */\n      tag_374\n        /* \"#utility.yul\":8011:8013   */\n      0x12\n        /* \"#utility.yul\":8006:8009   */\n      dup4\n        /* \"#utility.yul\":7947:8014   */\n      tag_236\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":7940:8014   */\n      swap2\n      pop\n        /* \"#utility.yul\":8023:8116   */\n      tag_375\n        /* \"#utility.yul\":8112:8115   */\n      dup3\n        /* \"#utility.yul\":8023:8116   */\n      tag_237\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":8141:8143   */\n      0x20\n        /* \"#utility.yul\":8136:8139   */\n      dup3\n        /* \"#utility.yul\":8132:8144   */\n      add\n        /* \"#utility.yul\":8125:8144   */\n      swap1\n      pop\n        /* \"#utility.yul\":7784:8150   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8156:8575   */\n    tag_60:\n        /* \"#utility.yul\":8322:8326   */\n      0x00\n        /* \"#utility.yul\":8360:8362   */\n      0x20\n        /* \"#utility.yul\":8349:8358   */\n      dup3\n        /* \"#utility.yul\":8345:8363   */\n      add\n        /* \"#utility.yul\":8337:8363   */\n      swap1\n      pop\n        /* \"#utility.yul\":8409:8418   */\n      dup2\n        /* \"#utility.yul\":8403:8407   */\n      dup2\n        /* \"#utility.yul\":8399:8419   */\n      sub\n        /* \"#utility.yul\":8395:8396   */\n      0x00\n        /* \"#utility.yul\":8384:8393   */\n      dup4\n        /* \"#utility.yul\":8380:8397   */\n      add\n        /* \"#utility.yul\":8373:8420   */\n      mstore\n        /* \"#utility.yul\":8437:8568   */\n      tag_377\n        /* \"#utility.yul\":8563:8567   */\n      dup2\n        /* \"#utility.yul\":8437:8568   */\n      tag_238\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":8429:8568   */\n      swap1\n      pop\n        /* \"#utility.yul\":8156:8575   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8581:8699   */\n    tag_239:\n        /* \"#utility.yul\":8668:8692   */\n      tag_379\n        /* \"#utility.yul\":8686:8691   */\n      dup2\n        /* \"#utility.yul\":8668:8692   */\n      tag_215\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":8663:8666   */\n      dup3\n        /* \"#utility.yul\":8656:8693   */\n      mstore\n        /* \"#utility.yul\":8581:8699   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8705:8927   */\n    tag_63:\n        /* \"#utility.yul\":8798:8802   */\n      0x00\n        /* \"#utility.yul\":8836:8838   */\n      0x20\n        /* \"#utility.yul\":8825:8834   */\n      dup3\n        /* \"#utility.yul\":8821:8839   */\n      add\n        /* \"#utility.yul\":8813:8839   */\n      swap1\n      pop\n        /* \"#utility.yul\":8849:8920   */\n      tag_381\n        /* \"#utility.yul\":8917:8918   */\n      0x00\n        /* \"#utility.yul\":8906:8915   */\n      dup4\n        /* \"#utility.yul\":8902:8919   */\n      add\n        /* \"#utility.yul\":8893:8899   */\n      dup5\n        /* \"#utility.yul\":8849:8920   */\n      tag_239\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":8705:8927   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8933:9041   */\n    tag_240:\n        /* \"#utility.yul\":9010:9034   */\n      tag_383\n        /* \"#utility.yul\":9028:9033   */\n      dup2\n        /* \"#utility.yul\":9010:9034   */\n      tag_215\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":9005:9008   */\n      dup3\n        /* \"#utility.yul\":8998:9035   */\n      mstore\n        /* \"#utility.yul\":8933:9041   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9047:9155   */\n    tag_241:\n        /* \"#utility.yul\":9124:9148   */\n      tag_385\n        /* \"#utility.yul\":9142:9147   */\n      dup2\n        /* \"#utility.yul\":9124:9148   */\n      tag_219\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":9119:9122   */\n      dup3\n        /* \"#utility.yul\":9112:9149   */\n      mstore\n        /* \"#utility.yul\":9047:9155   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9161:9266   */\n    tag_242:\n        /* \"#utility.yul\":9236:9259   */\n      tag_387\n        /* \"#utility.yul\":9253:9258   */\n      dup2\n        /* \"#utility.yul\":9236:9259   */\n      tag_223\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":9231:9234   */\n      dup3\n        /* \"#utility.yul\":9224:9260   */\n      mstore\n        /* \"#utility.yul\":9161:9266   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9336:10008   */\n    tag_243:\n        /* \"#utility.yul\":9473:9477   */\n      0x60\n        /* \"#utility.yul\":9468:9471   */\n      dup3\n        /* \"#utility.yul\":9464:9478   */\n      add\n        /* \"#utility.yul\":9562:9566   */\n      0x00\n        /* \"#utility.yul\":9555:9560   */\n      dup3\n        /* \"#utility.yul\":9551:9567   */\n      add\n        /* \"#utility.yul\":9545:9568   */\n      mload\n        /* \"#utility.yul\":9581:9644   */\n      tag_389\n        /* \"#utility.yul\":9638:9642   */\n      0x00\n        /* \"#utility.yul\":9633:9636   */\n      dup6\n        /* \"#utility.yul\":9629:9643   */\n      add\n        /* \"#utility.yul\":9615:9627   */\n      dup3\n        /* \"#utility.yul\":9581:9644   */\n      tag_241\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":9488:9654   */\n      pop\n        /* \"#utility.yul\":9738:9742   */\n      0x20\n        /* \"#utility.yul\":9731:9736   */\n      dup3\n        /* \"#utility.yul\":9727:9743   */\n      add\n        /* \"#utility.yul\":9721:9744   */\n      mload\n        /* \"#utility.yul\":9757:9820   */\n      tag_390\n        /* \"#utility.yul\":9814:9818   */\n      0x20\n        /* \"#utility.yul\":9809:9812   */\n      dup6\n        /* \"#utility.yul\":9805:9819   */\n      add\n        /* \"#utility.yul\":9791:9803   */\n      dup3\n        /* \"#utility.yul\":9757:9820   */\n      tag_241\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":9664:9830   */\n      pop\n        /* \"#utility.yul\":9911:9915   */\n      0x40\n        /* \"#utility.yul\":9904:9909   */\n      dup3\n        /* \"#utility.yul\":9900:9916   */\n      add\n        /* \"#utility.yul\":9894:9917   */\n      mload\n        /* \"#utility.yul\":9930:9991   */\n      tag_391\n        /* \"#utility.yul\":9985:9989   */\n      0x40\n        /* \"#utility.yul\":9980:9983   */\n      dup6\n        /* \"#utility.yul\":9976:9990   */\n      add\n        /* \"#utility.yul\":9962:9974   */\n      dup3\n        /* \"#utility.yul\":9930:9991   */\n      tag_242\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":9840:10001   */\n      pop\n        /* \"#utility.yul\":9442:10008   */\n      pop\n        /* \"#utility.yul\":9336:10008   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10094:11381   */\n    tag_244:\n        /* \"#utility.yul\":10259:10265   */\n      0x0100\n        /* \"#utility.yul\":10254:10257   */\n      dup3\n        /* \"#utility.yul\":10250:10266   */\n      add\n        /* \"#utility.yul\":10351:10355   */\n      0x00\n        /* \"#utility.yul\":10344:10349   */\n      dup3\n        /* \"#utility.yul\":10340:10356   */\n      add\n        /* \"#utility.yul\":10334:10357   */\n      mload\n        /* \"#utility.yul\":10370:10433   */\n      tag_393\n        /* \"#utility.yul\":10427:10431   */\n      0x00\n        /* \"#utility.yul\":10422:10425   */\n      dup6\n        /* \"#utility.yul\":10418:10432   */\n      add\n        /* \"#utility.yul\":10404:10416   */\n      dup3\n        /* \"#utility.yul\":10370:10433   */\n      tag_240\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":10276:10443   */\n      pop\n        /* \"#utility.yul\":10528:10532   */\n      0x20\n        /* \"#utility.yul\":10521:10526   */\n      dup3\n        /* \"#utility.yul\":10517:10533   */\n      add\n        /* \"#utility.yul\":10511:10534   */\n      mload\n        /* \"#utility.yul\":10547:10610   */\n      tag_394\n        /* \"#utility.yul\":10604:10608   */\n      0x20\n        /* \"#utility.yul\":10599:10602   */\n      dup6\n        /* \"#utility.yul\":10595:10609   */\n      add\n        /* \"#utility.yul\":10581:10593   */\n      dup3\n        /* \"#utility.yul\":10547:10610   */\n      tag_240\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":10453:10620   */\n      pop\n        /* \"#utility.yul\":10703:10707   */\n      0x40\n        /* \"#utility.yul\":10696:10701   */\n      dup3\n        /* \"#utility.yul\":10692:10708   */\n      add\n        /* \"#utility.yul\":10686:10709   */\n      mload\n        /* \"#utility.yul\":10722:10785   */\n      tag_395\n        /* \"#utility.yul\":10779:10783   */\n      0x40\n        /* \"#utility.yul\":10774:10777   */\n      dup6\n        /* \"#utility.yul\":10770:10784   */\n      add\n        /* \"#utility.yul\":10756:10768   */\n      dup3\n        /* \"#utility.yul\":10722:10785   */\n      tag_241\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":10630:10795   */\n      pop\n        /* \"#utility.yul\":10880:10884   */\n      0x60\n        /* \"#utility.yul\":10873:10878   */\n      dup3\n        /* \"#utility.yul\":10869:10885   */\n      add\n        /* \"#utility.yul\":10863:10886   */\n      mload\n        /* \"#utility.yul\":10899:11012   */\n      tag_396\n        /* \"#utility.yul\":11006:11010   */\n      0x60\n        /* \"#utility.yul\":11001:11004   */\n      dup6\n        /* \"#utility.yul\":10997:11011   */\n      add\n        /* \"#utility.yul\":10983:10995   */\n      dup3\n        /* \"#utility.yul\":10899:11012   */\n      tag_243\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":10805:11022   */\n      pop\n        /* \"#utility.yul\":11108:11112   */\n      0x80\n        /* \"#utility.yul\":11101:11106   */\n      dup3\n        /* \"#utility.yul\":11097:11113   */\n      add\n        /* \"#utility.yul\":11091:11114   */\n      mload\n        /* \"#utility.yul\":11127:11188   */\n      tag_397\n        /* \"#utility.yul\":11182:11186   */\n      0xc0\n        /* \"#utility.yul\":11177:11180   */\n      dup6\n        /* \"#utility.yul\":11173:11187   */\n      add\n        /* \"#utility.yul\":11159:11171   */\n      dup3\n        /* \"#utility.yul\":11127:11188   */\n      tag_242\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":11032:11198   */\n      pop\n        /* \"#utility.yul\":11284:11288   */\n      0xa0\n        /* \"#utility.yul\":11277:11282   */\n      dup3\n        /* \"#utility.yul\":11273:11289   */\n      add\n        /* \"#utility.yul\":11267:11290   */\n      mload\n        /* \"#utility.yul\":11303:11364   */\n      tag_398\n        /* \"#utility.yul\":11358:11362   */\n      0xe0\n        /* \"#utility.yul\":11353:11356   */\n      dup6\n        /* \"#utility.yul\":11349:11363   */\n      add\n        /* \"#utility.yul\":11335:11347   */\n      dup3\n        /* \"#utility.yul\":11303:11364   */\n      tag_242\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":11208:11374   */\n      pop\n        /* \"#utility.yul\":10228:11381   */\n      pop\n        /* \"#utility.yul\":10094:11381   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11387:11746   */\n    tag_72:\n        /* \"#utility.yul\":11548:11552   */\n      0x00\n        /* \"#utility.yul\":11586:11589   */\n      0x0100\n        /* \"#utility.yul\":11575:11584   */\n      dup3\n        /* \"#utility.yul\":11571:11590   */\n      add\n        /* \"#utility.yul\":11563:11590   */\n      swap1\n      pop\n        /* \"#utility.yul\":11600:11739   */\n      tag_400\n        /* \"#utility.yul\":11736:11737   */\n      0x00\n        /* \"#utility.yul\":11725:11734   */\n      dup4\n        /* \"#utility.yul\":11721:11738   */\n      add\n        /* \"#utility.yul\":11712:11718   */\n      dup5\n        /* \"#utility.yul\":11600:11739   */\n      tag_244\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":11387:11746   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11752:11850   */\n    tag_245:\n        /* \"#utility.yul\":11803:11809   */\n      0x00\n        /* \"#utility.yul\":11837:11842   */\n      dup2\n        /* \"#utility.yul\":11831:11843   */\n      mload\n        /* \"#utility.yul\":11821:11843   */\n      swap1\n      pop\n        /* \"#utility.yul\":11752:11850   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11856:12024   */\n    tag_246:\n        /* \"#utility.yul\":11939:11950   */\n      0x00\n        /* \"#utility.yul\":11973:11979   */\n      dup3\n        /* \"#utility.yul\":11968:11971   */\n      dup3\n        /* \"#utility.yul\":11961:11980   */\n      mstore\n        /* \"#utility.yul\":12013:12017   */\n      0x20\n        /* \"#utility.yul\":12008:12011   */\n      dup3\n        /* \"#utility.yul\":12004:12018   */\n      add\n        /* \"#utility.yul\":11989:12018   */\n      swap1\n      pop\n        /* \"#utility.yul\":11856:12024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12030:12276   */\n    tag_247:\n        /* \"#utility.yul\":12111:12112   */\n      0x00\n        /* \"#utility.yul\":12121:12234   */\n    tag_404:\n        /* \"#utility.yul\":12135:12141   */\n      dup4\n        /* \"#utility.yul\":12132:12133   */\n      dup2\n        /* \"#utility.yul\":12129:12142   */\n      lt\n        /* \"#utility.yul\":12121:12234   */\n      iszero\n      tag_406\n      jumpi\n        /* \"#utility.yul\":12220:12221   */\n      dup1\n        /* \"#utility.yul\":12215:12218   */\n      dup3\n        /* \"#utility.yul\":12211:12222   */\n      add\n        /* \"#utility.yul\":12205:12223   */\n      mload\n        /* \"#utility.yul\":12201:12202   */\n      dup2\n        /* \"#utility.yul\":12196:12199   */\n      dup5\n        /* \"#utility.yul\":12192:12203   */\n      add\n        /* \"#utility.yul\":12185:12224   */\n      mstore\n        /* \"#utility.yul\":12157:12159   */\n      0x20\n        /* \"#utility.yul\":12154:12155   */\n      dup2\n        /* \"#utility.yul\":12150:12160   */\n      add\n        /* \"#utility.yul\":12145:12160   */\n      swap1\n      pop\n        /* \"#utility.yul\":12121:12234   */\n      jump(tag_404)\n    tag_406:\n        /* \"#utility.yul\":12268:12269   */\n      0x00\n        /* \"#utility.yul\":12259:12265   */\n      dup5\n        /* \"#utility.yul\":12254:12257   */\n      dup5\n        /* \"#utility.yul\":12250:12266   */\n      add\n        /* \"#utility.yul\":12243:12270   */\n      mstore\n        /* \"#utility.yul\":12092:12276   */\n      pop\n        /* \"#utility.yul\":12030:12276   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12282:12384   */\n    tag_248:\n        /* \"#utility.yul\":12323:12329   */\n      0x00\n        /* \"#utility.yul\":12374:12376   */\n      0x1f\n        /* \"#utility.yul\":12370:12377   */\n      not\n        /* \"#utility.yul\":12365:12367   */\n      0x1f\n        /* \"#utility.yul\":12358:12363   */\n      dup4\n        /* \"#utility.yul\":12354:12368   */\n      add\n        /* \"#utility.yul\":12350:12378   */\n      and\n        /* \"#utility.yul\":12340:12378   */\n      swap1\n      pop\n        /* \"#utility.yul\":12282:12384   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12390:12763   */\n    tag_249:\n        /* \"#utility.yul\":12476:12479   */\n      0x00\n        /* \"#utility.yul\":12504:12542   */\n      tag_409\n        /* \"#utility.yul\":12536:12541   */\n      dup3\n        /* \"#utility.yul\":12504:12542   */\n      tag_245\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":12558:12628   */\n      tag_410\n        /* \"#utility.yul\":12621:12627   */\n      dup2\n        /* \"#utility.yul\":12616:12619   */\n      dup6\n        /* \"#utility.yul\":12558:12628   */\n      tag_246\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":12551:12628   */\n      swap4\n      pop\n        /* \"#utility.yul\":12637:12702   */\n      tag_411\n        /* \"#utility.yul\":12695:12701   */\n      dup2\n        /* \"#utility.yul\":12690:12693   */\n      dup6\n        /* \"#utility.yul\":12683:12687   */\n      0x20\n        /* \"#utility.yul\":12676:12681   */\n      dup7\n        /* \"#utility.yul\":12672:12688   */\n      add\n        /* \"#utility.yul\":12637:12702   */\n      tag_247\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":12727:12756   */\n      tag_412\n        /* \"#utility.yul\":12749:12755   */\n      dup2\n        /* \"#utility.yul\":12727:12756   */\n      tag_248\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":12722:12725   */\n      dup5\n        /* \"#utility.yul\":12718:12757   */\n      add\n        /* \"#utility.yul\":12711:12757   */\n      swap2\n      pop\n        /* \"#utility.yul\":12480:12763   */\n      pop\n        /* \"#utility.yul\":12390:12763   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12769:13409   */\n    tag_74:\n        /* \"#utility.yul\":12964:12968   */\n      0x00\n        /* \"#utility.yul\":13002:13005   */\n      0x80\n        /* \"#utility.yul\":12991:13000   */\n      dup3\n        /* \"#utility.yul\":12987:13006   */\n      add\n        /* \"#utility.yul\":12979:13006   */\n      swap1\n      pop\n        /* \"#utility.yul\":13016:13087   */\n      tag_414\n        /* \"#utility.yul\":13084:13085   */\n      0x00\n        /* \"#utility.yul\":13073:13082   */\n      dup4\n        /* \"#utility.yul\":13069:13086   */\n      add\n        /* \"#utility.yul\":13060:13066   */\n      dup8\n        /* \"#utility.yul\":13016:13087   */\n      tag_222\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":13097:13169   */\n      tag_415\n        /* \"#utility.yul\":13165:13167   */\n      0x20\n        /* \"#utility.yul\":13154:13163   */\n      dup4\n        /* \"#utility.yul\":13150:13168   */\n      add\n        /* \"#utility.yul\":13141:13147   */\n      dup7\n        /* \"#utility.yul\":13097:13169   */\n      tag_239\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":13179:13251   */\n      tag_416\n        /* \"#utility.yul\":13247:13249   */\n      0x40\n        /* \"#utility.yul\":13236:13245   */\n      dup4\n        /* \"#utility.yul\":13232:13250   */\n      add\n        /* \"#utility.yul\":13223:13229   */\n      dup6\n        /* \"#utility.yul\":13179:13251   */\n      tag_239\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":13298:13307   */\n      dup2\n        /* \"#utility.yul\":13292:13296   */\n      dup2\n        /* \"#utility.yul\":13288:13308   */\n      sub\n        /* \"#utility.yul\":13283:13285   */\n      0x60\n        /* \"#utility.yul\":13272:13281   */\n      dup4\n        /* \"#utility.yul\":13268:13286   */\n      add\n        /* \"#utility.yul\":13261:13309   */\n      mstore\n        /* \"#utility.yul\":13326:13402   */\n      tag_417\n        /* \"#utility.yul\":13397:13401   */\n      dup2\n        /* \"#utility.yul\":13388:13394   */\n      dup5\n        /* \"#utility.yul\":13326:13402   */\n      tag_249\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":13318:13402   */\n      swap1\n      pop\n        /* \"#utility.yul\":12769:13409   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13415:13583   */\n    tag_250:\n        /* \"#utility.yul\":13555:13575   */\n      0x496e73756666696369656e7420746f6b656e0000000000000000000000000000\n        /* \"#utility.yul\":13551:13552   */\n      0x00\n        /* \"#utility.yul\":13543:13549   */\n      dup3\n        /* \"#utility.yul\":13539:13553   */\n      add\n        /* \"#utility.yul\":13532:13576   */\n      mstore\n        /* \"#utility.yul\":13415:13583   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13589:13955   */\n    tag_251:\n        /* \"#utility.yul\":13731:13734   */\n      0x00\n        /* \"#utility.yul\":13752:13819   */\n      tag_420\n        /* \"#utility.yul\":13816:13818   */\n      0x12\n        /* \"#utility.yul\":13811:13814   */\n      dup4\n        /* \"#utility.yul\":13752:13819   */\n      tag_236\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":13745:13819   */\n      swap2\n      pop\n        /* \"#utility.yul\":13828:13921   */\n      tag_421\n        /* \"#utility.yul\":13917:13920   */\n      dup3\n        /* \"#utility.yul\":13828:13921   */\n      tag_250\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":13946:13948   */\n      0x20\n        /* \"#utility.yul\":13941:13944   */\n      dup3\n        /* \"#utility.yul\":13937:13949   */\n      add\n        /* \"#utility.yul\":13930:13949   */\n      swap1\n      pop\n        /* \"#utility.yul\":13589:13955   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13961:14380   */\n    tag_85:\n        /* \"#utility.yul\":14127:14131   */\n      0x00\n        /* \"#utility.yul\":14165:14167   */\n      0x20\n        /* \"#utility.yul\":14154:14163   */\n      dup3\n        /* \"#utility.yul\":14150:14168   */\n      add\n        /* \"#utility.yul\":14142:14168   */\n      swap1\n      pop\n        /* \"#utility.yul\":14214:14223   */\n      dup2\n        /* \"#utility.yul\":14208:14212   */\n      dup2\n        /* \"#utility.yul\":14204:14224   */\n      sub\n        /* \"#utility.yul\":14200:14201   */\n      0x00\n        /* \"#utility.yul\":14189:14198   */\n      dup4\n        /* \"#utility.yul\":14185:14202   */\n      add\n        /* \"#utility.yul\":14178:14225   */\n      mstore\n        /* \"#utility.yul\":14242:14373   */\n      tag_423\n        /* \"#utility.yul\":14368:14372   */\n      dup2\n        /* \"#utility.yul\":14242:14373   */\n      tag_251\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":14234:14373   */\n      swap1\n      pop\n        /* \"#utility.yul\":13961:14380   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14386:14503   */\n    tag_252:\n        /* \"#utility.yul\":14495:14496   */\n      0x00\n        /* \"#utility.yul\":14492:14493   */\n      dup1\n        /* \"#utility.yul\":14485:14497   */\n      revert\n        /* \"#utility.yul\":14509:14689   */\n    tag_130:\n        /* \"#utility.yul\":14557:14634   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14554:14555   */\n      0x00\n        /* \"#utility.yul\":14547:14635   */\n      mstore\n        /* \"#utility.yul\":14654:14658   */\n      0x41\n        /* \"#utility.yul\":14651:14652   */\n      0x04\n        /* \"#utility.yul\":14644:14659   */\n      mstore\n        /* \"#utility.yul\":14678:14682   */\n      0x24\n        /* \"#utility.yul\":14675:14676   */\n      0x00\n        /* \"#utility.yul\":14668:14683   */\n      revert\n        /* \"#utility.yul\":14695:14976   */\n    tag_253:\n        /* \"#utility.yul\":14778:14805   */\n      tag_427\n        /* \"#utility.yul\":14800:14804   */\n      dup3\n        /* \"#utility.yul\":14778:14805   */\n      tag_248\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":14770:14776   */\n      dup2\n        /* \"#utility.yul\":14766:14806   */\n      add\n        /* \"#utility.yul\":14908:14914   */\n      dup2\n        /* \"#utility.yul\":14896:14906   */\n      dup2\n        /* \"#utility.yul\":14893:14915   */\n      lt\n        /* \"#utility.yul\":14872:14890   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14860:14870   */\n      dup3\n        /* \"#utility.yul\":14857:14891   */\n      gt\n        /* \"#utility.yul\":14854:14916   */\n      or\n        /* \"#utility.yul\":14851:14939   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":14919:14937   */\n      tag_429\n      tag_130\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":14851:14939   */\n    tag_428:\n        /* \"#utility.yul\":14959:14969   */\n      dup1\n        /* \"#utility.yul\":14955:14957   */\n      0x40\n        /* \"#utility.yul\":14948:14970   */\n      mstore\n        /* \"#utility.yul\":14738:14976   */\n      pop\n        /* \"#utility.yul\":14695:14976   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14982:15111   */\n    tag_254:\n        /* \"#utility.yul\":15016:15022   */\n      0x00\n        /* \"#utility.yul\":15043:15063   */\n      tag_431\n      tag_212\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":15033:15063   */\n      swap1\n      pop\n        /* \"#utility.yul\":15072:15105   */\n      tag_432\n        /* \"#utility.yul\":15100:15104   */\n      dup3\n        /* \"#utility.yul\":15092:15098   */\n      dup3\n        /* \"#utility.yul\":15072:15105   */\n      tag_253\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":14982:15111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15274:16011   */\n    tag_256:\n        /* \"#utility.yul\":15348:15353   */\n      0x00\n        /* \"#utility.yul\":15392:15396   */\n      0x60\n        /* \"#utility.yul\":15380:15389   */\n      dup3\n        /* \"#utility.yul\":15375:15378   */\n      dup5\n        /* \"#utility.yul\":15371:15390   */\n      sub\n        /* \"#utility.yul\":15367:15397   */\n      slt\n        /* \"#utility.yul\":15364:15481   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":15400:15479   */\n      tag_436\n      tag_252\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":15364:15481   */\n    tag_435:\n        /* \"#utility.yul\":15499:15520   */\n      tag_437\n        /* \"#utility.yul\":15515:15519   */\n      0x60\n        /* \"#utility.yul\":15499:15520   */\n      tag_254\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":15490:15520   */\n      swap1\n      pop\n        /* \"#utility.yul\":15581:15582   */\n      0x00\n        /* \"#utility.yul\":15621:15670   */\n      tag_438\n        /* \"#utility.yul\":15666:15669   */\n      dup5\n        /* \"#utility.yul\":15657:15663   */\n      dup3\n        /* \"#utility.yul\":15646:15655   */\n      dup6\n        /* \"#utility.yul\":15642:15664   */\n      add\n        /* \"#utility.yul\":15621:15670   */\n      tag_221\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":15614:15618   */\n      0x00\n        /* \"#utility.yul\":15607:15612   */\n      dup4\n        /* \"#utility.yul\":15603:15619   */\n      add\n        /* \"#utility.yul\":15596:15671   */\n      mstore\n        /* \"#utility.yul\":15530:15682   */\n      pop\n        /* \"#utility.yul\":15743:15745   */\n      0x20\n        /* \"#utility.yul\":15784:15833   */\n      tag_439\n        /* \"#utility.yul\":15829:15832   */\n      dup5\n        /* \"#utility.yul\":15820:15826   */\n      dup3\n        /* \"#utility.yul\":15809:15818   */\n      dup6\n        /* \"#utility.yul\":15805:15827   */\n      add\n        /* \"#utility.yul\":15784:15833   */\n      tag_221\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":15777:15781   */\n      0x20\n        /* \"#utility.yul\":15770:15775   */\n      dup4\n        /* \"#utility.yul\":15766:15782   */\n      add\n        /* \"#utility.yul\":15759:15834   */\n      mstore\n        /* \"#utility.yul\":15692:15845   */\n      pop\n        /* \"#utility.yul\":15903:15905   */\n      0x40\n        /* \"#utility.yul\":15944:15992   */\n      tag_440\n        /* \"#utility.yul\":15988:15991   */\n      dup5\n        /* \"#utility.yul\":15979:15985   */\n      dup3\n        /* \"#utility.yul\":15968:15977   */\n      dup6\n        /* \"#utility.yul\":15964:15986   */\n      add\n        /* \"#utility.yul\":15944:15992   */\n      tag_225\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":15937:15941   */\n      0x40\n        /* \"#utility.yul\":15930:15935   */\n      dup4\n        /* \"#utility.yul\":15926:15942   */\n      add\n        /* \"#utility.yul\":15919:15993   */\n      mstore\n        /* \"#utility.yul\":15855:16004   */\n      pop\n        /* \"#utility.yul\":15274:16011   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16059:17331   */\n    tag_257:\n        /* \"#utility.yul\":16142:16147   */\n      0x00\n        /* \"#utility.yul\":16186:16192   */\n      0x0100\n        /* \"#utility.yul\":16174:16183   */\n      dup3\n        /* \"#utility.yul\":16169:16172   */\n      dup5\n        /* \"#utility.yul\":16165:16184   */\n      sub\n        /* \"#utility.yul\":16161:16193   */\n      slt\n        /* \"#utility.yul\":16158:16277   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":16196:16275   */\n      tag_443\n      tag_252\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":16158:16277   */\n    tag_442:\n        /* \"#utility.yul\":16295:16316   */\n      tag_444\n        /* \"#utility.yul\":16311:16315   */\n      0xc0\n        /* \"#utility.yul\":16295:16316   */\n      tag_254\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":16286:16316   */\n      swap1\n      pop\n        /* \"#utility.yul\":16378:16379   */\n      0x00\n        /* \"#utility.yul\":16418:16467   */\n      tag_445\n        /* \"#utility.yul\":16463:16466   */\n      dup5\n        /* \"#utility.yul\":16454:16460   */\n      dup3\n        /* \"#utility.yul\":16443:16452   */\n      dup6\n        /* \"#utility.yul\":16439:16461   */\n      add\n        /* \"#utility.yul\":16418:16467   */\n      tag_217\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":16411:16415   */\n      0x00\n        /* \"#utility.yul\":16404:16409   */\n      dup4\n        /* \"#utility.yul\":16400:16416   */\n      add\n        /* \"#utility.yul\":16393:16468   */\n      mstore\n        /* \"#utility.yul\":16326:16479   */\n      pop\n        /* \"#utility.yul\":16541:16543   */\n      0x20\n        /* \"#utility.yul\":16582:16631   */\n      tag_446\n        /* \"#utility.yul\":16627:16630   */\n      dup5\n        /* \"#utility.yul\":16618:16624   */\n      dup3\n        /* \"#utility.yul\":16607:16616   */\n      dup6\n        /* \"#utility.yul\":16603:16625   */\n      add\n        /* \"#utility.yul\":16582:16631   */\n      tag_217\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":16575:16579   */\n      0x20\n        /* \"#utility.yul\":16568:16573   */\n      dup4\n        /* \"#utility.yul\":16564:16580   */\n      add\n        /* \"#utility.yul\":16557:16632   */\n      mstore\n        /* \"#utility.yul\":16489:16643   */\n      pop\n        /* \"#utility.yul\":16703:16705   */\n      0x40\n        /* \"#utility.yul\":16744:16793   */\n      tag_447\n        /* \"#utility.yul\":16789:16792   */\n      dup5\n        /* \"#utility.yul\":16780:16786   */\n      dup3\n        /* \"#utility.yul\":16769:16778   */\n      dup6\n        /* \"#utility.yul\":16765:16787   */\n      add\n        /* \"#utility.yul\":16744:16793   */\n      tag_221\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":16737:16741   */\n      0x40\n        /* \"#utility.yul\":16730:16735   */\n      dup4\n        /* \"#utility.yul\":16726:16742   */\n      add\n        /* \"#utility.yul\":16719:16794   */\n      mstore\n        /* \"#utility.yul\":16653:16805   */\n      pop\n        /* \"#utility.yul\":16867:16869   */\n      0x60\n        /* \"#utility.yul\":16908:16982   */\n      tag_448\n        /* \"#utility.yul\":16978:16981   */\n      dup5\n        /* \"#utility.yul\":16969:16975   */\n      dup3\n        /* \"#utility.yul\":16958:16967   */\n      dup6\n        /* \"#utility.yul\":16954:16976   */\n      add\n        /* \"#utility.yul\":16908:16982   */\n      tag_256\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":16901:16905   */\n      0x60\n        /* \"#utility.yul\":16894:16899   */\n      dup4\n        /* \"#utility.yul\":16890:16906   */\n      add\n        /* \"#utility.yul\":16883:16983   */\n      mstore\n        /* \"#utility.yul\":16815:16994   */\n      pop\n        /* \"#utility.yul\":17057:17060   */\n      0xc0\n        /* \"#utility.yul\":17099:17147   */\n      tag_449\n        /* \"#utility.yul\":17143:17146   */\n      dup5\n        /* \"#utility.yul\":17134:17140   */\n      dup3\n        /* \"#utility.yul\":17123:17132   */\n      dup6\n        /* \"#utility.yul\":17119:17141   */\n      add\n        /* \"#utility.yul\":17099:17147   */\n      tag_225\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":17092:17096   */\n      0x80\n        /* \"#utility.yul\":17085:17090   */\n      dup4\n        /* \"#utility.yul\":17081:17097   */\n      add\n        /* \"#utility.yul\":17074:17148   */\n      mstore\n        /* \"#utility.yul\":17004:17159   */\n      pop\n        /* \"#utility.yul\":17222:17225   */\n      0xe0\n        /* \"#utility.yul\":17264:17312   */\n      tag_450\n        /* \"#utility.yul\":17308:17311   */\n      dup5\n        /* \"#utility.yul\":17299:17305   */\n      dup3\n        /* \"#utility.yul\":17288:17297   */\n      dup6\n        /* \"#utility.yul\":17284:17306   */\n      add\n        /* \"#utility.yul\":17264:17312   */\n      tag_225\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":17257:17261   */\n      0xa0\n        /* \"#utility.yul\":17250:17255   */\n      dup4\n        /* \"#utility.yul\":17246:17262   */\n      add\n        /* \"#utility.yul\":17239:17313   */\n      mstore\n        /* \"#utility.yul\":17169:17324   */\n      pop\n        /* \"#utility.yul\":16059:17331   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17337:17735   */\n    tag_91:\n        /* \"#utility.yul\":17430:17436   */\n      0x00\n        /* \"#utility.yul\":17479:17482   */\n      0x0100\n        /* \"#utility.yul\":17467:17476   */\n      dup3\n        /* \"#utility.yul\":17458:17465   */\n      dup5\n        /* \"#utility.yul\":17454:17477   */\n      sub\n        /* \"#utility.yul\":17450:17483   */\n      slt\n        /* \"#utility.yul\":17447:17567   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":17486:17565   */\n      tag_453\n      tag_213\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":17447:17567   */\n    tag_452:\n        /* \"#utility.yul\":17606:17607   */\n      0x00\n        /* \"#utility.yul\":17631:17718   */\n      tag_454\n        /* \"#utility.yul\":17710:17717   */\n      dup5\n        /* \"#utility.yul\":17701:17707   */\n      dup3\n        /* \"#utility.yul\":17690:17699   */\n      dup6\n        /* \"#utility.yul\":17686:17708   */\n      add\n        /* \"#utility.yul\":17631:17718   */\n      tag_257\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":17621:17718   */\n      swap2\n      pop\n        /* \"#utility.yul\":17577:17728   */\n      pop\n        /* \"#utility.yul\":17337:17735   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17741:17849   */\n    tag_258:\n        /* \"#utility.yul\":17818:17842   */\n      tag_456\n        /* \"#utility.yul\":17836:17841   */\n      dup2\n        /* \"#utility.yul\":17818:17842   */\n      tag_218\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":17813:17816   */\n      dup3\n        /* \"#utility.yul\":17806:17843   */\n      mstore\n        /* \"#utility.yul\":17741:17849   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17949:19574   */\n    tag_259:\n        /* \"#utility.yul\":18126:18132   */\n      0x0100\n        /* \"#utility.yul\":18121:18124   */\n      dup3\n        /* \"#utility.yul\":18117:18133   */\n      add\n        /* \"#utility.yul\":18218:18222   */\n      0x00\n        /* \"#utility.yul\":18211:18216   */\n      dup3\n        /* \"#utility.yul\":18207:18223   */\n      add\n        /* \"#utility.yul\":18201:18224   */\n      mload\n        /* \"#utility.yul\":18237:18300   */\n      tag_458\n        /* \"#utility.yul\":18294:18298   */\n      0x00\n        /* \"#utility.yul\":18289:18292   */\n      dup6\n        /* \"#utility.yul\":18285:18299   */\n      add\n        /* \"#utility.yul\":18271:18283   */\n      dup3\n        /* \"#utility.yul\":18237:18300   */\n      tag_241\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":18143:18310   */\n      pop\n        /* \"#utility.yul\":18396:18400   */\n      0x20\n        /* \"#utility.yul\":18389:18394   */\n      dup3\n        /* \"#utility.yul\":18385:18401   */\n      add\n        /* \"#utility.yul\":18379:18402   */\n      mload\n        /* \"#utility.yul\":18415:18478   */\n      tag_459\n        /* \"#utility.yul\":18472:18476   */\n      0x20\n        /* \"#utility.yul\":18467:18470   */\n      dup6\n        /* \"#utility.yul\":18463:18477   */\n      add\n        /* \"#utility.yul\":18449:18461   */\n      dup3\n        /* \"#utility.yul\":18415:18478   */\n      tag_241\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":18320:18488   */\n      pop\n        /* \"#utility.yul\":18569:18573   */\n      0x40\n        /* \"#utility.yul\":18562:18567   */\n      dup3\n        /* \"#utility.yul\":18558:18574   */\n      add\n        /* \"#utility.yul\":18552:18575   */\n      mload\n        /* \"#utility.yul\":18588:18649   */\n      tag_460\n        /* \"#utility.yul\":18643:18647   */\n      0x40\n        /* \"#utility.yul\":18638:18641   */\n      dup6\n        /* \"#utility.yul\":18634:18648   */\n      add\n        /* \"#utility.yul\":18620:18632   */\n      dup3\n        /* \"#utility.yul\":18588:18649   */\n      tag_242\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":18498:18659   */\n      pop\n        /* \"#utility.yul\":18746:18750   */\n      0x60\n        /* \"#utility.yul\":18739:18744   */\n      dup3\n        /* \"#utility.yul\":18735:18751   */\n      add\n        /* \"#utility.yul\":18729:18752   */\n      mload\n        /* \"#utility.yul\":18765:18828   */\n      tag_461\n        /* \"#utility.yul\":18822:18826   */\n      0x60\n        /* \"#utility.yul\":18817:18820   */\n      dup6\n        /* \"#utility.yul\":18813:18827   */\n      add\n        /* \"#utility.yul\":18799:18811   */\n      dup3\n        /* \"#utility.yul\":18765:18828   */\n      tag_241\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":18669:18838   */\n      pop\n        /* \"#utility.yul\":18924:18928   */\n      0x80\n        /* \"#utility.yul\":18917:18922   */\n      dup3\n        /* \"#utility.yul\":18913:18929   */\n      add\n        /* \"#utility.yul\":18907:18930   */\n      mload\n        /* \"#utility.yul\":18943:19006   */\n      tag_462\n        /* \"#utility.yul\":19000:19004   */\n      0x80\n        /* \"#utility.yul\":18995:18998   */\n      dup6\n        /* \"#utility.yul\":18991:19005   */\n      add\n        /* \"#utility.yul\":18977:18989   */\n      dup3\n        /* \"#utility.yul\":18943:19006   */\n      tag_240\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":18848:19016   */\n      pop\n        /* \"#utility.yul\":19102:19106   */\n      0xa0\n        /* \"#utility.yul\":19095:19100   */\n      dup3\n        /* \"#utility.yul\":19091:19107   */\n      add\n        /* \"#utility.yul\":19085:19108   */\n      mload\n        /* \"#utility.yul\":19121:19184   */\n      tag_463\n        /* \"#utility.yul\":19178:19182   */\n      0xa0\n        /* \"#utility.yul\":19173:19176   */\n      dup6\n        /* \"#utility.yul\":19169:19183   */\n      add\n        /* \"#utility.yul\":19155:19167   */\n      dup3\n        /* \"#utility.yul\":19121:19184   */\n      tag_240\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":19026:19194   */\n      pop\n        /* \"#utility.yul\":19288:19292   */\n      0xc0\n        /* \"#utility.yul\":19281:19286   */\n      dup3\n        /* \"#utility.yul\":19277:19293   */\n      add\n        /* \"#utility.yul\":19271:19294   */\n      mload\n        /* \"#utility.yul\":19307:19370   */\n      tag_464\n        /* \"#utility.yul\":19364:19368   */\n      0xc0\n        /* \"#utility.yul\":19359:19362   */\n      dup6\n        /* \"#utility.yul\":19355:19369   */\n      add\n        /* \"#utility.yul\":19341:19353   */\n      dup3\n        /* \"#utility.yul\":19307:19370   */\n      tag_240\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":19204:19380   */\n      pop\n        /* \"#utility.yul\":19475:19479   */\n      0xe0\n        /* \"#utility.yul\":19468:19473   */\n      dup3\n        /* \"#utility.yul\":19464:19480   */\n      add\n        /* \"#utility.yul\":19458:19481   */\n      mload\n        /* \"#utility.yul\":19494:19557   */\n      tag_465\n        /* \"#utility.yul\":19551:19555   */\n      0xe0\n        /* \"#utility.yul\":19546:19549   */\n      dup6\n        /* \"#utility.yul\":19542:19556   */\n      add\n        /* \"#utility.yul\":19528:19540   */\n      dup3\n        /* \"#utility.yul\":19494:19557   */\n      tag_258\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":19390:19567   */\n      pop\n        /* \"#utility.yul\":18095:19574   */\n      pop\n        /* \"#utility.yul\":17949:19574   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19580:19963   */\n    tag_101:\n        /* \"#utility.yul\":19753:19757   */\n      0x00\n        /* \"#utility.yul\":19791:19794   */\n      0x0100\n        /* \"#utility.yul\":19780:19789   */\n      dup3\n        /* \"#utility.yul\":19776:19795   */\n      add\n        /* \"#utility.yul\":19768:19795   */\n      swap1\n      pop\n        /* \"#utility.yul\":19805:19956   */\n      tag_467\n        /* \"#utility.yul\":19953:19954   */\n      0x00\n        /* \"#utility.yul\":19942:19951   */\n      dup4\n        /* \"#utility.yul\":19938:19955   */\n      add\n        /* \"#utility.yul\":19929:19935   */\n      dup5\n        /* \"#utility.yul\":19805:19956   */\n      tag_259\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":19580:19963   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19969:20116   */\n    tag_260:\n        /* \"#utility.yul\":20070:20081   */\n      0x00\n        /* \"#utility.yul\":20107:20110   */\n      dup2\n        /* \"#utility.yul\":20092:20110   */\n      swap1\n      pop\n        /* \"#utility.yul\":19969:20116   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20122:20508   */\n    tag_261:\n        /* \"#utility.yul\":20226:20229   */\n      0x00\n        /* \"#utility.yul\":20254:20292   */\n      tag_470\n        /* \"#utility.yul\":20286:20291   */\n      dup3\n        /* \"#utility.yul\":20254:20292   */\n      tag_245\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":20308:20396   */\n      tag_471\n        /* \"#utility.yul\":20389:20395   */\n      dup2\n        /* \"#utility.yul\":20384:20387   */\n      dup6\n        /* \"#utility.yul\":20308:20396   */\n      tag_260\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":20301:20396   */\n      swap4\n      pop\n        /* \"#utility.yul\":20405:20470   */\n      tag_472\n        /* \"#utility.yul\":20463:20469   */\n      dup2\n        /* \"#utility.yul\":20458:20461   */\n      dup6\n        /* \"#utility.yul\":20451:20455   */\n      0x20\n        /* \"#utility.yul\":20444:20449   */\n      dup7\n        /* \"#utility.yul\":20440:20456   */\n      add\n        /* \"#utility.yul\":20405:20470   */\n      tag_247\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":20495:20501   */\n      dup1\n        /* \"#utility.yul\":20490:20493   */\n      dup5\n        /* \"#utility.yul\":20486:20502   */\n      add\n        /* \"#utility.yul\":20479:20502   */\n      swap2\n      pop\n        /* \"#utility.yul\":20230:20508   */\n      pop\n        /* \"#utility.yul\":20122:20508   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20514:20785   */\n    tag_133:\n        /* \"#utility.yul\":20644:20647   */\n      0x00\n        /* \"#utility.yul\":20666:20759   */\n      tag_474\n        /* \"#utility.yul\":20755:20758   */\n      dup3\n        /* \"#utility.yul\":20746:20752   */\n      dup5\n        /* \"#utility.yul\":20666:20759   */\n      tag_261\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":20659:20759   */\n      swap2\n      pop\n        /* \"#utility.yul\":20776:20779   */\n      dup2\n        /* \"#utility.yul\":20769:20779   */\n      swap1\n      pop\n        /* \"#utility.yul\":20514:20785   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20791:20944   */\n    tag_262:\n        /* \"#utility.yul\":20931:20936   */\n      0x5354450000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20927:20928   */\n      0x00\n        /* \"#utility.yul\":20919:20925   */\n      dup3\n        /* \"#utility.yul\":20915:20929   */\n      add\n        /* \"#utility.yul\":20908:20937   */\n      mstore\n        /* \"#utility.yul\":20791:20944   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20950:21315   */\n    tag_263:\n        /* \"#utility.yul\":21092:21095   */\n      0x00\n        /* \"#utility.yul\":21113:21179   */\n      tag_477\n        /* \"#utility.yul\":21177:21178   */\n      0x03\n        /* \"#utility.yul\":21172:21175   */\n      dup4\n        /* \"#utility.yul\":21113:21179   */\n      tag_236\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":21106:21179   */\n      swap2\n      pop\n        /* \"#utility.yul\":21188:21281   */\n      tag_478\n        /* \"#utility.yul\":21277:21280   */\n      dup3\n        /* \"#utility.yul\":21188:21281   */\n      tag_262\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":21306:21308   */\n      0x20\n        /* \"#utility.yul\":21301:21304   */\n      dup3\n        /* \"#utility.yul\":21297:21309   */\n      add\n        /* \"#utility.yul\":21290:21309   */\n      swap1\n      pop\n        /* \"#utility.yul\":20950:21315   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21321:21740   */\n    tag_139:\n        /* \"#utility.yul\":21487:21491   */\n      0x00\n        /* \"#utility.yul\":21525:21527   */\n      0x20\n        /* \"#utility.yul\":21514:21523   */\n      dup3\n        /* \"#utility.yul\":21510:21528   */\n      add\n        /* \"#utility.yul\":21502:21528   */\n      swap1\n      pop\n        /* \"#utility.yul\":21574:21583   */\n      dup2\n        /* \"#utility.yul\":21568:21572   */\n      dup2\n        /* \"#utility.yul\":21564:21584   */\n      sub\n        /* \"#utility.yul\":21560:21561   */\n      0x00\n        /* \"#utility.yul\":21549:21558   */\n      dup4\n        /* \"#utility.yul\":21545:21562   */\n      add\n        /* \"#utility.yul\":21538:21585   */\n      mstore\n        /* \"#utility.yul\":21602:21733   */\n      tag_480\n        /* \"#utility.yul\":21728:21732   */\n      dup2\n        /* \"#utility.yul\":21602:21733   */\n      tag_263\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":21594:21733   */\n      swap1\n      pop\n        /* \"#utility.yul\":21321:21740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21746:21861   */\n    tag_264:\n        /* \"#utility.yul\":21831:21854   */\n      tag_482\n        /* \"#utility.yul\":21848:21853   */\n      dup2\n        /* \"#utility.yul\":21831:21854   */\n      tag_223\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":21826:21829   */\n      dup3\n        /* \"#utility.yul\":21819:21855   */\n      mstore\n        /* \"#utility.yul\":21746:21861   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21867:22305   */\n    tag_143:\n        /* \"#utility.yul\":22014:22018   */\n      0x00\n        /* \"#utility.yul\":22052:22054   */\n      0x60\n        /* \"#utility.yul\":22041:22050   */\n      dup3\n        /* \"#utility.yul\":22037:22055   */\n      add\n        /* \"#utility.yul\":22029:22055   */\n      swap1\n      pop\n        /* \"#utility.yul\":22065:22136   */\n      tag_484\n        /* \"#utility.yul\":22133:22134   */\n      0x00\n        /* \"#utility.yul\":22122:22131   */\n      dup4\n        /* \"#utility.yul\":22118:22135   */\n      add\n        /* \"#utility.yul\":22109:22115   */\n      dup7\n        /* \"#utility.yul\":22065:22136   */\n      tag_222\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":22146:22218   */\n      tag_485\n        /* \"#utility.yul\":22214:22216   */\n      0x20\n        /* \"#utility.yul\":22203:22212   */\n      dup4\n        /* \"#utility.yul\":22199:22217   */\n      add\n        /* \"#utility.yul\":22190:22196   */\n      dup6\n        /* \"#utility.yul\":22146:22218   */\n      tag_222\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":22228:22298   */\n      tag_486\n        /* \"#utility.yul\":22294:22296   */\n      0x40\n        /* \"#utility.yul\":22283:22292   */\n      dup4\n        /* \"#utility.yul\":22279:22297   */\n      add\n        /* \"#utility.yul\":22270:22276   */\n      dup5\n        /* \"#utility.yul\":22228:22298   */\n      tag_264\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":21867:22305   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22311:22459   */\n    tag_265:\n        /* \"#utility.yul\":22413:22424   */\n      0x00\n        /* \"#utility.yul\":22450:22453   */\n      dup2\n        /* \"#utility.yul\":22435:22453   */\n      swap1\n      pop\n        /* \"#utility.yul\":22311:22459   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22465:22679   */\n    tag_266:\n        /* \"#utility.yul\":22605:22671   */\n      0xff00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22601:22602   */\n      0x00\n        /* \"#utility.yul\":22593:22599   */\n      dup3\n        /* \"#utility.yul\":22589:22603   */\n      add\n        /* \"#utility.yul\":22582:22672   */\n      mstore\n        /* \"#utility.yul\":22465:22679   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22685:23085   */\n    tag_267:\n        /* \"#utility.yul\":22845:22848   */\n      0x00\n        /* \"#utility.yul\":22866:22950   */\n      tag_490\n        /* \"#utility.yul\":22948:22949   */\n      0x01\n        /* \"#utility.yul\":22943:22946   */\n      dup4\n        /* \"#utility.yul\":22866:22950   */\n      tag_265\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":22859:22950   */\n      swap2\n      pop\n        /* \"#utility.yul\":22959:23052   */\n      tag_491\n        /* \"#utility.yul\":23048:23051   */\n      dup3\n        /* \"#utility.yul\":22959:23052   */\n      tag_266\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":23077:23078   */\n      0x01\n        /* \"#utility.yul\":23072:23075   */\n      dup3\n        /* \"#utility.yul\":23068:23079   */\n      add\n        /* \"#utility.yul\":23061:23079   */\n      swap1\n      pop\n        /* \"#utility.yul\":22685:23085   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23091:23185   */\n    tag_268:\n        /* \"#utility.yul\":23124:23132   */\n      0x00\n        /* \"#utility.yul\":23172:23177   */\n      dup2\n        /* \"#utility.yul\":23168:23170   */\n      0x60\n        /* \"#utility.yul\":23164:23178   */\n      shl\n        /* \"#utility.yul\":23143:23178   */\n      swap1\n      pop\n        /* \"#utility.yul\":23091:23185   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23191:23285   */\n    tag_269:\n        /* \"#utility.yul\":23230:23237   */\n      0x00\n        /* \"#utility.yul\":23259:23279   */\n      tag_494\n        /* \"#utility.yul\":23273:23278   */\n      dup3\n        /* \"#utility.yul\":23259:23279   */\n      tag_268\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":23248:23279   */\n      swap1\n      pop\n        /* \"#utility.yul\":23191:23285   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23291:23391   */\n    tag_270:\n        /* \"#utility.yul\":23330:23337   */\n      0x00\n        /* \"#utility.yul\":23359:23385   */\n      tag_496\n        /* \"#utility.yul\":23379:23384   */\n      dup3\n        /* \"#utility.yul\":23359:23385   */\n      tag_269\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":23348:23385   */\n      swap1\n      pop\n        /* \"#utility.yul\":23291:23391   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23397:23554   */\n    tag_271:\n        /* \"#utility.yul\":23502:23547   */\n      tag_498\n        /* \"#utility.yul\":23522:23546   */\n      tag_499\n        /* \"#utility.yul\":23540:23545   */\n      dup3\n        /* \"#utility.yul\":23522:23546   */\n      tag_219\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":23502:23547   */\n      tag_270\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":23497:23500   */\n      dup3\n        /* \"#utility.yul\":23490:23548   */\n      mstore\n        /* \"#utility.yul\":23397:23554   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23560:23637   */\n    tag_272:\n        /* \"#utility.yul\":23597:23604   */\n      0x00\n        /* \"#utility.yul\":23626:23631   */\n      dup2\n        /* \"#utility.yul\":23615:23631   */\n      swap1\n      pop\n        /* \"#utility.yul\":23560:23637   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23643:23722   */\n    tag_273:\n        /* \"#utility.yul\":23682:23689   */\n      0x00\n        /* \"#utility.yul\":23711:23716   */\n      dup2\n        /* \"#utility.yul\":23700:23716   */\n      swap1\n      pop\n        /* \"#utility.yul\":23643:23722   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23728:23885   */\n    tag_274:\n        /* \"#utility.yul\":23833:23878   */\n      tag_503\n        /* \"#utility.yul\":23853:23877   */\n      tag_504\n        /* \"#utility.yul\":23871:23876   */\n      dup3\n        /* \"#utility.yul\":23853:23877   */\n      tag_272\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":23833:23878   */\n      tag_273\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":23828:23831   */\n      dup3\n        /* \"#utility.yul\":23821:23879   */\n      mstore\n        /* \"#utility.yul\":23728:23885   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23891:24695   */\n    tag_145:\n        /* \"#utility.yul\":24160:24163   */\n      0x00\n        /* \"#utility.yul\":24182:24330   */\n      tag_506\n        /* \"#utility.yul\":24326:24329   */\n      dup3\n        /* \"#utility.yul\":24182:24330   */\n      tag_267\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":24175:24330   */\n      swap2\n      pop\n        /* \"#utility.yul\":24340:24415   */\n      tag_507\n        /* \"#utility.yul\":24411:24414   */\n      dup3\n        /* \"#utility.yul\":24402:24408   */\n      dup7\n        /* \"#utility.yul\":24340:24415   */\n      tag_271\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":24440:24442   */\n      0x14\n        /* \"#utility.yul\":24435:24438   */\n      dup3\n        /* \"#utility.yul\":24431:24443   */\n      add\n        /* \"#utility.yul\":24424:24443   */\n      swap2\n      pop\n        /* \"#utility.yul\":24453:24528   */\n      tag_508\n        /* \"#utility.yul\":24524:24527   */\n      dup3\n        /* \"#utility.yul\":24515:24521   */\n      dup6\n        /* \"#utility.yul\":24453:24528   */\n      tag_274\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":24553:24555   */\n      0x20\n        /* \"#utility.yul\":24548:24551   */\n      dup3\n        /* \"#utility.yul\":24544:24556   */\n      add\n        /* \"#utility.yul\":24537:24556   */\n      swap2\n      pop\n        /* \"#utility.yul\":24566:24641   */\n      tag_509\n        /* \"#utility.yul\":24637:24640   */\n      dup3\n        /* \"#utility.yul\":24628:24634   */\n      dup5\n        /* \"#utility.yul\":24566:24641   */\n      tag_274\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":24666:24668   */\n      0x20\n        /* \"#utility.yul\":24661:24664   */\n      dup3\n        /* \"#utility.yul\":24657:24669   */\n      add\n        /* \"#utility.yul\":24650:24669   */\n      swap2\n      pop\n        /* \"#utility.yul\":24686:24689   */\n      dup2\n        /* \"#utility.yul\":24679:24689   */\n      swap1\n      pop\n        /* \"#utility.yul\":23891:24695   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24701:25033   */\n    tag_148:\n        /* \"#utility.yul\":24822:24826   */\n      0x00\n        /* \"#utility.yul\":24860:24862   */\n      0x40\n        /* \"#utility.yul\":24849:24858   */\n      dup3\n        /* \"#utility.yul\":24845:24863   */\n      add\n        /* \"#utility.yul\":24837:24863   */\n      swap1\n      pop\n        /* \"#utility.yul\":24873:24944   */\n      tag_511\n        /* \"#utility.yul\":24941:24942   */\n      0x00\n        /* \"#utility.yul\":24930:24939   */\n      dup4\n        /* \"#utility.yul\":24926:24943   */\n      add\n        /* \"#utility.yul\":24917:24923   */\n      dup6\n        /* \"#utility.yul\":24873:24944   */\n      tag_222\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":24954:25026   */\n      tag_512\n        /* \"#utility.yul\":25022:25024   */\n      0x20\n        /* \"#utility.yul\":25011:25020   */\n      dup4\n        /* \"#utility.yul\":25007:25025   */\n      add\n        /* \"#utility.yul\":24998:25004   */\n      dup5\n        /* \"#utility.yul\":24954:25026   */\n      tag_239\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":24701:25033   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25039:25129   */\n    tag_275:\n        /* \"#utility.yul\":25073:25080   */\n      0x00\n        /* \"#utility.yul\":25116:25121   */\n      dup2\n        /* \"#utility.yul\":25109:25122   */\n      iszero\n        /* \"#utility.yul\":25102:25123   */\n      iszero\n        /* \"#utility.yul\":25091:25123   */\n      swap1\n      pop\n        /* \"#utility.yul\":25039:25129   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25135:25251   */\n    tag_276:\n        /* \"#utility.yul\":25205:25226   */\n      tag_515\n        /* \"#utility.yul\":25220:25225   */\n      dup2\n        /* \"#utility.yul\":25205:25226   */\n      tag_275\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":25198:25203   */\n      dup2\n        /* \"#utility.yul\":25195:25227   */\n      eq\n        /* \"#utility.yul\":25185:25245   */\n      tag_516\n      jumpi\n        /* \"#utility.yul\":25241:25242   */\n      0x00\n        /* \"#utility.yul\":25238:25239   */\n      dup1\n        /* \"#utility.yul\":25231:25243   */\n      revert\n        /* \"#utility.yul\":25185:25245   */\n    tag_516:\n        /* \"#utility.yul\":25135:25251   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25257:25394   */\n    tag_277:\n        /* \"#utility.yul\":25311:25316   */\n      0x00\n        /* \"#utility.yul\":25342:25348   */\n      dup2\n        /* \"#utility.yul\":25336:25349   */\n      mload\n        /* \"#utility.yul\":25327:25349   */\n      swap1\n      pop\n        /* \"#utility.yul\":25358:25388   */\n      tag_518\n        /* \"#utility.yul\":25382:25387   */\n      dup2\n        /* \"#utility.yul\":25358:25388   */\n      tag_276\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":25257:25394   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25400:25745   */\n    tag_156:\n        /* \"#utility.yul\":25467:25473   */\n      0x00\n        /* \"#utility.yul\":25516:25518   */\n      0x20\n        /* \"#utility.yul\":25504:25513   */\n      dup3\n        /* \"#utility.yul\":25495:25502   */\n      dup5\n        /* \"#utility.yul\":25491:25514   */\n      sub\n        /* \"#utility.yul\":25487:25519   */\n      slt\n        /* \"#utility.yul\":25484:25603   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":25522:25601   */\n      tag_521\n      tag_213\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":25484:25603   */\n    tag_520:\n        /* \"#utility.yul\":25642:25643   */\n      0x00\n        /* \"#utility.yul\":25667:25728   */\n      tag_522\n        /* \"#utility.yul\":25720:25727   */\n      dup5\n        /* \"#utility.yul\":25711:25717   */\n      dup3\n        /* \"#utility.yul\":25700:25709   */\n      dup6\n        /* \"#utility.yul\":25696:25718   */\n      add\n        /* \"#utility.yul\":25667:25728   */\n      tag_277\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":25657:25728   */\n      swap2\n      pop\n        /* \"#utility.yul\":25613:25738   */\n      pop\n        /* \"#utility.yul\":25400:25745   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25751:25903   */\n    tag_278:\n        /* \"#utility.yul\":25891:25895   */\n      0x5354000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25887:25888   */\n      0x00\n        /* \"#utility.yul\":25879:25885   */\n      dup3\n        /* \"#utility.yul\":25875:25889   */\n      add\n        /* \"#utility.yul\":25868:25896   */\n      mstore\n        /* \"#utility.yul\":25751:25903   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25909:26274   */\n    tag_279:\n        /* \"#utility.yul\":26051:26054   */\n      0x00\n        /* \"#utility.yul\":26072:26138   */\n      tag_525\n        /* \"#utility.yul\":26136:26137   */\n      0x02\n        /* \"#utility.yul\":26131:26134   */\n      dup4\n        /* \"#utility.yul\":26072:26138   */\n      tag_236\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":26065:26138   */\n      swap2\n      pop\n        /* \"#utility.yul\":26147:26240   */\n      tag_526\n        /* \"#utility.yul\":26236:26239   */\n      dup3\n        /* \"#utility.yul\":26147:26240   */\n      tag_278\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":26265:26267   */\n      0x20\n        /* \"#utility.yul\":26260:26263   */\n      dup3\n        /* \"#utility.yul\":26256:26268   */\n      add\n        /* \"#utility.yul\":26249:26268   */\n      swap1\n      pop\n        /* \"#utility.yul\":25909:26274   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26280:26699   */\n    tag_159:\n        /* \"#utility.yul\":26446:26450   */\n      0x00\n        /* \"#utility.yul\":26484:26486   */\n      0x20\n        /* \"#utility.yul\":26473:26482   */\n      dup3\n        /* \"#utility.yul\":26469:26487   */\n      add\n        /* \"#utility.yul\":26461:26487   */\n      swap1\n      pop\n        /* \"#utility.yul\":26533:26542   */\n      dup2\n        /* \"#utility.yul\":26527:26531   */\n      dup2\n        /* \"#utility.yul\":26523:26543   */\n      sub\n        /* \"#utility.yul\":26519:26520   */\n      0x00\n        /* \"#utility.yul\":26508:26517   */\n      dup4\n        /* \"#utility.yul\":26504:26521   */\n      add\n        /* \"#utility.yul\":26497:26544   */\n      mstore\n        /* \"#utility.yul\":26561:26692   */\n      tag_528\n        /* \"#utility.yul\":26687:26691   */\n      dup2\n        /* \"#utility.yul\":26561:26692   */\n      tag_279\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":26553:26692   */\n      swap1\n      pop\n        /* \"#utility.yul\":26280:26699   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26705:26857   */\n    tag_280:\n        /* \"#utility.yul\":26845:26849   */\n      0x5341000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":26841:26842   */\n      0x00\n        /* \"#utility.yul\":26833:26839   */\n      dup3\n        /* \"#utility.yul\":26829:26843   */\n      add\n        /* \"#utility.yul\":26822:26850   */\n      mstore\n        /* \"#utility.yul\":26705:26857   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26863:27228   */\n    tag_281:\n        /* \"#utility.yul\":27005:27008   */\n      0x00\n        /* \"#utility.yul\":27026:27092   */\n      tag_531\n        /* \"#utility.yul\":27090:27091   */\n      0x02\n        /* \"#utility.yul\":27085:27088   */\n      dup4\n        /* \"#utility.yul\":27026:27092   */\n      tag_236\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":27019:27092   */\n      swap2\n      pop\n        /* \"#utility.yul\":27101:27194   */\n      tag_532\n        /* \"#utility.yul\":27190:27193   */\n      dup3\n        /* \"#utility.yul\":27101:27194   */\n      tag_280\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":27219:27221   */\n      0x20\n        /* \"#utility.yul\":27214:27217   */\n      dup3\n        /* \"#utility.yul\":27210:27222   */\n      add\n        /* \"#utility.yul\":27203:27222   */\n      swap1\n      pop\n        /* \"#utility.yul\":26863:27228   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27234:27653   */\n    tag_174:\n        /* \"#utility.yul\":27400:27404   */\n      0x00\n        /* \"#utility.yul\":27438:27440   */\n      0x20\n        /* \"#utility.yul\":27427:27436   */\n      dup3\n        /* \"#utility.yul\":27423:27441   */\n      add\n        /* \"#utility.yul\":27415:27441   */\n      swap1\n      pop\n        /* \"#utility.yul\":27487:27496   */\n      dup2\n        /* \"#utility.yul\":27481:27485   */\n      dup2\n        /* \"#utility.yul\":27477:27497   */\n      sub\n        /* \"#utility.yul\":27473:27474   */\n      0x00\n        /* \"#utility.yul\":27462:27471   */\n      dup4\n        /* \"#utility.yul\":27458:27475   */\n      add\n        /* \"#utility.yul\":27451:27498   */\n      mstore\n        /* \"#utility.yul\":27515:27646   */\n      tag_534\n        /* \"#utility.yul\":27641:27645   */\n      dup2\n        /* \"#utility.yul\":27515:27646   */\n      tag_281\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":27507:27646   */\n      swap1\n      pop\n        /* \"#utility.yul\":27234:27653   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27659:27839   */\n    tag_282:\n        /* \"#utility.yul\":27707:27784   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":27704:27705   */\n      0x00\n        /* \"#utility.yul\":27697:27785   */\n      mstore\n        /* \"#utility.yul\":27804:27808   */\n      0x11\n        /* \"#utility.yul\":27801:27802   */\n      0x04\n        /* \"#utility.yul\":27794:27809   */\n      mstore\n        /* \"#utility.yul\":27828:27832   */\n      0x24\n        /* \"#utility.yul\":27825:27826   */\n      0x00\n        /* \"#utility.yul\":27818:27833   */\n      revert\n        /* \"#utility.yul\":27845:28036   */\n    tag_177:\n        /* \"#utility.yul\":27885:27888   */\n      0x00\n        /* \"#utility.yul\":27904:27924   */\n      tag_537\n        /* \"#utility.yul\":27922:27923   */\n      dup3\n        /* \"#utility.yul\":27904:27924   */\n      tag_215\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":27899:27924   */\n      swap2\n      pop\n        /* \"#utility.yul\":27938:27958   */\n      tag_538\n        /* \"#utility.yul\":27956:27957   */\n      dup4\n        /* \"#utility.yul\":27938:27958   */\n      tag_215\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":27933:27958   */\n      swap3\n      pop\n        /* \"#utility.yul\":27981:27982   */\n      dup3\n        /* \"#utility.yul\":27978:27979   */\n      dup3\n        /* \"#utility.yul\":27974:27983   */\n      add\n        /* \"#utility.yul\":27967:27983   */\n      swap1\n      pop\n        /* \"#utility.yul\":28002:28005   */\n      dup1\n        /* \"#utility.yul\":27999:28000   */\n      dup3\n        /* \"#utility.yul\":27996:28006   */\n      gt\n        /* \"#utility.yul\":27993:28029   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":28009:28027   */\n      tag_540\n      tag_282\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":27993:28029   */\n    tag_539:\n        /* \"#utility.yul\":27845:28036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28042:28236   */\n    tag_197:\n        /* \"#utility.yul\":28082:28086   */\n      0x00\n        /* \"#utility.yul\":28102:28122   */\n      tag_542\n        /* \"#utility.yul\":28120:28121   */\n      dup3\n        /* \"#utility.yul\":28102:28122   */\n      tag_215\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":28097:28122   */\n      swap2\n      pop\n        /* \"#utility.yul\":28136:28156   */\n      tag_543\n        /* \"#utility.yul\":28154:28155   */\n      dup4\n        /* \"#utility.yul\":28136:28156   */\n      tag_215\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":28131:28156   */\n      swap3\n      pop\n        /* \"#utility.yul\":28180:28181   */\n      dup3\n        /* \"#utility.yul\":28177:28178   */\n      dup3\n        /* \"#utility.yul\":28173:28182   */\n      sub\n        /* \"#utility.yul\":28165:28182   */\n      swap1\n      pop\n        /* \"#utility.yul\":28204:28205   */\n      dup2\n        /* \"#utility.yul\":28198:28202   */\n      dup2\n        /* \"#utility.yul\":28195:28206   */\n      gt\n        /* \"#utility.yul\":28192:28229   */\n      iszero\n      tag_544\n      jumpi\n        /* \"#utility.yul\":28209:28227   */\n      tag_545\n      tag_282\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":28192:28229   */\n    tag_544:\n        /* \"#utility.yul\":28042:28236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28242:28684   */\n    tag_201:\n        /* \"#utility.yul\":28391:28395   */\n      0x00\n        /* \"#utility.yul\":28429:28431   */\n      0x60\n        /* \"#utility.yul\":28418:28427   */\n      dup3\n        /* \"#utility.yul\":28414:28432   */\n      add\n        /* \"#utility.yul\":28406:28432   */\n      swap1\n      pop\n        /* \"#utility.yul\":28442:28513   */\n      tag_547\n        /* \"#utility.yul\":28510:28511   */\n      0x00\n        /* \"#utility.yul\":28499:28508   */\n      dup4\n        /* \"#utility.yul\":28495:28512   */\n      add\n        /* \"#utility.yul\":28486:28492   */\n      dup7\n        /* \"#utility.yul\":28442:28513   */\n      tag_222\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":28523:28595   */\n      tag_548\n        /* \"#utility.yul\":28591:28593   */\n      0x20\n        /* \"#utility.yul\":28580:28589   */\n      dup4\n        /* \"#utility.yul\":28576:28594   */\n      add\n        /* \"#utility.yul\":28567:28573   */\n      dup6\n        /* \"#utility.yul\":28523:28595   */\n      tag_222\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":28605:28677   */\n      tag_549\n        /* \"#utility.yul\":28673:28675   */\n      0x40\n        /* \"#utility.yul\":28662:28671   */\n      dup4\n        /* \"#utility.yul\":28658:28676   */\n      add\n        /* \"#utility.yul\":28649:28655   */\n      dup5\n        /* \"#utility.yul\":28605:28677   */\n      tag_239\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":28242:28684   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28690:28843   */\n    tag_283:\n        /* \"#utility.yul\":28830:28835   */\n      0x5354460000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28826:28827   */\n      0x00\n        /* \"#utility.yul\":28818:28824   */\n      dup3\n        /* \"#utility.yul\":28814:28828   */\n      add\n        /* \"#utility.yul\":28807:28836   */\n      mstore\n        /* \"#utility.yul\":28690:28843   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28849:29214   */\n    tag_284:\n        /* \"#utility.yul\":28991:28994   */\n      0x00\n        /* \"#utility.yul\":29012:29078   */\n      tag_552\n        /* \"#utility.yul\":29076:29077   */\n      0x03\n        /* \"#utility.yul\":29071:29074   */\n      dup4\n        /* \"#utility.yul\":29012:29078   */\n      tag_236\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":29005:29078   */\n      swap2\n      pop\n        /* \"#utility.yul\":29087:29180   */\n      tag_553\n        /* \"#utility.yul\":29176:29179   */\n      dup3\n        /* \"#utility.yul\":29087:29180   */\n      tag_283\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":29205:29207   */\n      0x20\n        /* \"#utility.yul\":29200:29203   */\n      dup3\n        /* \"#utility.yul\":29196:29208   */\n      add\n        /* \"#utility.yul\":29189:29208   */\n      swap1\n      pop\n        /* \"#utility.yul\":28849:29214   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29220:29639   */\n    tag_211:\n        /* \"#utility.yul\":29386:29390   */\n      0x00\n        /* \"#utility.yul\":29424:29426   */\n      0x20\n        /* \"#utility.yul\":29413:29422   */\n      dup3\n        /* \"#utility.yul\":29409:29427   */\n      add\n        /* \"#utility.yul\":29401:29427   */\n      swap1\n      pop\n        /* \"#utility.yul\":29473:29482   */\n      dup2\n        /* \"#utility.yul\":29467:29471   */\n      dup2\n        /* \"#utility.yul\":29463:29483   */\n      sub\n        /* \"#utility.yul\":29459:29460   */\n      0x00\n        /* \"#utility.yul\":29448:29457   */\n      dup4\n        /* \"#utility.yul\":29444:29461   */\n      add\n        /* \"#utility.yul\":29437:29484   */\n      mstore\n        /* \"#utility.yul\":29501:29632   */\n      tag_555\n        /* \"#utility.yul\":29627:29631   */\n      dup2\n        /* \"#utility.yul\":29501:29632   */\n      tag_284\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":29493:29632   */\n      swap1\n      pop\n        /* \"#utility.yul\":29220:29639   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ce9940ad7e435bb3f7c55704562e4f9e098f32ce51f9934c3101b295a633a4a664736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1446": {
									"entryPoint": null,
									"id": 1446,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_694": {
									"entryPoint": null,
									"id": 694,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_ISwapRouter_$1371_fromMemory": {
									"entryPoint": 321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_ISwapRouter_$1371t_addresst_address_fromMemory": {
									"entryPoint": 390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_ISwapRouter_$1371": {
									"entryPoint": 277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 223,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_ISwapRouter_$1371": {
									"entryPoint": 296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2030:21",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:21",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:21"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:21"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:21",
														"type": ""
													}
												],
												"src": "7:75:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:21"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:21"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:21",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:21",
														"type": ""
													}
												],
												"src": "334:126:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:21"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:21",
														"type": ""
													}
												],
												"src": "466:96:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "633:51:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "643:35:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:21"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "654:17:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "654:24:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "643:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_ISwapRouter_$1371",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "615:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "625:7:21",
														"type": ""
													}
												],
												"src": "568:116:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "753:99:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "830:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "839:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "842:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "832:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "832:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "832:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "776:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "821:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_ISwapRouter_$1371",
																					"nodeType": "YulIdentifier",
																					"src": "783:37:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "783:44:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "773:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:55:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "766:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "766:63:21"
															},
															"nodeType": "YulIf",
															"src": "763:83:21"
														}
													]
												},
												"name": "validator_revert_t_contract$_ISwapRouter_$1371",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "746:5:21",
														"type": ""
													}
												],
												"src": "690:162:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "941:100:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "951:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "966:6:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "960:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "960:13:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "951:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1029:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_ISwapRouter_$1371",
																	"nodeType": "YulIdentifier",
																	"src": "982:46:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "982:53:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "982:53:21"
														}
													]
												},
												"name": "abi_decode_t_contract$_ISwapRouter_$1371_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "919:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "927:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "935:5:21",
														"type": ""
													}
												],
												"src": "858:183:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:79:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1147:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1156:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1159:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1149:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1149:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1149:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1113:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1138:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1120:17:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1120:24:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1110:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1110:35:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1103:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1103:43:21"
															},
															"nodeType": "YulIf",
															"src": "1100:63:21"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1083:5:21",
														"type": ""
													}
												],
												"src": "1047:122:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1238:80:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1248:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1263:6:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1257:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1257:13:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1248:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1306:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1279:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1279:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1279:33:21"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1216:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1224:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1232:5:21",
														"type": ""
													}
												],
												"src": "1175:143:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1455:572:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1501:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1503:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1503:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1503:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1476:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1485:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1472:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1472:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1497:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1468:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1468:32:21"
															},
															"nodeType": "YulIf",
															"src": "1465:119:21"
														},
														{
															"nodeType": "YulBlock",
															"src": "1594:148:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1609:15:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1623:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1613:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1638:94:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1704:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1715:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1700:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1700:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1724:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_ISwapRouter_$1371_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1648:51:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1648:84:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1638:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1752:129:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1767:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:2:21",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1771:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1797:74:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1843:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1854:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1839:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1839:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1863:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1807:31:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1807:64:21"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1797:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1891:129:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1906:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1920:2:21",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1910:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1936:74:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1982:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1993:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1978:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1978:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2002:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1946:31:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1946:64:21"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1936:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ISwapRouter_$1371t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1409:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1420:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1432:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1440:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1448:6:21",
														"type": ""
													}
												],
												"src": "1324:703:21"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ISwapRouter_$1371(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ISwapRouter_$1371(value) {\n        if iszero(eq(value, cleanup_t_contract$_ISwapRouter_$1371(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ISwapRouter_$1371_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ISwapRouter_$1371(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ISwapRouter_$1371t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ISwapRouter_$1371_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 21,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2219 CODESIZE SUB DUP1 PUSH3 0x2219 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x186 JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH3 0x1DF JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x10E DUP3 PUSH3 0xE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x121 DUP3 PUSH3 0x102 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x133 DUP2 PUSH3 0x115 JUMP JUMPDEST DUP2 EQ PUSH3 0x13E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x151 DUP2 PUSH3 0x128 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x162 DUP2 PUSH3 0x102 JUMP JUMPDEST DUP2 EQ PUSH3 0x16D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x180 DUP2 PUSH3 0x157 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x1A0 JUMPI PUSH3 0x19F PUSH3 0xDF JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x1AF DUP7 DUP3 DUP8 ADD PUSH3 0x141 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x1C2 DUP7 DUP3 DUP8 ADD PUSH3 0x170 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x1D5 DUP7 DUP3 DUP8 ADD PUSH3 0x170 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x1FC2 PUSH3 0x257 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x4AE ADD MSTORE DUP2 DUP2 PUSH2 0x62A ADD MSTORE DUP2 DUP2 PUSH2 0x658 ADD MSTORE DUP2 DUP2 PUSH2 0x6A5 ADD MSTORE PUSH2 0x7DF ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x1B1 ADD MSTORE DUP2 DUP2 PUSH2 0x296 ADD MSTORE DUP2 DUP2 PUSH2 0x32C ADD MSTORE DUP2 DUP2 PUSH2 0xEBF ADD MSTORE DUP2 DUP2 PUSH2 0xF1F ADD MSTORE PUSH2 0xF9C ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x3A3 ADD MSTORE DUP2 DUP2 PUSH2 0x4D2 ADD MSTORE PUSH2 0x5E3 ADD MSTORE PUSH2 0x1FC2 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC31C9C07 GT PUSH2 0x4D JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0xDF2AB5BB EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0xE9CBAFB0 EQ PUSH2 0x171 JUMPI PUSH2 0x85 JUMP JUMPDEST DUP1 PUSH4 0x12210E8A EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x49404B7C EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x4AA4A4FC EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x833263E6 EQ PUSH2 0xD9 JUMPI PUSH2 0x85 JUMP JUMPDEST CALLDATASIZE PUSH2 0x85 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x91 PUSH2 0x199 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0x12A3 JUMP JUMPDEST PUSH2 0x1AE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xC3 PUSH2 0x32A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0x12F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x1341 JUMP JUMPDEST PUSH2 0x34E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x115 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x12F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x1452 JUMP JUMPDEST PUSH2 0x4F4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x1503 JUMP JUMPDEST PUSH2 0x5CC JUMP JUMPDEST STOP JUMPDEST PUSH0 SELFBALANCE GT ISZERO PUSH2 0x1AC JUMPI PUSH2 0x1AB CALLER SELFBALANCE PUSH2 0x9E9 JUMP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x12F0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x223 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x1588 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x28C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x283 SWAP1 PUSH2 0x160D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x325 JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2E1A7D4D DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x163A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x304 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x316 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0x324 DUP3 DUP3 PUSH2 0x9E9 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH3 0xFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH0 PUSH2 0x3C8 PUSH32 0x0 DUP4 PUSH2 0xAE4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x490E6CBC ADDRESS DUP9 DUP9 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP13 DUP2 MSTORE PUSH1 0x20 ADD DUP12 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH3 0xFFFFFF AND DUP2 MSTORE POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x446 SWAP2 SWAP1 PUSH2 0x173A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x474 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17DE JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x48B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x49D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52E SWAP2 SWAP1 PUSH2 0x12F0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x549 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x56D SWAP2 SWAP1 PUSH2 0x1588 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x5B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A9 SWAP1 PUSH2 0x1872 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x5C6 JUMPI PUSH2 0x5C5 DUP5 DUP4 DUP4 PUSH2 0xBB4 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 DUP2 ADD SWAP1 PUSH2 0x5DC SWAP2 SWAP1 PUSH2 0x1A0B JUMP JUMPDEST SWAP1 POP PUSH2 0x60C PUSH32 0x0 DUP3 PUSH1 0x60 ADD MLOAD PUSH2 0xD03 JUMP JUMPDEST POP PUSH0 DUP2 PUSH1 0x60 ADD MLOAD PUSH0 ADD MLOAD SWAP1 POP PUSH0 DUP3 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH2 0x652 DUP3 PUSH32 0x0 DUP6 PUSH0 ADD MLOAD PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x681 DUP2 PUSH32 0x0 DUP6 PUSH1 0x20 ADD MLOAD PUSH2 0xD4D JUMP JUMPDEST PUSH0 PUSH2 0x690 DUP5 PUSH1 0x20 ADD MLOAD DUP9 PUSH2 0xE9C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x6A0 DUP6 PUSH0 ADD MLOAD DUP11 PUSH2 0xE9C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x80 ADD MLOAD PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x20 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79A SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7B6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7DA SWAP2 SWAP1 PUSH2 0x1588 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH1 0xA0 ADD MLOAD PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D3 SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8EF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x913 SWAP2 SWAP1 PUSH2 0x1588 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x923 DUP9 PUSH0 ADD MLOAD DUP14 PUSH2 0xE9C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x934 DUP10 PUSH1 0x20 ADD MLOAD DUP14 PUSH2 0xE9C JUMP JUMPDEST SWAP1 POP PUSH2 0x941 DUP9 ADDRESS DUP5 PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x94C DUP8 ADDRESS DUP4 PUSH2 0xD4D JUMP JUMPDEST PUSH0 DUP3 GT ISZERO PUSH2 0x961 JUMPI PUSH2 0x960 DUP9 ADDRESS CALLER DUP6 PUSH2 0xEBD JUMP JUMPDEST JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x976 JUMPI PUSH2 0x975 DUP8 ADDRESS CALLER DUP5 PUSH2 0xEBD JUMP JUMPDEST JUMPDEST DUP2 DUP5 GT ISZERO PUSH2 0x9A8 JUMPI PUSH0 PUSH2 0x989 DUP6 DUP5 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP PUSH2 0x996 DUP10 ADDRESS DUP4 PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x9A6 DUP10 ADDRESS DUP13 PUSH1 0x40 ADD MLOAD DUP5 PUSH2 0xEBD JUMP JUMPDEST POP JUMPDEST DUP1 DUP4 GT ISZERO PUSH2 0x9DA JUMPI PUSH0 PUSH2 0x9BB DUP5 DUP4 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP PUSH2 0x9C8 DUP10 ADDRESS DUP4 PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x9D8 DUP9 ADDRESS DUP13 PUSH1 0x40 ADD MLOAD DUP5 PUSH2 0xEBD JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA1C JUMPI PUSH2 0xA1B PUSH2 0x1894 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA4E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA5C SWAP2 SWAP1 PUSH2 0x1B3A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xA96 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xADF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD6 SWAP1 PUSH2 0x1B9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0xB23 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP4 DUP4 PUSH0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB45 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH32 0xE34F199B19B2B4F47F68442619D555527D244F78A3297EA89325F843F87B8B54 PUSH0 SHL PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB90 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP1 PUSH0 SHR SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xBE8 SWAP3 SWAP2 SWAP1 PUSH2 0x1D05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0xC52 SWAP2 SWAP1 PUSH2 0x1B3A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xC8B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC90 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xCBD JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0xCBC JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xCBB SWAP2 SWAP1 PUSH2 0x1D61 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0xCFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF3 SWAP1 PUSH2 0x1DD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD0E DUP4 DUP4 PUSH2 0xAE4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD47 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xD81 SWAP3 SWAP2 SWAP1 PUSH2 0x1D05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0xDEB SWAP2 SWAP1 PUSH2 0x1B3A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xE24 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE29 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xE56 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0xE55 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xE54 SWAP2 SWAP1 PUSH2 0x1D61 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0xE95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE8C SWAP1 PUSH2 0x1E3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 DUP5 PUSH2 0xEAA SWAP2 SWAP1 PUSH2 0x1E89 JUMP JUMPDEST SWAP2 POP DUP2 LT ISZERO PUSH2 0xEB7 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xF18 JUMPI POP DUP1 SELFBALANCE LT ISZERO JUMPDEST ISZERO PUSH2 0x103B JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF83 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF95 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF5 SWAP3 SWAP2 SWAP1 PUSH2 0x1D05 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1011 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1035 SWAP2 SWAP1 PUSH2 0x1D61 JUMP JUMPDEST POP PUSH2 0x108C JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x107E JUMPI PUSH2 0x1079 DUP5 DUP4 DUP4 PUSH2 0xBB4 JUMP JUMPDEST PUSH2 0x108B JUMP JUMPDEST PUSH2 0x108A DUP5 DUP5 DUP5 DUP5 PUSH2 0x10B3 JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 DUP5 PUSH2 0x10A0 SWAP2 SWAP1 PUSH2 0x1EBC JUMP JUMPDEST SWAP2 POP DUP2 GT ISZERO PUSH2 0x10AD JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x10E9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x1153 SWAP2 SWAP1 PUSH2 0x1B3A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x118C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x11BE JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x11BD JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x11BC SWAP2 SWAP1 PUSH2 0x1D61 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x11FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F4 SWAP1 PUSH2 0x1F6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1228 DUP2 PUSH2 0x1216 JUMP JUMPDEST DUP2 EQ PUSH2 0x1232 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1243 DUP2 PUSH2 0x121F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1272 DUP3 PUSH2 0x1249 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1282 DUP2 PUSH2 0x1268 JUMP JUMPDEST DUP2 EQ PUSH2 0x128C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x129D DUP2 PUSH2 0x1279 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12B9 JUMPI PUSH2 0x12B8 PUSH2 0x120E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12C6 DUP6 DUP3 DUP7 ADD PUSH2 0x1235 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12D7 DUP6 DUP3 DUP7 ADD PUSH2 0x128F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x12EA DUP2 PUSH2 0x1268 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1303 PUSH0 DUP4 ADD DUP5 PUSH2 0x12E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1320 DUP2 PUSH2 0x1309 JUMP JUMPDEST DUP2 EQ PUSH2 0x132A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x133B DUP2 PUSH2 0x1317 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x135C JUMPI PUSH2 0x135B PUSH2 0x120E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1369 DUP11 DUP3 DUP12 ADD PUSH2 0x128F JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x137A DUP11 DUP3 DUP12 ADD PUSH2 0x128F JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x138B DUP11 DUP3 DUP12 ADD PUSH2 0x132D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x139C DUP11 DUP3 DUP12 ADD PUSH2 0x1235 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x13AD DUP11 DUP3 DUP12 ADD PUSH2 0x1235 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x13BE DUP11 DUP3 DUP12 ADD PUSH2 0x132D JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x13CF DUP11 DUP3 DUP12 ADD PUSH2 0x132D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1401 PUSH2 0x13FC PUSH2 0x13F7 DUP5 PUSH2 0x1249 JUMP JUMPDEST PUSH2 0x13DE JUMP JUMPDEST PUSH2 0x1249 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1412 DUP3 PUSH2 0x13E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1423 DUP3 PUSH2 0x1408 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1433 DUP2 PUSH2 0x1419 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x144C PUSH0 DUP4 ADD DUP5 PUSH2 0x142A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1469 JUMPI PUSH2 0x1468 PUSH2 0x120E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1476 DUP7 DUP3 DUP8 ADD PUSH2 0x128F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1487 DUP7 DUP3 DUP8 ADD PUSH2 0x1235 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1498 DUP7 DUP3 DUP8 ADD PUSH2 0x128F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x14C3 JUMPI PUSH2 0x14C2 PUSH2 0x14A2 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14E0 JUMPI PUSH2 0x14DF PUSH2 0x14A6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x14FC JUMPI PUSH2 0x14FB PUSH2 0x14AA JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x151B JUMPI PUSH2 0x151A PUSH2 0x120E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1528 DUP8 DUP3 DUP9 ADD PUSH2 0x1235 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1539 DUP8 DUP3 DUP9 ADD PUSH2 0x1235 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x155A JUMPI PUSH2 0x1559 PUSH2 0x1212 JUMP JUMPDEST JUMPDEST PUSH2 0x1566 DUP8 DUP3 DUP9 ADD PUSH2 0x14AE JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1582 DUP2 PUSH2 0x121F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x159D JUMPI PUSH2 0x159C PUSH2 0x120E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15AA DUP5 DUP3 DUP6 ADD PUSH2 0x1574 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742057455448390000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15F7 PUSH1 0x12 DUP4 PUSH2 0x15B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1602 DUP3 PUSH2 0x15C3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1624 DUP2 PUSH2 0x15EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1634 DUP2 PUSH2 0x1216 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x164D PUSH0 DUP4 ADD DUP5 PUSH2 0x162B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x165C DUP2 PUSH2 0x1216 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x166B DUP2 PUSH2 0x1268 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x167A DUP2 PUSH2 0x1309 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1694 PUSH0 DUP6 ADD DUP3 PUSH2 0x1662 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x16A7 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1662 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x16BA PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1671 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x16D5 PUSH0 DUP6 ADD DUP3 PUSH2 0x1653 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x16E8 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1653 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x16FB PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1662 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x170E PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x1680 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x1721 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x1671 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x1734 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x1671 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x174E PUSH0 DUP4 ADD DUP5 PUSH2 0x16C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x178B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1770 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17B0 DUP3 PUSH2 0x1754 JUMP JUMPDEST PUSH2 0x17BA DUP2 DUP6 PUSH2 0x175E JUMP JUMPDEST SWAP4 POP PUSH2 0x17CA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x176E JUMP JUMPDEST PUSH2 0x17D3 DUP2 PUSH2 0x1796 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x17F1 PUSH0 DUP4 ADD DUP8 PUSH2 0x12E1 JUMP JUMPDEST PUSH2 0x17FE PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x162B JUMP JUMPDEST PUSH2 0x180B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x162B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x181D DUP2 DUP5 PUSH2 0x17A6 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420746F6B656E0000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x185C PUSH1 0x12 DUP4 PUSH2 0x15B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1867 DUP3 PUSH2 0x1828 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1889 DUP2 PUSH2 0x1850 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x18CA DUP3 PUSH2 0x1796 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18E9 JUMPI PUSH2 0x18E8 PUSH2 0x1894 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18FB PUSH2 0x1205 JUMP JUMPDEST SWAP1 POP PUSH2 0x1907 DUP3 DUP3 PUSH2 0x18C1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1921 JUMPI PUSH2 0x1920 PUSH2 0x1890 JUMP JUMPDEST JUMPDEST PUSH2 0x192B PUSH1 0x60 PUSH2 0x18F2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x193A DUP5 DUP3 DUP6 ADD PUSH2 0x128F JUMP JUMPDEST PUSH0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x194D DUP5 DUP3 DUP6 ADD PUSH2 0x128F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x1961 DUP5 DUP3 DUP6 ADD PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1983 JUMPI PUSH2 0x1982 PUSH2 0x1890 JUMP JUMPDEST JUMPDEST PUSH2 0x198D PUSH1 0xC0 PUSH2 0x18F2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x199C DUP5 DUP3 DUP6 ADD PUSH2 0x1235 JUMP JUMPDEST PUSH0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x19AF DUP5 DUP3 DUP6 ADD PUSH2 0x1235 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x19C3 DUP5 DUP3 DUP6 ADD PUSH2 0x128F JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x19D7 DUP5 DUP3 DUP6 ADD PUSH2 0x190C JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x19EB DUP5 DUP3 DUP6 ADD PUSH2 0x132D JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0x19FF DUP5 DUP3 DUP6 ADD PUSH2 0x132D JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A21 JUMPI PUSH2 0x1A20 PUSH2 0x120E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A2E DUP5 DUP3 DUP6 ADD PUSH2 0x196D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A40 DUP2 PUSH2 0x1249 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1A5B PUSH0 DUP6 ADD DUP3 PUSH2 0x1662 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1A6E PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1662 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1A81 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1671 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x1A94 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x1662 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x1AA7 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x1653 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x1ABA PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x1653 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x1ACD PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x1653 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x1AE0 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x1A37 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x1AFA PUSH0 DUP4 ADD DUP5 PUSH2 0x1A46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B14 DUP3 PUSH2 0x1754 JUMP JUMPDEST PUSH2 0x1B1E DUP2 DUP6 PUSH2 0x1B00 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B2E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x176E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B45 DUP3 DUP5 PUSH2 0x1B0A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5354450000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B84 PUSH1 0x3 DUP4 PUSH2 0x15B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B8F DUP3 PUSH2 0x1B50 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BB1 DUP2 PUSH2 0x1B78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BC1 DUP2 PUSH2 0x1309 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1BDA PUSH0 DUP4 ADD DUP7 PUSH2 0x12E1 JUMP JUMPDEST PUSH2 0x1BE7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12E1 JUMP JUMPDEST PUSH2 0x1BF4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1BB8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C3A PUSH1 0x1 DUP4 PUSH2 0x1BFC JUMP JUMPDEST SWAP2 POP PUSH2 0x1C45 DUP3 PUSH2 0x1C06 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C66 DUP3 PUSH2 0x1C50 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C77 DUP3 PUSH2 0x1C5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C8F PUSH2 0x1C8A DUP3 PUSH2 0x1268 JUMP JUMPDEST PUSH2 0x1C6D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CB8 PUSH2 0x1CB3 DUP3 PUSH2 0x1C95 JUMP JUMPDEST PUSH2 0x1C9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CC8 DUP3 PUSH2 0x1C2E JUMP JUMPDEST SWAP2 POP PUSH2 0x1CD4 DUP3 DUP7 PUSH2 0x1C7E JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x1CE4 DUP3 DUP6 PUSH2 0x1CA7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x1CF4 DUP3 DUP5 PUSH2 0x1CA7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D18 PUSH0 DUP4 ADD DUP6 PUSH2 0x12E1 JUMP JUMPDEST PUSH2 0x1D25 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x162B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D40 DUP2 PUSH2 0x1D2C JUMP JUMPDEST DUP2 EQ PUSH2 0x1D4A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D5B DUP2 PUSH2 0x1D37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D76 JUMPI PUSH2 0x1D75 PUSH2 0x120E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D83 DUP5 DUP3 DUP6 ADD PUSH2 0x1D4D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5354000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DC0 PUSH1 0x2 DUP4 PUSH2 0x15B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DCB DUP3 PUSH2 0x1D8C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DED DUP2 PUSH2 0x1DB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5341000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E28 PUSH1 0x2 DUP4 PUSH2 0x15B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E33 DUP3 PUSH2 0x1DF4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E55 DUP2 PUSH2 0x1E1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1E93 DUP3 PUSH2 0x1216 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E9E DUP4 PUSH2 0x1216 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1EB6 JUMPI PUSH2 0x1EB5 PUSH2 0x1E5C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EC6 DUP3 PUSH2 0x1216 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ED1 DUP4 PUSH2 0x1216 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1EE9 JUMPI PUSH2 0x1EE8 PUSH2 0x1E5C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F02 PUSH0 DUP4 ADD DUP7 PUSH2 0x12E1 JUMP JUMPDEST PUSH2 0x1F0F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12E1 JUMP JUMPDEST PUSH2 0x1F1C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x162B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5354460000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F58 PUSH1 0x3 DUP4 PUSH2 0x15B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F63 DUP3 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F85 DUP2 PUSH2 0x1F4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE SWAP10 BLOCKHASH 0xAD PUSH31 0x435BB3F7C55704562E4F9E098F32CE51F9934C3101B295A633A4A664736F6C PUSH4 0x43000814 STOP CALLER ",
							"sourceMap": "563:6417:9:-:0;;;1392:190;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1521:8;1531:6;537:8:17;527:18;;;;;;;;;;564:6;556:14;;;;;;;;;;470:108;;1563:11:9::1;1550:24;;;;;;;;::::0;::::1;1392:190:::0;;;563:6417;;88:117:21;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:116::-;625:7;654:24;672:5;654:24;:::i;:::-;643:35;;568:116;;;:::o;690:162::-;783:44;821:5;783:44;:::i;:::-;776:5;773:55;763:83;;842:1;839;832:12;763:83;690:162;:::o;858:183::-;935:5;966:6;960:13;951:22;;982:53;1029:5;982:53;:::i;:::-;858:183;;;;:::o;1047:122::-;1120:24;1138:5;1120:24;:::i;:::-;1113:5;1110:35;1100:63;;1159:1;1156;1149:12;1100:63;1047:122;:::o;1175:143::-;1232:5;1263:6;1257:13;1248:22;;1279:33;1306:5;1279:33;:::i;:::-;1175:143;;;;:::o;1324:703::-;1432:6;1440;1448;1497:2;1485:9;1476:7;1472:23;1468:32;1465:119;;;1503:79;;:::i;:::-;1465:119;1623:1;1648:84;1724:7;1715:6;1704:9;1700:22;1648:84;:::i;:::-;1638:94;;1594:148;1781:2;1807:64;1863:7;1854:6;1843:9;1839:22;1807:64;:::i;:::-;1797:74;;1752:129;1920:2;1946:64;2002:7;1993:6;1982:9;1978:22;1946:64;:::i;:::-;1936:74;;1891:129;1324:703;;;;;:::o;563:6417:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@WETH9_1430": {
									"entryPoint": 810,
									"id": 1430,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1462": {
									"entryPoint": null,
									"id": 1462,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_544": {
									"entryPoint": 3740,
									"id": 544,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@computeAddress_1815": {
									"entryPoint": 2788,
									"id": 1815,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@factory_1426": {
									"entryPoint": 1232,
									"id": 1426,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initFlash_1057": {
									"entryPoint": 846,
									"id": 1057,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@pay_1648": {
									"entryPoint": 3773,
									"id": 1648,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@refundETH_1580": {
									"entryPoint": 409,
									"id": 1580,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeApprove_1202": {
									"entryPoint": 3405,
									"id": 1202,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferETH_1228": {
									"entryPoint": 2537,
									"id": 1228,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_1110": {
									"entryPoint": 4275,
									"id": 1110,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_1156": {
									"entryPoint": 2996,
									"id": 1156,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@sub_566": {
									"entryPoint": 4242,
									"id": 566,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@swapRouter_675": {
									"entryPoint": 1196,
									"id": 675,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sweepToken_1554": {
									"entryPoint": 1268,
									"id": 1554,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@uniswapV3FlashCallback_964": {
									"entryPoint": 1484,
									"id": 964,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@unwrapWETH9_1510": {
									"entryPoint": 430,
									"id": 1510,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallback_1713": {
									"entryPoint": 3331,
									"id": 1713,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 7501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 5294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_struct$_FlashCallbackData_$993_memory_ptr": {
									"entryPoint": 6509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_struct$_PoolKey_$1728_memory_ptr": {
									"entryPoint": 6412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint24": {
									"entryPoint": 4909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 5492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint24t_uint256t_uint256t_uint24t_uint24": {
									"entryPoint": 4929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_addresst_uint256t_address": {
									"entryPoint": 5202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_FlashCallbackData_$993_memory_ptr": {
									"entryPoint": 6667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 4771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_bytes_calldata_ptr": {
									"entryPoint": 5379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 5730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 7294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack": {
									"entryPoint": 7335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6922,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_ISwapRouter_$1371_to_t_address_fromStack": {
									"entryPoint": 5162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_01e23337f78f001c03af3011e04e4dea54f4997ff97d41da263c1606bf0f9f73_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2cf3b53843c7738cfb0b95230b455802cee89f2ea29be4a30eee707228c97571_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_ExactInputSingleParams_$1295_memory_ptr_to_t_struct$_ExactInputSingleParams_$1295_memory_ptr_fromStack": {
									"entryPoint": 6726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_FlashCallbackData_$993_memory_ptr_to_t_struct$_FlashCallbackData_$993_memory_ptr_fromStack": {
									"entryPoint": 5824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_PoolKey_$1728_memory_ptr_to_t_struct$_PoolKey_$1728_memory_ptr": {
									"entryPoint": 5760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint160_to_t_uint160": {
									"entryPoint": 6711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24": {
									"entryPoint": 5745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24_fromStack": {
									"entryPoint": 7096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 5715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9_t_address_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7358,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed": {
									"entryPoint": 7111,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7919,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7429,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6110,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ISwapRouter_$1371__to_t_address__fromStack_reversed": {
									"entryPoint": 5177,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_01e23337f78f001c03af3011e04e4dea54f4997ff97d41da263c1606bf0f9f73__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2cf3b53843c7738cfb0b95230b455802cee89f2ea29be4a30eee707228c97571__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7066,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactInputSingleParams_$1295_memory_ptr__to_t_struct$_ExactInputSingleParams_$1295_memory_ptr__fromStack_reversed": {
									"entryPoint": 6886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_FlashCallbackData_$993_memory_ptr__to_t_struct$_FlashCallbackData_$993_memory_ptr__fromStack_reversed": {
									"entryPoint": 5946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4613,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 5972,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 5982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7868,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 7317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint24": {
									"entryPoint": 4873,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ISwapRouter_$1371_to_t_address": {
									"entryPoint": 5145,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5998,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 6337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 5086,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_address": {
									"entryPoint": 7277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_bytes32": {
									"entryPoint": 7326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 7260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7772,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6292,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 5286,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5282,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f": {
									"entryPoint": 6288,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 5290,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4626,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4622,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_96": {
									"entryPoint": 7248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_01e23337f78f001c03af3011e04e4dea54f4997ff97d41da263c1606bf0f9f73": {
									"entryPoint": 5571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa": {
									"entryPoint": 7668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2cf3b53843c7738cfb0b95230b455802cee89f2ea29be4a30eee707228c97571": {
									"entryPoint": 6184,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4": {
									"entryPoint": 6992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9": {
									"entryPoint": 7174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca": {
									"entryPoint": 7564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86": {
									"entryPoint": 7972,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint24": {
									"entryPoint": 4887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:29642:21",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:21",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:21"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:21"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:21",
														"type": ""
													}
												],
												"src": "7:75:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:21"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:21"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:21",
														"type": ""
													}
												],
												"src": "334:77:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:21"
															},
															"nodeType": "YulIf",
															"src": "470:63:21"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:21",
														"type": ""
													}
												],
												"src": "417:122:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:21"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:21",
														"type": ""
													}
												],
												"src": "545:139:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:81:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "745:65:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "760:5:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "767:42:21",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "756:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "756:54:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "745:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "717:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "727:7:21",
														"type": ""
													}
												],
												"src": "690:126:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "867:51:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "877:35:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "906:5:21"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "888:17:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "888:24:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "877:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "849:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "859:7:21",
														"type": ""
													}
												],
												"src": "822:96:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:21"
															},
															"nodeType": "YulIf",
															"src": "977:63:21"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:21",
														"type": ""
													}
												],
												"src": "924:122:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:21"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:21",
														"type": ""
													}
												],
												"src": "1052:139:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1280:391:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1326:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:32:21"
															},
															"nodeType": "YulIf",
															"src": "1290:119:21"
														},
														{
															"nodeType": "YulBlock",
															"src": "1419:117:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1463:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1546:118:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:21",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1591:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1242:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1253:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1265:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1273:6:21",
														"type": ""
													}
												],
												"src": "1197:474:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1742:53:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:37:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:21"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1730:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1737:3:21",
														"type": ""
													}
												],
												"src": "1677:118:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1899:124:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1909:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1917:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1945:71:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1871:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1883:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1894:4:21",
														"type": ""
													}
												],
												"src": "1801:222:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2073:47:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2083:31:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2098:5:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2105:8:21",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2094:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2094:20:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2083:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2055:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2065:7:21",
														"type": ""
													}
												],
												"src": "2029:91:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2168:78:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2224:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2233:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2226:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2226:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2226:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2191:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2215:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint24",
																					"nodeType": "YulIdentifier",
																					"src": "2198:16:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2198:23:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2188:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2188:34:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2181:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2181:42:21"
															},
															"nodeType": "YulIf",
															"src": "2178:62:21"
														}
													]
												},
												"name": "validator_revert_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2161:5:21",
														"type": ""
													}
												],
												"src": "2126:120:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2303:86:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2313:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2335:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2322:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:20:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2313:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2377:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint24",
																	"nodeType": "YulIdentifier",
																	"src": "2351:25:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2351:32:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2351:32:21"
														}
													]
												},
												"name": "abi_decode_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2281:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2289:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2297:5:21",
														"type": ""
													}
												],
												"src": "2252:137:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2560:1032:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2607:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2609:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2609:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2609:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2581:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2590:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2577:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2577:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2602:3:21",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2573:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2573:33:21"
															},
															"nodeType": "YulIf",
															"src": "2570:120:21"
														},
														{
															"nodeType": "YulBlock",
															"src": "2700:117:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2715:15:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2729:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2719:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2744:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2779:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2790:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2775:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2775:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2799:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2754:20:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2754:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2744:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2827:118:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2842:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2856:2:21",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2846:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2872:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2907:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2918:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2903:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2903:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2927:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2882:20:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2882:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2872:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2955:117:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2970:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2984:2:21",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2974:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3000:62:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3034:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3045:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3030:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3030:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3054:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "3010:19:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3010:52:21"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3000:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3082:118:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3097:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3111:2:21",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3101:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3127:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3162:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3173:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3158:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3158:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3182:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3137:20:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "3127:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3210:119:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3225:17:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3239:3:21",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3229:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3256:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3291:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3302:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3287:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3287:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3311:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3266:20:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3266:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "3256:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3339:118:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3354:17:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3368:3:21",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3358:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3385:62:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3419:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3430:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3415:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3415:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3439:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "3395:19:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3395:52:21"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "3385:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3467:118:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3482:17:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3496:3:21",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3486:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3513:62:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3547:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3558:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3543:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3543:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3567:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "3523:19:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3523:52:21"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nodeType": "YulIdentifier",
																			"src": "3513:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint24t_uint256t_uint256t_uint24t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2482:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2493:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2505:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2513:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2521:6:21",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2529:6:21",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2537:6:21",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "2545:6:21",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "2553:6:21",
														"type": ""
													}
												],
												"src": "2395:1197:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3630:28:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3640:12:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3647:5:21"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3640:3:21"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3616:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3626:3:21",
														"type": ""
													}
												],
												"src": "3598:60:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3724:82:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3734:66:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3792:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "3774:17:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3774:24:21"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "3765:8:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3765:34:21"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3747:17:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3747:53:21"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3734:9:21"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3704:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3714:9:21",
														"type": ""
													}
												],
												"src": "3664:142:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3872:66:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3882:50:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3926:5:21"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3895:30:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3895:37:21"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3882:9:21"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3852:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3862:9:21",
														"type": ""
													}
												],
												"src": "3812:126:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4024:66:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4034:50:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4078:5:21"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4047:30:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4047:37:21"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4034:9:21"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ISwapRouter_$1371_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4004:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4014:9:21",
														"type": ""
													}
												],
												"src": "3944:146:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4181:86:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4198:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4254:5:21"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ISwapRouter_$1371_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4203:50:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4203:57:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4191:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4191:70:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4191:70:21"
														}
													]
												},
												"name": "abi_encode_t_contract$_ISwapRouter_$1371_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4169:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4176:3:21",
														"type": ""
													}
												],
												"src": "4096:171:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4391:144:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4401:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4413:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4424:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4409:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4409:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4401:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4501:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4514:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4525:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4510:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ISwapRouter_$1371_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4437:63:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4437:91:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4437:91:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ISwapRouter_$1371__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4363:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4375:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4386:4:21",
														"type": ""
													}
												],
												"src": "4273:262:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4641:519:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4687:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4689:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4689:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4689:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4662:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4671:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4658:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4658:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4683:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4654:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:32:21"
															},
															"nodeType": "YulIf",
															"src": "4651:119:21"
														},
														{
															"nodeType": "YulBlock",
															"src": "4780:117:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4795:15:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4809:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4799:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4824:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4859:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4870:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4855:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4855:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4879:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4834:20:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4834:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4824:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4907:118:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4922:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4936:2:21",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4926:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4952:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4987:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4998:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4983:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4983:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5007:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4962:20:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4962:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4952:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5035:118:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5050:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5064:2:21",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5054:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5080:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5115:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5126:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5111:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5111:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5135:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5090:20:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5090:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5080:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4595:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4606:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4618:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4626:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4634:6:21",
														"type": ""
													}
												],
												"src": "4541:619:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5255:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5272:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5275:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5265:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5265:12:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5265:12:21"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "5166:117:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5378:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5395:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5398:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5388:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5388:12:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5388:12:21"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "5289:117:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5501:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5518:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5521:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5511:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5511:12:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5511:12:21"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "5412:117:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5622:478:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5671:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "5673:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5673:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5673:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5650:6:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5658:4:21",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5646:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5646:17:21"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "5665:3:21"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5642:27:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5635:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5635:35:21"
															},
															"nodeType": "YulIf",
															"src": "5632:122:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5763:30:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5786:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5773:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5773:20:21"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5763:6:21"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5836:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "5838:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5838:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5838:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5808:6:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5816:18:21",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5805:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5805:30:21"
															},
															"nodeType": "YulIf",
															"src": "5802:117:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5928:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5944:6:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5952:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5940:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5940:17:21"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "5928:8:21"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6011:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "6013:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6013:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6013:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "5976:8:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "5990:6:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5998:4:21",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "5986:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5986:17:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5972:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5972:32:21"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6006:3:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5969:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5969:41:21"
															},
															"nodeType": "YulIf",
															"src": "5966:128:21"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5589:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5597:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "5605:8:21",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5615:6:21",
														"type": ""
													}
												],
												"src": "5548:552:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6225:698:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6271:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6273:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6273:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6273:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6246:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6255:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6242:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6242:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6267:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6238:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6238:32:21"
															},
															"nodeType": "YulIf",
															"src": "6235:119:21"
														},
														{
															"nodeType": "YulBlock",
															"src": "6364:117:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6379:15:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6393:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6383:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6408:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6443:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6454:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6439:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6439:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6463:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6418:20:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6418:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6408:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6491:118:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6506:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6520:2:21",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6510:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6536:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6571:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6582:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6567:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6567:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6591:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6546:20:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6546:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6536:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6619:297:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6634:46:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6665:9:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6676:2:21",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6661:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6661:18:21"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6648:12:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6648:32:21"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6638:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6727:83:21",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "6729:77:21"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6729:79:21"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6729:79:21"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6699:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6707:18:21",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6696:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6696:30:21"
																	},
																	"nodeType": "YulIf",
																	"src": "6693:117:21"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6824:82:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6878:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6889:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6874:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6874:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6898:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6842:31:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6842:64:21"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "6824:6:21"
																		},
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "6832:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6171:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6182:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6194:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6202:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6210:6:21",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6218:6:21",
														"type": ""
													}
												],
												"src": "6106:817:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6992:80:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7002:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7017:6:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7011:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7011:13:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7002:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7060:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7033:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7033:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7033:33:21"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6970:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6978:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6986:5:21",
														"type": ""
													}
												],
												"src": "6929:143:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7155:274:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7201:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7203:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7203:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7203:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7176:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7185:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7172:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7172:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7197:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7168:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7168:32:21"
															},
															"nodeType": "YulIf",
															"src": "7165:119:21"
														},
														{
															"nodeType": "YulBlock",
															"src": "7294:128:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7309:15:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7323:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7313:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7338:74:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7384:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7395:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7380:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7380:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7404:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7348:31:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7348:64:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7338:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7125:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7136:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7148:6:21",
														"type": ""
													}
												],
												"src": "7078:351:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7531:73:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7548:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7553:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7541:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7541:19:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7541:19:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7569:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7588:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7593:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7584:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7584:14:21"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7569:11:21"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7503:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7508:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7519:11:21",
														"type": ""
													}
												],
												"src": "7435:169:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7716:62:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7738:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7746:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7734:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7734:14:21"
																	},
																	{
																		"hexValue": "496e73756666696369656e74205745544839",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7750:20:21",
																		"type": "",
																		"value": "Insufficient WETH9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7727:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7727:44:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7727:44:21"
														}
													]
												},
												"name": "store_literal_in_memory_01e23337f78f001c03af3011e04e4dea54f4997ff97d41da263c1606bf0f9f73",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7708:6:21",
														"type": ""
													}
												],
												"src": "7610:168:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7930:220:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7940:74:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8006:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8011:2:21",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7947:58:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7947:67:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7940:3:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8112:3:21"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_01e23337f78f001c03af3011e04e4dea54f4997ff97d41da263c1606bf0f9f73",
																	"nodeType": "YulIdentifier",
																	"src": "8023:88:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8023:93:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8023:93:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8125:19:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8136:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8141:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8132:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8132:12:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8125:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_01e23337f78f001c03af3011e04e4dea54f4997ff97d41da263c1606bf0f9f73_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7918:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7926:3:21",
														"type": ""
													}
												],
												"src": "7784:366:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8327:248:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8337:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8349:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8360:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8345:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8345:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8337:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8384:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8395:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8380:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8380:17:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8403:4:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8409:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8399:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8399:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8373:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8373:47:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8373:47:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8429:139:21",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8563:4:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_01e23337f78f001c03af3011e04e4dea54f4997ff97d41da263c1606bf0f9f73_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8437:124:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8437:131:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8429:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_01e23337f78f001c03af3011e04e4dea54f4997ff97d41da263c1606bf0f9f73__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8307:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8322:4:21",
														"type": ""
													}
												],
												"src": "8156:419:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8646:53:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8663:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8686:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8668:17:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8668:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8656:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8656:37:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8656:37:21"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8634:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8641:3:21",
														"type": ""
													}
												],
												"src": "8581:118:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8803:124:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8813:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8825:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8836:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8821:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8821:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8813:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8893:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8906:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8917:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8902:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8902:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8849:43:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8849:71:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8849:71:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8775:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8787:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8798:4:21",
														"type": ""
													}
												],
												"src": "8705:222:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8988:53:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9005:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9028:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9010:17:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9010:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8998:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8998:37:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8998:37:21"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8976:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8983:3:21",
														"type": ""
													}
												],
												"src": "8933:108:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9102:53:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9119:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9142:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9124:17:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9124:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9112:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9112:37:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9112:37:21"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9090:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9097:3:21",
														"type": ""
													}
												],
												"src": "9047:108:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9214:52:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9231:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9253:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "9236:16:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9236:23:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9224:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9224:36:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9224:36:21"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9202:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9209:3:21",
														"type": ""
													}
												],
												"src": "9161:105:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9442:566:21",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9452:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9468:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9473:4:21",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9464:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9464:14:21"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "9456:4:21",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9488:166:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9525:43:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9555:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9562:4:21",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9551:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9551:16:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9545:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9545:23:21"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "9529:12:21",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "9615:12:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "9633:3:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9638:4:21",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9629:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9629:14:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9581:33:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9581:63:21"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "9581:63:21"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9664:166:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9701:43:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9731:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9738:4:21",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9727:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9727:16:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9721:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9721:23:21"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "9705:12:21",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "9791:12:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "9809:3:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9814:4:21",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9805:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9805:14:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9757:33:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9757:63:21"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "9757:63:21"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9840:161:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9874:43:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9904:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9911:4:21",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9900:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9900:16:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9894:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9894:23:21"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "9878:12:21",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "9962:12:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "9980:3:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9985:4:21",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9976:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9976:14:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "9930:31:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9930:61:21"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "9930:61:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_PoolKey_$1728_memory_ptr_to_t_struct$_PoolKey_$1728_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9429:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9436:3:21",
														"type": ""
													}
												],
												"src": "9336:672:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10228:1153:21",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10238:28:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10254:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10259:6:21",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10250:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10250:16:21"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "10242:4:21",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10276:167:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10314:43:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10344:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10351:4:21",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10340:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10340:16:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "10334:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10334:23:21"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "10318:12:21",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "10404:12:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "10422:3:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10427:4:21",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10418:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10418:14:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10370:33:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10370:63:21"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "10370:63:21"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10453:167:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10491:43:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10521:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10528:4:21",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10517:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10517:16:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "10511:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10511:23:21"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "10495:12:21",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "10581:12:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "10599:3:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10604:4:21",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10595:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10595:14:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10547:33:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10547:63:21"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "10547:63:21"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10630:165:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10666:43:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10696:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10703:4:21",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10692:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10692:16:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "10686:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10686:23:21"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "10670:12:21",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "10756:12:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "10774:3:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10779:4:21",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10770:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10770:14:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10722:33:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10722:63:21"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "10722:63:21"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10805:217:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10843:43:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10873:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10880:4:21",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10869:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10869:16:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "10863:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10863:23:21"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "10847:12:21",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "10983:12:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "11001:3:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11006:4:21",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10997:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10997:14:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_struct$_PoolKey_$1728_memory_ptr_to_t_struct$_PoolKey_$1728_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "10899:83:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10899:113:21"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "10899:113:21"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11032:166:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11071:43:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11101:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11108:4:21",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11097:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11097:16:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "11091:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11091:23:21"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "11075:12:21",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "11159:12:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "11177:3:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11182:4:21",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11173:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11173:14:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "11127:31:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11127:61:21"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "11127:61:21"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11208:166:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11247:43:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11277:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11284:4:21",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11273:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11273:16:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "11267:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11267:23:21"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "11251:12:21",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "11335:12:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "11353:3:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11358:4:21",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11349:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11349:14:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "11303:31:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11303:61:21"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "11303:61:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_FlashCallbackData_$993_memory_ptr_to_t_struct$_FlashCallbackData_$993_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10215:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10222:3:21",
														"type": ""
													}
												],
												"src": "10094:1287:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11553:193:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11563:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11575:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11586:3:21",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11571:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11571:19:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11563:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11712:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11725:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11736:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11721:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11721:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_FlashCallbackData_$993_memory_ptr_to_t_struct$_FlashCallbackData_$993_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11600:111:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11600:139:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11600:139:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_FlashCallbackData_$993_memory_ptr__to_t_struct$_FlashCallbackData_$993_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11525:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11537:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11548:4:21",
														"type": ""
													}
												],
												"src": "11387:359:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11810:40:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11821:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11837:5:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11831:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11831:12:21"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "11821:6:21"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11793:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11803:6:21",
														"type": ""
													}
												],
												"src": "11752:98:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11951:73:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11968:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11973:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11961:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11961:19:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11961:19:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11989:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12008:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12013:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12004:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12004:14:21"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11989:11:21"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11923:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11928:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11939:11:21",
														"type": ""
													}
												],
												"src": "11856:168:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12092:184:21",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12102:10:21",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12111:1:21",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "12106:1:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12171:63:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "12196:3:21"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "12201:1:21"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12192:3:21"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12192:11:21"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "12215:3:21"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "12220:1:21"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "12211:3:21"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12211:11:21"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "12205:5:21"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12205:18:21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12185:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12185:39:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12185:39:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "12132:1:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12135:6:21"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12129:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12129:13:21"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "12143:19:21",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12145:15:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "12154:1:21"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12157:2:21",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12150:3:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12150:10:21"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "12145:1:21"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "12125:3:21",
																"statements": []
															},
															"src": "12121:113:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "12254:3:21"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12259:6:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12250:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12250:16:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12268:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12243:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12243:27:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12243:27:21"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "12074:3:21",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "12079:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12084:6:21",
														"type": ""
													}
												],
												"src": "12030:246:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12330:54:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12340:38:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12358:5:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12365:2:21",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12354:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12354:14:21"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12374:2:21",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "12370:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12370:7:21"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12350:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12350:28:21"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "12340:6:21"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12313:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "12323:6:21",
														"type": ""
													}
												],
												"src": "12282:102:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12480:283:21",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12490:52:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12536:5:21"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "12504:31:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12504:38:21"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12494:6:21",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12551:77:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12616:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12621:6:21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12558:57:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12558:70:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12551:3:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12676:5:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12683:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12672:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12672:16:21"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12690:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12695:6:21"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "12637:34:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12637:65:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12637:65:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12711:46:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12722:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12749:6:21"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "12727:21:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12727:29:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12718:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12718:39:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12711:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12461:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12468:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12476:3:21",
														"type": ""
													}
												],
												"src": "12390:373:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12969:440:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12979:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12991:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13002:3:21",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12987:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12987:19:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12979:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13060:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13073:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13084:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13069:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13069:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13016:43:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13016:71:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13016:71:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13141:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13154:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13165:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13150:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13150:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13097:43:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13097:72:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13097:72:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13223:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13236:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13247:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13232:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13232:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13179:43:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13179:72:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13179:72:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13272:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13283:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13268:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13268:18:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13292:4:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13298:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13288:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13288:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13261:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13261:48:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13261:48:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13318:84:21",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "13388:6:21"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13397:4:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13326:61:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13326:76:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13318:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12917:9:21",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12929:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12937:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12945:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12953:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12964:4:21",
														"type": ""
													}
												],
												"src": "12769:640:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13521:62:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13543:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13551:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13539:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13539:14:21"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13555:20:21",
																		"type": "",
																		"value": "Insufficient token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13532:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13532:44:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13532:44:21"
														}
													]
												},
												"name": "store_literal_in_memory_2cf3b53843c7738cfb0b95230b455802cee89f2ea29be4a30eee707228c97571",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13513:6:21",
														"type": ""
													}
												],
												"src": "13415:168:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13735:220:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13745:74:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13811:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13816:2:21",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13752:58:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13752:67:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13745:3:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13917:3:21"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2cf3b53843c7738cfb0b95230b455802cee89f2ea29be4a30eee707228c97571",
																	"nodeType": "YulIdentifier",
																	"src": "13828:88:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13828:93:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13828:93:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13930:19:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13941:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13946:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13937:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13937:12:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13930:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2cf3b53843c7738cfb0b95230b455802cee89f2ea29be4a30eee707228c97571_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13723:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13731:3:21",
														"type": ""
													}
												],
												"src": "13589:366:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14132:248:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14142:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14154:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14165:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14150:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14150:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14142:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14189:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14200:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14185:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14185:17:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14208:4:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14214:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14204:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14204:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14178:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14178:47:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14178:47:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14234:139:21",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14368:4:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2cf3b53843c7738cfb0b95230b455802cee89f2ea29be4a30eee707228c97571_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14242:124:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14242:131:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14234:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2cf3b53843c7738cfb0b95230b455802cee89f2ea29be4a30eee707228c97571__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14112:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14127:4:21",
														"type": ""
													}
												],
												"src": "13961:419:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14475:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14492:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14495:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14485:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14485:12:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14485:12:21"
														}
													]
												},
												"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
												"nodeType": "YulFunctionDefinition",
												"src": "14386:117:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14537:152:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14554:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14557:77:21",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14547:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14547:88:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14547:88:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14651:1:21",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14654:4:21",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14644:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14644:15:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14644:15:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14675:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14678:4:21",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14668:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14668:15:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14668:15:21"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14509:180:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14738:238:21",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14748:58:21",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "14770:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "14800:4:21"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "14778:21:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14778:27:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14766:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14766:40:21"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "14752:10:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14917:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "14919:16:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14919:18:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14919:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "14860:10:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14872:18:21",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14857:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14857:34:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "14896:10:21"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14908:6:21"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "14893:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14893:22:21"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "14854:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14854:62:21"
															},
															"nodeType": "YulIf",
															"src": "14851:88:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14955:2:21",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "14959:10:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14948:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14948:22:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14948:22:21"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14724:6:21",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "14732:4:21",
														"type": ""
													}
												],
												"src": "14695:281:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15023:88:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15033:30:21",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "15043:18:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15043:20:21"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "15033:6:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "15092:6:21"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "15100:4:21"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "15072:19:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15072:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15072:33:21"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "15007:4:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15016:6:21",
														"type": ""
													}
												],
												"src": "14982:129:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15206:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15223:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15226:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15216:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15216:12:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15216:12:21"
														}
													]
												},
												"name": "revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421",
												"nodeType": "YulFunctionDefinition",
												"src": "15117:117:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15354:657:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15398:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
																				"nodeType": "YulIdentifier",
																				"src": "15400:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15400:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15400:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "15375:3:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15380:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15371:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15371:19:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15392:4:21",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15367:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15367:30:21"
															},
															"nodeType": "YulIf",
															"src": "15364:117:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15490:30:21",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15515:4:21",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "15499:15:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15499:21:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "15490:5:21"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "15530:152:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15567:15:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15581:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15571:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15607:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15614:4:21",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15603:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15603:16:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "15646:9:21"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "15657:6:21"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "15642:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15642:22:21"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "15666:3:21"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "15621:20:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15621:49:21"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "15596:6:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15596:75:21"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "15596:75:21"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "15692:153:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15729:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15743:2:21",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15733:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15770:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15777:4:21",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15766:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15766:16:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "15809:9:21"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "15820:6:21"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "15805:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15805:22:21"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "15829:3:21"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "15784:20:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15784:49:21"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "15759:6:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15759:75:21"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "15759:75:21"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "15855:149:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15889:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15903:2:21",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15893:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15930:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15937:4:21",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15926:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15926:16:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "15968:9:21"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "15979:6:21"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "15964:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15964:22:21"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "15988:3:21"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint24",
																					"nodeType": "YulIdentifier",
																					"src": "15944:19:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15944:48:21"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "15919:6:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15919:74:21"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "15919:74:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_PoolKey_$1728_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15329:9:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15340:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15348:5:21",
														"type": ""
													}
												],
												"src": "15274:737:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16148:1183:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16194:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
																				"nodeType": "YulIdentifier",
																				"src": "16196:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16196:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16196:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "16169:3:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16174:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16165:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16165:19:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16186:6:21",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "16161:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16161:32:21"
															},
															"nodeType": "YulIf",
															"src": "16158:119:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16286:30:21",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16311:4:21",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "16295:15:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16295:21:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "16286:5:21"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16326:153:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16364:15:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16378:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16368:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16404:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16411:4:21",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16400:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16400:16:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "16443:9:21"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "16454:6:21"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "16439:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16439:22:21"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "16463:3:21"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "16418:20:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16418:49:21"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "16393:6:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16393:75:21"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "16393:75:21"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16489:154:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16527:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16541:2:21",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16531:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16568:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16575:4:21",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16564:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16564:16:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "16607:9:21"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "16618:6:21"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "16603:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16603:22:21"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "16627:3:21"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "16582:20:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16582:49:21"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "16557:6:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16557:75:21"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "16557:75:21"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16653:152:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16689:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16703:2:21",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16693:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16730:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16737:4:21",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16726:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16726:16:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "16769:9:21"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "16780:6:21"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "16765:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16765:22:21"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "16789:3:21"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "16744:20:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16744:49:21"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "16719:6:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16719:75:21"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "16719:75:21"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16815:179:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16853:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16867:2:21",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16857:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16894:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16901:4:21",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16890:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16890:16:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "16958:9:21"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "16969:6:21"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "16954:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16954:22:21"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "16978:3:21"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_struct$_PoolKey_$1728_memory_ptr",
																					"nodeType": "YulIdentifier",
																					"src": "16908:45:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16908:74:21"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "16883:6:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16883:100:21"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "16883:100:21"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "17004:155:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17043:17:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17057:3:21",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17047:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17085:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17092:4:21",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17081:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17081:16:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "17123:9:21"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "17134:6:21"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "17119:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17119:22:21"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "17143:3:21"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint24",
																					"nodeType": "YulIdentifier",
																					"src": "17099:19:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17099:48:21"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "17074:6:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17074:74:21"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "17074:74:21"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "17169:155:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17208:17:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17222:3:21",
																		"type": "",
																		"value": "224"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17212:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17250:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17257:4:21",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17246:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17246:16:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "17288:9:21"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "17299:6:21"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "17284:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17284:22:21"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "17308:3:21"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint24",
																					"nodeType": "YulIdentifier",
																					"src": "17264:19:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17264:48:21"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "17239:6:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17239:74:21"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "17239:74:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_FlashCallbackData_$993_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16123:9:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16134:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16142:5:21",
														"type": ""
													}
												],
												"src": "16059:1272:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17437:298:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17484:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "17486:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17486:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17486:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17458:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17467:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17454:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17454:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17479:3:21",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "17450:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17450:33:21"
															},
															"nodeType": "YulIf",
															"src": "17447:120:21"
														},
														{
															"nodeType": "YulBlock",
															"src": "17577:151:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17592:15:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17606:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17596:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "17621:97:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17690:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17701:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17686:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17686:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17710:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_FlashCallbackData_$993_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "17631:54:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17631:87:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "17621:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_FlashCallbackData_$993_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17407:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "17418:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17430:6:21",
														"type": ""
													}
												],
												"src": "17337:398:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17796:53:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17813:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17836:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nodeType": "YulIdentifier",
																			"src": "17818:17:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17818:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17806:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17806:37:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17806:37:21"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17784:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17791:3:21",
														"type": ""
													}
												],
												"src": "17741:108:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18095:1479:21",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18105:28:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18121:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18126:6:21",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18117:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18117:16:21"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "18109:4:21",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "18143:167:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "18181:43:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18211:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18218:4:21",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18207:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18207:16:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "18201:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18201:23:21"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "18185:12:21",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "18271:12:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "18289:3:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18294:4:21",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18285:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18285:14:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "18237:33:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18237:63:21"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "18237:63:21"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "18320:168:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "18359:43:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18389:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18396:4:21",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18385:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18385:16:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "18379:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18379:23:21"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "18363:12:21",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "18449:12:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "18467:3:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18472:4:21",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18463:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18463:14:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "18415:33:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18415:63:21"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "18415:63:21"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "18498:161:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "18532:43:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18562:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18569:4:21",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18558:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18558:16:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "18552:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18552:23:21"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "18536:12:21",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "18620:12:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "18638:3:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18643:4:21",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18634:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18634:14:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "18588:31:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18588:61:21"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "18588:61:21"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "18669:169:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "18709:43:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18739:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18746:4:21",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18735:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18735:16:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "18729:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18729:23:21"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "18713:12:21",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "18799:12:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "18817:3:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18822:4:21",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18813:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18813:14:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "18765:33:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18765:63:21"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "18765:63:21"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "18848:168:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "18887:43:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18917:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18924:4:21",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18913:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18913:16:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "18907:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18907:23:21"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "18891:12:21",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "18977:12:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "18995:3:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19000:4:21",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18991:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18991:14:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "18943:33:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18943:63:21"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "18943:63:21"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19026:168:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19065:43:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "19095:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19102:4:21",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19091:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19091:16:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "19085:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19085:23:21"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "19069:12:21",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "19155:12:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "19173:3:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19178:4:21",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19169:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19169:14:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "19121:33:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19121:63:21"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "19121:63:21"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19204:176:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19251:43:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "19281:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19288:4:21",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19277:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19277:16:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "19271:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19271:23:21"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "19255:12:21",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "19341:12:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "19359:3:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19364:4:21",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19355:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19355:14:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "19307:33:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19307:63:21"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "19307:63:21"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19390:177:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19438:43:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "19468:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19475:4:21",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19464:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19464:16:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "19458:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19458:23:21"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "19442:12:21",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "19528:12:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "19546:3:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19551:4:21",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19542:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19542:14:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint160_to_t_uint160",
																			"nodeType": "YulIdentifier",
																			"src": "19494:33:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19494:63:21"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "19494:63:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ExactInputSingleParams_$1295_memory_ptr_to_t_struct$_ExactInputSingleParams_$1295_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18082:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18089:3:21",
														"type": ""
													}
												],
												"src": "17949:1625:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19758:205:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19768:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19780:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19791:3:21",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19776:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "19776:19:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19768:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19929:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19942:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19953:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19938:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19938:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactInputSingleParams_$1295_memory_ptr_to_t_struct$_ExactInputSingleParams_$1295_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19805:123:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "19805:151:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19805:151:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactInputSingleParams_$1295_memory_ptr__to_t_struct$_ExactInputSingleParams_$1295_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19730:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19742:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19753:4:21",
														"type": ""
													}
												],
												"src": "19580:383:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20082:34:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20092:18:21",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "20107:3:21"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "20092:11:21"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20054:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20059:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "20070:11:21",
														"type": ""
													}
												],
												"src": "19969:147:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20230:278:21",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20240:52:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20286:5:21"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "20254:31:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "20254:38:21"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "20244:6:21",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20301:95:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20384:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20389:6:21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20308:75:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "20308:88:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20301:3:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "20444:5:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20451:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20440:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20440:16:21"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20458:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20463:6:21"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "20405:34:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "20405:65:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20405:65:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20479:23:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20490:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20495:6:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20486:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "20486:16:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20479:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20211:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20218:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20226:3:21",
														"type": ""
													}
												],
												"src": "20122:386:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20648:137:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20659:100:21",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20746:6:21"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20755:3:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20666:79:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "20666:93:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20659:3:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20769:10:21",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "20776:3:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20769:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20627:3:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20633:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20644:3:21",
														"type": ""
													}
												],
												"src": "20514:271:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20897:47:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20919:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20927:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20915:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20915:14:21"
																	},
																	{
																		"hexValue": "535445",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20931:5:21",
																		"type": "",
																		"value": "STE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20908:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "20908:29:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20908:29:21"
														}
													]
												},
												"name": "store_literal_in_memory_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20889:6:21",
														"type": ""
													}
												],
												"src": "20791:153:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21096:219:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21106:73:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21172:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21177:1:21",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21113:58:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "21113:66:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21106:3:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21277:3:21"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																	"nodeType": "YulIdentifier",
																	"src": "21188:88:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "21188:93:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21188:93:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21290:19:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21301:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21306:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21297:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "21297:12:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21290:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21084:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21092:3:21",
														"type": ""
													}
												],
												"src": "20950:365:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21492:248:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21502:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21514:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21525:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21510:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "21510:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21502:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21549:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21560:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21545:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21545:17:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21568:4:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21574:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21564:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21564:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21538:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "21538:47:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21538:47:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21594:139:21",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21728:4:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21602:124:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "21602:131:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21594:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21472:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21487:4:21",
														"type": ""
													}
												],
												"src": "21321:419:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21809:52:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21826:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21848:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "21831:16:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21831:23:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21819:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "21819:36:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21819:36:21"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21797:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21804:3:21",
														"type": ""
													}
												],
												"src": "21746:115:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22019:286:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22029:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22041:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22052:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22037:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "22037:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22029:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22109:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22122:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22133:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22118:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22118:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22065:43:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "22065:71:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22065:71:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "22190:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22203:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22214:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22199:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22199:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22146:43:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "22146:72:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22146:72:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "22270:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22283:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22294:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22279:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22279:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22228:41:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "22228:70:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22228:70:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21975:9:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "21987:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "21995:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22003:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22014:4:21",
														"type": ""
													}
												],
												"src": "21867:438:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22425:34:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22435:18:21",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "22450:3:21"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "22435:11:21"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22397:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "22402:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "22413:11:21",
														"type": ""
													}
												],
												"src": "22311:148:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22571:108:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22593:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22601:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22589:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22589:14:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22605:66:21",
																		"type": "",
																		"value": "0xff00000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22582:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "22582:90:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22582:90:21"
														}
													]
												},
												"name": "store_literal_in_memory_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22563:6:21",
														"type": ""
													}
												],
												"src": "22465:214:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22849:236:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22859:91:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22943:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22948:1:21",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22866:76:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "22866:84:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22859:3:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23048:3:21"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9",
																	"nodeType": "YulIdentifier",
																	"src": "22959:88:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "22959:93:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22959:93:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23061:18:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23072:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23077:1:21",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23068:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "23068:11:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23061:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22837:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22845:3:21",
														"type": ""
													}
												],
												"src": "22685:400:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23133:52:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23143:35:21",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23168:2:21",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23172:5:21"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "23164:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "23164:14:21"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "23143:8:21"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23114:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "23124:8:21",
														"type": ""
													}
												],
												"src": "23091:94:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23238:47:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23248:31:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23273:5:21"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nodeType": "YulIdentifier",
																	"src": "23259:13:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "23259:20:21"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "23248:7:21"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23220:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "23230:7:21",
														"type": ""
													}
												],
												"src": "23191:94:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23338:53:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23348:37:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23379:5:21"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "23359:19:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "23359:26:21"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "23348:7:21"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23320:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "23330:7:21",
														"type": ""
													}
												],
												"src": "23291:100:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23480:74:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23497:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "23540:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "23522:17:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23522:24:21"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "23502:19:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23502:45:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23490:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "23490:58:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23490:58:21"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23468:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23475:3:21",
														"type": ""
													}
												],
												"src": "23397:157:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23605:32:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23615:16:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "23626:5:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "23615:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23587:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "23597:7:21",
														"type": ""
													}
												],
												"src": "23560:77:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23690:32:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23700:16:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "23711:5:21"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "23700:7:21"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23672:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "23682:7:21",
														"type": ""
													}
												],
												"src": "23643:79:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23811:74:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23828:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "23871:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "23853:17:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23853:24:21"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "23833:19:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23833:45:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23821:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "23821:58:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23821:58:21"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23799:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23806:3:21",
														"type": ""
													}
												],
												"src": "23728:157:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24164:531:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24175:155:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24326:3:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24182:142:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "24182:148:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24175:3:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "24402:6:21"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24411:3:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24340:61:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "24340:75:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24340:75:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24424:19:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24435:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24440:2:21",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24431:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "24431:12:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24424:3:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "24515:6:21"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24524:3:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24453:61:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "24453:75:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24453:75:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24537:19:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24548:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24553:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24544:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "24544:12:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24537:3:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "24628:6:21"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24637:3:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24566:61:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "24566:75:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24566:75:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24650:19:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24661:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24666:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24657:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "24657:12:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24650:3:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24679:10:21",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "24686:3:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24679:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9_t_address_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24127:3:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "24133:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "24141:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24149:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24160:3:21",
														"type": ""
													}
												],
												"src": "23891:804:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24827:206:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24837:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24849:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24860:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24845:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "24845:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24837:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "24917:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24930:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24941:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24926:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24926:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24873:43:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "24873:71:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24873:71:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "24998:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25011:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25022:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25007:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25007:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24954:43:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "24954:72:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24954:72:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24791:9:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "24803:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24811:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24822:4:21",
														"type": ""
													}
												],
												"src": "24701:332:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25081:48:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25091:32:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "25116:5:21"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "25109:6:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25109:13:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "25102:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "25102:21:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "25091:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25063:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "25073:7:21",
														"type": ""
													}
												],
												"src": "25039:90:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25175:76:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25229:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25238:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25241:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "25231:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25231:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25231:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "25198:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "25220:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "25205:14:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25205:21:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "25195:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25195:32:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "25188:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "25188:40:21"
															},
															"nodeType": "YulIf",
															"src": "25185:60:21"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25168:5:21",
														"type": ""
													}
												],
												"src": "25135:116:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25317:77:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25327:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "25342:6:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "25336:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "25336:13:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "25327:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25382:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "25358:23:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "25358:30:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25358:30:21"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "25295:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25303:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25311:5:21",
														"type": ""
													}
												],
												"src": "25257:137:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25474:271:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25520:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "25522:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25522:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25522:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "25495:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25504:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25491:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25491:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25516:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "25487:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "25487:32:21"
															},
															"nodeType": "YulIf",
															"src": "25484:119:21"
														},
														{
															"nodeType": "YulBlock",
															"src": "25613:125:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "25628:15:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25642:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "25632:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "25657:71:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "25700:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "25711:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "25696:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25696:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "25720:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "25667:28:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25667:61:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "25657:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25444:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "25455:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25467:6:21",
														"type": ""
													}
												],
												"src": "25400:345:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25857:46:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25879:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25887:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25875:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25875:14:21"
																	},
																	{
																		"hexValue": "5354",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25891:4:21",
																		"type": "",
																		"value": "ST"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25868:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "25868:28:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25868:28:21"
														}
													]
												},
												"name": "store_literal_in_memory_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "25849:6:21",
														"type": ""
													}
												],
												"src": "25751:152:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26055:219:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26065:73:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26131:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26136:1:21",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26072:58:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "26072:66:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26065:3:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26236:3:21"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																	"nodeType": "YulIdentifier",
																	"src": "26147:88:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "26147:93:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26147:93:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26249:19:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26260:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26265:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26256:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "26256:12:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26249:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26043:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26051:3:21",
														"type": ""
													}
												],
												"src": "25909:365:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26451:248:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26461:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26473:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26484:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26469:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "26469:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26461:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26508:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26519:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26504:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26504:17:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "26527:4:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26533:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26523:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26523:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26497:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "26497:47:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26497:47:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26553:139:21",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26687:4:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26561:124:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "26561:131:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26553:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26431:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26446:4:21",
														"type": ""
													}
												],
												"src": "26280:419:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26811:46:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26833:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26841:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26829:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26829:14:21"
																	},
																	{
																		"hexValue": "5341",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26845:4:21",
																		"type": "",
																		"value": "SA"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26822:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "26822:28:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26822:28:21"
														}
													]
												},
												"name": "store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "26803:6:21",
														"type": ""
													}
												],
												"src": "26705:152:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27009:219:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27019:73:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27085:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27090:1:21",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27026:58:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "27026:66:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "27019:3:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27190:3:21"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																	"nodeType": "YulIdentifier",
																	"src": "27101:88:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "27101:93:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27101:93:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27203:19:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27214:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27219:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27210:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "27210:12:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "27203:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26997:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27005:3:21",
														"type": ""
													}
												],
												"src": "26863:365:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27405:248:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27415:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27427:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27438:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27423:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "27423:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27415:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27462:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27473:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27458:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27458:17:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27481:4:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27487:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27477:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27477:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27451:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "27451:47:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27451:47:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27507:139:21",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "27641:4:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27515:124:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "27515:131:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27507:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27385:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27400:4:21",
														"type": ""
													}
												],
												"src": "27234:419:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27687:152:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27704:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27707:77:21",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27697:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "27697:88:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27697:88:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27801:1:21",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27804:4:21",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27794:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "27794:15:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27794:15:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27825:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27828:4:21",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "27818:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "27818:15:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27818:15:21"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "27659:180:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27889:147:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27899:25:21",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "27922:1:21"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "27904:17:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "27904:20:21"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "27899:1:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "27933:25:21",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "27956:1:21"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "27938:17:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "27938:20:21"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "27933:1:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "27967:16:21",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "27978:1:21"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "27981:1:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27974:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "27974:9:21"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "27967:3:21"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28007:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "28009:16:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28009:18:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28009:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "27999:1:21"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "28002:3:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "27996:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "27996:10:21"
															},
															"nodeType": "YulIf",
															"src": "27993:36:21"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "27876:1:21",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "27879:1:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "27885:3:21",
														"type": ""
													}
												],
												"src": "27845:191:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28087:149:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28097:25:21",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "28120:1:21"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "28102:17:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "28102:20:21"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "28097:1:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "28131:25:21",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "28154:1:21"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "28136:17:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "28136:20:21"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "28131:1:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "28165:17:21",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "28177:1:21"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "28180:1:21"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "28173:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "28173:9:21"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "28165:4:21"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28207:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "28209:16:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28209:18:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28209:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "28198:4:21"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "28204:1:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "28195:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "28195:11:21"
															},
															"nodeType": "YulIf",
															"src": "28192:37:21"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "28073:1:21",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "28076:1:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "28082:4:21",
														"type": ""
													}
												],
												"src": "28042:194:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28396:288:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28406:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28418:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28429:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28414:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "28414:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28406:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "28486:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28499:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28510:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28495:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28495:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28442:43:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "28442:71:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28442:71:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "28567:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28580:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28591:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28576:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28576:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28523:43:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "28523:72:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28523:72:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "28649:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28662:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28673:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28658:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28658:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28605:43:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "28605:72:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28605:72:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28352:9:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "28364:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "28372:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "28380:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28391:4:21",
														"type": ""
													}
												],
												"src": "28242:442:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28796:47:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28818:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28826:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28814:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28814:14:21"
																	},
																	{
																		"hexValue": "535446",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28830:5:21",
																		"type": "",
																		"value": "STF"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28807:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "28807:29:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28807:29:21"
														}
													]
												},
												"name": "store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28788:6:21",
														"type": ""
													}
												],
												"src": "28690:153:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28995:219:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29005:73:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29071:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29076:1:21",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29012:58:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "29012:66:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "29005:3:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29176:3:21"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																	"nodeType": "YulIdentifier",
																	"src": "29087:88:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "29087:93:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29087:93:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29189:19:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29200:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29205:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29196:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "29196:12:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "29189:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "28983:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "28991:3:21",
														"type": ""
													}
												],
												"src": "28849:365:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29391:248:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29401:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29413:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29424:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29409:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "29409:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29401:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29448:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29459:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29444:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29444:17:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "29467:4:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29473:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "29463:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29463:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29437:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "29437:47:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29437:47:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29493:139:21",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "29627:4:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29501:124:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "29501:131:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29493:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29371:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "29386:4:21",
														"type": ""
													}
												],
												"src": "29220:419:21"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function validator_revert_t_uint24(value) {\n        if iszero(eq(value, cleanup_t_uint24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint24(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint24(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint24t_uint256t_uint256t_uint24t_uint24(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint24(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint24(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint24(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISwapRouter_$1371_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ISwapRouter_$1371_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISwapRouter_$1371_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ISwapRouter_$1371__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ISwapRouter_$1371_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_01e23337f78f001c03af3011e04e4dea54f4997ff97d41da263c1606bf0f9f73(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient WETH9\")\n\n    }\n\n    function abi_encode_t_stringliteral_01e23337f78f001c03af3011e04e4dea54f4997ff97d41da263c1606bf0f9f73_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_01e23337f78f001c03af3011e04e4dea54f4997ff97d41da263c1606bf0f9f73(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_01e23337f78f001c03af3011e04e4dea54f4997ff97d41da263c1606bf0f9f73__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_01e23337f78f001c03af3011e04e4dea54f4997ff97d41da263c1606bf0f9f73_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    // struct PoolAddress.PoolKey -> struct PoolAddress.PoolKey\n    function abi_encode_t_struct$_PoolKey_$1728_memory_ptr_to_t_struct$_PoolKey_$1728_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x60)\n\n        {\n            // token0\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // token1\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    // struct FlashLoan.FlashCallbackData -> struct FlashLoan.FlashCallbackData\n    function abi_encode_t_struct$_FlashCallbackData_$993_memory_ptr_to_t_struct$_FlashCallbackData_$993_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // amount0\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // amount1\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // payer\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // poolKey\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_struct$_PoolKey_$1728_memory_ptr_to_t_struct$_PoolKey_$1728_memory_ptr(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // poolFee2\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // poolFee3\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_FlashCallbackData_$993_memory_ptr__to_t_struct$_FlashCallbackData_$993_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_FlashCallbackData_$993_memory_ptr_to_t_struct$_FlashCallbackData_$993_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function store_literal_in_memory_2cf3b53843c7738cfb0b95230b455802cee89f2ea29be4a30eee707228c97571(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient token\")\n\n    }\n\n    function abi_encode_t_stringliteral_2cf3b53843c7738cfb0b95230b455802cee89f2ea29be4a30eee707228c97571_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_2cf3b53843c7738cfb0b95230b455802cee89f2ea29be4a30eee707228c97571(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2cf3b53843c7738cfb0b95230b455802cee89f2ea29be4a30eee707228c97571__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2cf3b53843c7738cfb0b95230b455802cee89f2ea29be4a30eee707228c97571_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    // struct PoolAddress.PoolKey\n    function abi_decode_t_struct$_PoolKey_$1728_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x60) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x60)\n\n        {\n            // token0\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // token1\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // fee\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint24(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct FlashLoan.FlashCallbackData\n    function abi_decode_t_struct$_FlashCallbackData_$993_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x0100) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0xc0)\n\n        {\n            // amount0\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // amount1\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // payer\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // poolKey\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_struct$_PoolKey_$1728_memory_ptr(add(headStart, offset), end))\n\n        }\n\n        {\n            // poolFee2\n\n            let offset := 192\n\n            mstore(add(value, 0x80), abi_decode_t_uint24(add(headStart, offset), end))\n\n        }\n\n        {\n            // poolFee3\n\n            let offset := 224\n\n            mstore(add(value, 0xa0), abi_decode_t_uint24(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_FlashCallbackData_$993_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 256) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_FlashCallbackData_$993_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint160_to_t_uint160(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    // struct ISwapRouter.ExactInputSingleParams -> struct ISwapRouter.ExactInputSingleParams\n    function abi_encode_t_struct$_ExactInputSingleParams_$1295_memory_ptr_to_t_struct$_ExactInputSingleParams_$1295_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountIn\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountOutMinimum\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$1295_memory_ptr__to_t_struct$_ExactInputSingleParams_$1295_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_ExactInputSingleParams_$1295_memory_ptr_to_t_struct$_ExactInputSingleParams_$1295_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4(memPtr) {\n\n        mstore(add(memPtr, 0), \"STE\")\n\n    }\n\n    function abi_encode_t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 3)\n        store_literal_in_memory_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint24_to_t_uint24_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9(memPtr) {\n\n        mstore(add(memPtr, 0), 0xff00000000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 1)\n        store_literal_in_memory_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9(pos)\n        end := add(pos, 1)\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9_t_address_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca(memPtr) {\n\n        mstore(add(memPtr, 0), \"ST\")\n\n    }\n\n    function abi_encode_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 2)\n        store_literal_in_memory_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa(memPtr) {\n\n        mstore(add(memPtr, 0), \"SA\")\n\n    }\n\n    function abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 2)\n        store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86(memPtr) {\n\n        mstore(add(memPtr, 0), \"STF\")\n\n    }\n\n    function abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 3)\n        store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 21,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"675": [
									{
										"length": 32,
										"start": 1198
									},
									{
										"length": 32,
										"start": 1578
									},
									{
										"length": 32,
										"start": 1624
									},
									{
										"length": 32,
										"start": 1701
									},
									{
										"length": 32,
										"start": 2015
									}
								],
								"1426": [
									{
										"length": 32,
										"start": 931
									},
									{
										"length": 32,
										"start": 1234
									},
									{
										"length": 32,
										"start": 1507
									}
								],
								"1430": [
									{
										"length": 32,
										"start": 433
									},
									{
										"length": 32,
										"start": 662
									},
									{
										"length": 32,
										"start": 812
									},
									{
										"length": 32,
										"start": 3775
									},
									{
										"length": 32,
										"start": 3871
									},
									{
										"length": 32,
										"start": 3996
									}
								]
							},
							"linkReferences": {},
							"object": "60806040526004361061007e575f3560e01c8063c31c9c071161004d578063c31c9c0714610101578063c45a01551461012b578063df2ab5bb14610155578063e9cbafb01461017157610085565b806312210e8a1461008957806349404b7c146100935780634aa4a4fc146100af578063833263e6146100d957610085565b3661008557005b5f80fd5b610091610199565b005b6100ad60048036038101906100a891906112a3565b6101ae565b005b3480156100ba575f80fd5b506100c361032a565b6040516100d091906112f0565b60405180910390f35b3480156100e4575f80fd5b506100ff60048036038101906100fa9190611341565b61034e565b005b34801561010c575f80fd5b506101156104ac565b6040516101229190611439565b60405180910390f35b348015610136575f80fd5b5061013f6104d0565b60405161014c91906112f0565b60405180910390f35b61016f600480360381019061016a9190611452565b6104f4565b005b34801561017c575f80fd5b5061019760048036038101906101929190611503565b6105cc565b005b5f4711156101ac576101ab33476109e9565b5b565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161020891906112f0565b602060405180830381865afa158015610223573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102479190611588565b90508281101561028c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102839061160d565b60405180910390fd5b5f811115610325577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b81526004016102ed919061163a565b5f604051808303815f87803b158015610304575f80fd5b505af1158015610316573d5f803e3d5ffd5b5050505061032482826109e9565b5b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f60405180606001604052808973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018762ffffff1681525090505f6103c87f000000000000000000000000000000000000000000000000000000000000000083610ae4565b90508073ffffffffffffffffffffffffffffffffffffffff1663490e6cbc3088886040518060c001604052808c81526020018b81526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018881526020018a62ffffff1681526020018962ffffff16815250604051602001610446919061173a565b6040516020818303038152906040526040518563ffffffff1660e01b815260040161047494939291906117de565b5f604051808303815f87803b15801561048b575f80fd5b505af115801561049d573d5f803e3d5ffd5b50505050505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f8373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161052e91906112f0565b602060405180830381865afa158015610549573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061056d9190611588565b9050828110156105b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a990611872565b60405180910390fd5b5f8111156105c6576105c5848383610bb4565b5b50505050565b5f82828101906105dc9190611a0b565b905061060c7f00000000000000000000000000000000000000000000000000000000000000008260600151610d03565b505f81606001515f015190505f8260600151602001519050610652827f0000000000000000000000000000000000000000000000000000000000000000855f0151610d4d565b610681817f00000000000000000000000000000000000000000000000000000000000000008560200151610d4d565b5f610690846020015188610e9c565b90505f6106a0855f01518a610e9c565b90505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf3896040518061010001604052808773ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff168152602001896080015162ffffff1681526020013073ffffffffffffffffffffffffffffffffffffffff168152602001428152602001896020015181526020018581526020015f73ffffffffffffffffffffffffffffffffffffffff168152506040518263ffffffff1660e01b815260040161079a9190611ae6565b6020604051808303815f875af11580156107b6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107da9190611588565b90505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf3896040518061010001604052808973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018a60a0015162ffffff1681526020013073ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018a5f015181526020018781526020015f73ffffffffffffffffffffffffffffffffffffffff168152506040518263ffffffff1660e01b81526004016108d39190611ae6565b6020604051808303815f875af11580156108ef573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109139190611588565b90505f610923885f01518d610e9c565b90505f61093489602001518d610e9c565b9050610941883084610d4d565b61094c873083610d4d565b5f8211156109615761096088303385610ebd565b5b5f8111156109765761097587303384610ebd565b5b818411156109a8575f6109898584611092565b9050610996893083610d4d565b6109a689308c6040015184610ebd565b505b808311156109da575f6109bb8483611092565b90506109c8893083610d4d565b6109d888308c6040015184610ebd565b505b50505050505050505050505050565b5f8273ffffffffffffffffffffffffffffffffffffffff16825f67ffffffffffffffff811115610a1c57610a1b611894565b5b6040519080825280601f01601f191660200182016040528015610a4e5781602001600182028036833780820191505090505b50604051610a5c9190611b3a565b5f6040518083038185875af1925050503d805f8114610a96576040519150601f19603f3d011682016040523d82523d5f602084013e610a9b565b606091505b5050905080610adf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad690611b9a565b60405180910390fd5b505050565b5f816020015173ffffffffffffffffffffffffffffffffffffffff16825f015173ffffffffffffffffffffffffffffffffffffffff1610610b23575f80fd5b5f83835f015184602001518560400151604051602001610b4593929190611bc7565b604051602081830303815290604052805190602001207fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b545f1b604051602001610b9093929190611cbe565b604051602081830303815290604052805190602001209050805f1c91505092915050565b5f808473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b8585604051602401610be8929190611d05565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610c529190611b3a565b5f604051808303815f865af19150503d805f8114610c8b576040519150601f19603f3d011682016040523d82523d5f602084013e610c90565b606091505b5091509150818015610cbd57505f81511480610cbc575080806020019051810190610cbb9190611d61565b5b5b610cfc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf390611dd6565b60405180910390fd5b5050505050565b5f610d0e8383610ae4565b90508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d47575f80fd5b92915050565b5f808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b8585604051602401610d81929190611d05565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610deb9190611b3a565b5f604051808303815f865af19150503d805f8114610e24576040519150601f19603f3d011682016040523d82523d5f602084013e610e29565b606091505b5091509150818015610e5657505f81511480610e55575080806020019051810190610e549190611d61565b5b5b610e95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8c90611e3e565b60405180910390fd5b5050505050565b5f828284610eaa9190611e89565b9150811015610eb7575f80fd5b92915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148015610f185750804710155b1561103b577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0826040518263ffffffff1660e01b81526004015f604051808303818588803b158015610f83575f80fd5b505af1158015610f95573d5f803e3d5ffd5b50505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610ff5929190611d05565b6020604051808303815f875af1158015611011573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110359190611d61565b5061108c565b3073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361107e57611079848383610bb4565b61108b565b61108a848484846110b3565b5b5b50505050565b5f8282846110a09190611ebc565b91508111156110ad575f80fd5b92915050565b5f808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b8686866040516024016110e993929190611eef565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516111539190611b3a565b5f604051808303815f865af19150503d805f811461118c576040519150601f19603f3d011682016040523d82523d5f602084013e611191565b606091505b50915091508180156111be57505f815114806111bd5750808060200190518101906111bc9190611d61565b5b5b6111fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f490611f6e565b60405180910390fd5b505050505050565b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b61122881611216565b8114611232575f80fd5b50565b5f813590506112438161121f565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61127282611249565b9050919050565b61128281611268565b811461128c575f80fd5b50565b5f8135905061129d81611279565b92915050565b5f80604083850312156112b9576112b861120e565b5b5f6112c685828601611235565b92505060206112d78582860161128f565b9150509250929050565b6112ea81611268565b82525050565b5f6020820190506113035f8301846112e1565b92915050565b5f62ffffff82169050919050565b61132081611309565b811461132a575f80fd5b50565b5f8135905061133b81611317565b92915050565b5f805f805f805f60e0888a03121561135c5761135b61120e565b5b5f6113698a828b0161128f565b975050602061137a8a828b0161128f565b965050604061138b8a828b0161132d565b955050606061139c8a828b01611235565b94505060806113ad8a828b01611235565b93505060a06113be8a828b0161132d565b92505060c06113cf8a828b0161132d565b91505092959891949750929550565b5f819050919050565b5f6114016113fc6113f784611249565b6113de565b611249565b9050919050565b5f611412826113e7565b9050919050565b5f61142382611408565b9050919050565b61143381611419565b82525050565b5f60208201905061144c5f83018461142a565b92915050565b5f805f606084860312156114695761146861120e565b5b5f6114768682870161128f565b935050602061148786828701611235565b92505060406114988682870161128f565b9150509250925092565b5f80fd5b5f80fd5b5f80fd5b5f8083601f8401126114c3576114c26114a2565b5b8235905067ffffffffffffffff8111156114e0576114df6114a6565b5b6020830191508360018202830111156114fc576114fb6114aa565b5b9250929050565b5f805f806060858703121561151b5761151a61120e565b5b5f61152887828801611235565b945050602061153987828801611235565b935050604085013567ffffffffffffffff81111561155a57611559611212565b5b611566878288016114ae565b925092505092959194509250565b5f815190506115828161121f565b92915050565b5f6020828403121561159d5761159c61120e565b5b5f6115aa84828501611574565b91505092915050565b5f82825260208201905092915050565b7f496e73756666696369656e7420574554483900000000000000000000000000005f82015250565b5f6115f76012836115b3565b9150611602826115c3565b602082019050919050565b5f6020820190508181035f830152611624816115eb565b9050919050565b61163481611216565b82525050565b5f60208201905061164d5f83018461162b565b92915050565b61165c81611216565b82525050565b61166b81611268565b82525050565b61167a81611309565b82525050565b606082015f8201516116945f850182611662565b5060208201516116a76020850182611662565b5060408201516116ba6040850182611671565b50505050565b61010082015f8201516116d55f850182611653565b5060208201516116e86020850182611653565b5060408201516116fb6040850182611662565b50606082015161170e6060850182611680565b50608082015161172160c0850182611671565b5060a082015161173460e0850182611671565b50505050565b5f6101008201905061174e5f8301846116c0565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561178b578082015181840152602081019050611770565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6117b082611754565b6117ba818561175e565b93506117ca81856020860161176e565b6117d381611796565b840191505092915050565b5f6080820190506117f15f8301876112e1565b6117fe602083018661162b565b61180b604083018561162b565b818103606083015261181d81846117a6565b905095945050505050565b7f496e73756666696369656e7420746f6b656e00000000000000000000000000005f82015250565b5f61185c6012836115b3565b915061186782611828565b602082019050919050565b5f6020820190508181035f83015261188981611850565b9050919050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6118ca82611796565b810181811067ffffffffffffffff821117156118e9576118e8611894565b5b80604052505050565b5f6118fb611205565b905061190782826118c1565b919050565b5f6060828403121561192157611920611890565b5b61192b60606118f2565b90505f61193a8482850161128f565b5f83015250602061194d8482850161128f565b60208301525060406119618482850161132d565b60408301525092915050565b5f610100828403121561198357611982611890565b5b61198d60c06118f2565b90505f61199c84828501611235565b5f8301525060206119af84828501611235565b60208301525060406119c38482850161128f565b60408301525060606119d78482850161190c565b60608301525060c06119eb8482850161132d565b60808301525060e06119ff8482850161132d565b60a08301525092915050565b5f6101008284031215611a2157611a2061120e565b5b5f611a2e8482850161196d565b91505092915050565b611a4081611249565b82525050565b61010082015f820151611a5b5f850182611662565b506020820151611a6e6020850182611662565b506040820151611a816040850182611671565b506060820151611a946060850182611662565b506080820151611aa76080850182611653565b5060a0820151611aba60a0850182611653565b5060c0820151611acd60c0850182611653565b5060e0820151611ae060e0850182611a37565b50505050565b5f61010082019050611afa5f830184611a46565b92915050565b5f81905092915050565b5f611b1482611754565b611b1e8185611b00565b9350611b2e81856020860161176e565b80840191505092915050565b5f611b458284611b0a565b915081905092915050565b7f53544500000000000000000000000000000000000000000000000000000000005f82015250565b5f611b846003836115b3565b9150611b8f82611b50565b602082019050919050565b5f6020820190508181035f830152611bb181611b78565b9050919050565b611bc181611309565b82525050565b5f606082019050611bda5f8301866112e1565b611be760208301856112e1565b611bf46040830184611bb8565b949350505050565b5f81905092915050565b7fff000000000000000000000000000000000000000000000000000000000000005f82015250565b5f611c3a600183611bfc565b9150611c4582611c06565b600182019050919050565b5f8160601b9050919050565b5f611c6682611c50565b9050919050565b5f611c7782611c5c565b9050919050565b611c8f611c8a82611268565b611c6d565b82525050565b5f819050919050565b5f819050919050565b611cb8611cb382611c95565b611c9e565b82525050565b5f611cc882611c2e565b9150611cd48286611c7e565b601482019150611ce48285611ca7565b602082019150611cf48284611ca7565b602082019150819050949350505050565b5f604082019050611d185f8301856112e1565b611d25602083018461162b565b9392505050565b5f8115159050919050565b611d4081611d2c565b8114611d4a575f80fd5b50565b5f81519050611d5b81611d37565b92915050565b5f60208284031215611d7657611d7561120e565b5b5f611d8384828501611d4d565b91505092915050565b7f53540000000000000000000000000000000000000000000000000000000000005f82015250565b5f611dc06002836115b3565b9150611dcb82611d8c565b602082019050919050565b5f6020820190508181035f830152611ded81611db4565b9050919050565b7f53410000000000000000000000000000000000000000000000000000000000005f82015250565b5f611e286002836115b3565b9150611e3382611df4565b602082019050919050565b5f6020820190508181035f830152611e5581611e1c565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611e9382611216565b9150611e9e83611216565b9250828201905080821115611eb657611eb5611e5c565b5b92915050565b5f611ec682611216565b9150611ed183611216565b9250828203905081811115611ee957611ee8611e5c565b5b92915050565b5f606082019050611f025f8301866112e1565b611f0f60208301856112e1565b611f1c604083018461162b565b949350505050565b7f53544600000000000000000000000000000000000000000000000000000000005f82015250565b5f611f586003836115b3565b9150611f6382611f24565b602082019050919050565b5f6020820190508181035f830152611f8581611f4c565b905091905056fea2646970667358221220ce9940ad7e435bb3f7c55704562e4f9e098f32ce51f9934c3101b295a633a4a664736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC31C9C07 GT PUSH2 0x4D JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0xDF2AB5BB EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0xE9CBAFB0 EQ PUSH2 0x171 JUMPI PUSH2 0x85 JUMP JUMPDEST DUP1 PUSH4 0x12210E8A EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x49404B7C EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x4AA4A4FC EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x833263E6 EQ PUSH2 0xD9 JUMPI PUSH2 0x85 JUMP JUMPDEST CALLDATASIZE PUSH2 0x85 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x91 PUSH2 0x199 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0x12A3 JUMP JUMPDEST PUSH2 0x1AE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xC3 PUSH2 0x32A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0x12F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x1341 JUMP JUMPDEST PUSH2 0x34E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x115 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x12F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x1452 JUMP JUMPDEST PUSH2 0x4F4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x1503 JUMP JUMPDEST PUSH2 0x5CC JUMP JUMPDEST STOP JUMPDEST PUSH0 SELFBALANCE GT ISZERO PUSH2 0x1AC JUMPI PUSH2 0x1AB CALLER SELFBALANCE PUSH2 0x9E9 JUMP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x12F0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x223 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x1588 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x28C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x283 SWAP1 PUSH2 0x160D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x325 JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2E1A7D4D DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x163A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x304 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x316 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0x324 DUP3 DUP3 PUSH2 0x9E9 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH3 0xFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH0 PUSH2 0x3C8 PUSH32 0x0 DUP4 PUSH2 0xAE4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x490E6CBC ADDRESS DUP9 DUP9 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP13 DUP2 MSTORE PUSH1 0x20 ADD DUP12 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH3 0xFFFFFF AND DUP2 MSTORE POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x446 SWAP2 SWAP1 PUSH2 0x173A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x474 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17DE JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x48B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x49D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52E SWAP2 SWAP1 PUSH2 0x12F0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x549 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x56D SWAP2 SWAP1 PUSH2 0x1588 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x5B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A9 SWAP1 PUSH2 0x1872 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x5C6 JUMPI PUSH2 0x5C5 DUP5 DUP4 DUP4 PUSH2 0xBB4 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 DUP2 ADD SWAP1 PUSH2 0x5DC SWAP2 SWAP1 PUSH2 0x1A0B JUMP JUMPDEST SWAP1 POP PUSH2 0x60C PUSH32 0x0 DUP3 PUSH1 0x60 ADD MLOAD PUSH2 0xD03 JUMP JUMPDEST POP PUSH0 DUP2 PUSH1 0x60 ADD MLOAD PUSH0 ADD MLOAD SWAP1 POP PUSH0 DUP3 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH2 0x652 DUP3 PUSH32 0x0 DUP6 PUSH0 ADD MLOAD PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x681 DUP2 PUSH32 0x0 DUP6 PUSH1 0x20 ADD MLOAD PUSH2 0xD4D JUMP JUMPDEST PUSH0 PUSH2 0x690 DUP5 PUSH1 0x20 ADD MLOAD DUP9 PUSH2 0xE9C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x6A0 DUP6 PUSH0 ADD MLOAD DUP11 PUSH2 0xE9C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x80 ADD MLOAD PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x20 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79A SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7B6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7DA SWAP2 SWAP1 PUSH2 0x1588 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH1 0xA0 ADD MLOAD PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D3 SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8EF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x913 SWAP2 SWAP1 PUSH2 0x1588 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x923 DUP9 PUSH0 ADD MLOAD DUP14 PUSH2 0xE9C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x934 DUP10 PUSH1 0x20 ADD MLOAD DUP14 PUSH2 0xE9C JUMP JUMPDEST SWAP1 POP PUSH2 0x941 DUP9 ADDRESS DUP5 PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x94C DUP8 ADDRESS DUP4 PUSH2 0xD4D JUMP JUMPDEST PUSH0 DUP3 GT ISZERO PUSH2 0x961 JUMPI PUSH2 0x960 DUP9 ADDRESS CALLER DUP6 PUSH2 0xEBD JUMP JUMPDEST JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x976 JUMPI PUSH2 0x975 DUP8 ADDRESS CALLER DUP5 PUSH2 0xEBD JUMP JUMPDEST JUMPDEST DUP2 DUP5 GT ISZERO PUSH2 0x9A8 JUMPI PUSH0 PUSH2 0x989 DUP6 DUP5 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP PUSH2 0x996 DUP10 ADDRESS DUP4 PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x9A6 DUP10 ADDRESS DUP13 PUSH1 0x40 ADD MLOAD DUP5 PUSH2 0xEBD JUMP JUMPDEST POP JUMPDEST DUP1 DUP4 GT ISZERO PUSH2 0x9DA JUMPI PUSH0 PUSH2 0x9BB DUP5 DUP4 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP PUSH2 0x9C8 DUP10 ADDRESS DUP4 PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x9D8 DUP9 ADDRESS DUP13 PUSH1 0x40 ADD MLOAD DUP5 PUSH2 0xEBD JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA1C JUMPI PUSH2 0xA1B PUSH2 0x1894 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA4E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA5C SWAP2 SWAP1 PUSH2 0x1B3A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xA96 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xADF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD6 SWAP1 PUSH2 0x1B9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0xB23 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP4 DUP4 PUSH0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB45 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH32 0xE34F199B19B2B4F47F68442619D555527D244F78A3297EA89325F843F87B8B54 PUSH0 SHL PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB90 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP1 PUSH0 SHR SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xBE8 SWAP3 SWAP2 SWAP1 PUSH2 0x1D05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0xC52 SWAP2 SWAP1 PUSH2 0x1B3A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xC8B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC90 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xCBD JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0xCBC JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xCBB SWAP2 SWAP1 PUSH2 0x1D61 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0xCFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF3 SWAP1 PUSH2 0x1DD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD0E DUP4 DUP4 PUSH2 0xAE4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD47 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xD81 SWAP3 SWAP2 SWAP1 PUSH2 0x1D05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0xDEB SWAP2 SWAP1 PUSH2 0x1B3A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xE24 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE29 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xE56 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0xE55 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xE54 SWAP2 SWAP1 PUSH2 0x1D61 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0xE95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE8C SWAP1 PUSH2 0x1E3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 DUP5 PUSH2 0xEAA SWAP2 SWAP1 PUSH2 0x1E89 JUMP JUMPDEST SWAP2 POP DUP2 LT ISZERO PUSH2 0xEB7 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xF18 JUMPI POP DUP1 SELFBALANCE LT ISZERO JUMPDEST ISZERO PUSH2 0x103B JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF83 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF95 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF5 SWAP3 SWAP2 SWAP1 PUSH2 0x1D05 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1011 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1035 SWAP2 SWAP1 PUSH2 0x1D61 JUMP JUMPDEST POP PUSH2 0x108C JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x107E JUMPI PUSH2 0x1079 DUP5 DUP4 DUP4 PUSH2 0xBB4 JUMP JUMPDEST PUSH2 0x108B JUMP JUMPDEST PUSH2 0x108A DUP5 DUP5 DUP5 DUP5 PUSH2 0x10B3 JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 DUP5 PUSH2 0x10A0 SWAP2 SWAP1 PUSH2 0x1EBC JUMP JUMPDEST SWAP2 POP DUP2 GT ISZERO PUSH2 0x10AD JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x10E9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x1153 SWAP2 SWAP1 PUSH2 0x1B3A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x118C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x11BE JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x11BD JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x11BC SWAP2 SWAP1 PUSH2 0x1D61 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x11FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F4 SWAP1 PUSH2 0x1F6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1228 DUP2 PUSH2 0x1216 JUMP JUMPDEST DUP2 EQ PUSH2 0x1232 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1243 DUP2 PUSH2 0x121F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1272 DUP3 PUSH2 0x1249 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1282 DUP2 PUSH2 0x1268 JUMP JUMPDEST DUP2 EQ PUSH2 0x128C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x129D DUP2 PUSH2 0x1279 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12B9 JUMPI PUSH2 0x12B8 PUSH2 0x120E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12C6 DUP6 DUP3 DUP7 ADD PUSH2 0x1235 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12D7 DUP6 DUP3 DUP7 ADD PUSH2 0x128F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x12EA DUP2 PUSH2 0x1268 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1303 PUSH0 DUP4 ADD DUP5 PUSH2 0x12E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1320 DUP2 PUSH2 0x1309 JUMP JUMPDEST DUP2 EQ PUSH2 0x132A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x133B DUP2 PUSH2 0x1317 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x135C JUMPI PUSH2 0x135B PUSH2 0x120E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1369 DUP11 DUP3 DUP12 ADD PUSH2 0x128F JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x137A DUP11 DUP3 DUP12 ADD PUSH2 0x128F JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x138B DUP11 DUP3 DUP12 ADD PUSH2 0x132D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x139C DUP11 DUP3 DUP12 ADD PUSH2 0x1235 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x13AD DUP11 DUP3 DUP12 ADD PUSH2 0x1235 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x13BE DUP11 DUP3 DUP12 ADD PUSH2 0x132D JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x13CF DUP11 DUP3 DUP12 ADD PUSH2 0x132D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1401 PUSH2 0x13FC PUSH2 0x13F7 DUP5 PUSH2 0x1249 JUMP JUMPDEST PUSH2 0x13DE JUMP JUMPDEST PUSH2 0x1249 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1412 DUP3 PUSH2 0x13E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1423 DUP3 PUSH2 0x1408 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1433 DUP2 PUSH2 0x1419 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x144C PUSH0 DUP4 ADD DUP5 PUSH2 0x142A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1469 JUMPI PUSH2 0x1468 PUSH2 0x120E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1476 DUP7 DUP3 DUP8 ADD PUSH2 0x128F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1487 DUP7 DUP3 DUP8 ADD PUSH2 0x1235 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1498 DUP7 DUP3 DUP8 ADD PUSH2 0x128F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x14C3 JUMPI PUSH2 0x14C2 PUSH2 0x14A2 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14E0 JUMPI PUSH2 0x14DF PUSH2 0x14A6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x14FC JUMPI PUSH2 0x14FB PUSH2 0x14AA JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x151B JUMPI PUSH2 0x151A PUSH2 0x120E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1528 DUP8 DUP3 DUP9 ADD PUSH2 0x1235 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1539 DUP8 DUP3 DUP9 ADD PUSH2 0x1235 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x155A JUMPI PUSH2 0x1559 PUSH2 0x1212 JUMP JUMPDEST JUMPDEST PUSH2 0x1566 DUP8 DUP3 DUP9 ADD PUSH2 0x14AE JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1582 DUP2 PUSH2 0x121F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x159D JUMPI PUSH2 0x159C PUSH2 0x120E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15AA DUP5 DUP3 DUP6 ADD PUSH2 0x1574 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742057455448390000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15F7 PUSH1 0x12 DUP4 PUSH2 0x15B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1602 DUP3 PUSH2 0x15C3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1624 DUP2 PUSH2 0x15EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1634 DUP2 PUSH2 0x1216 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x164D PUSH0 DUP4 ADD DUP5 PUSH2 0x162B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x165C DUP2 PUSH2 0x1216 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x166B DUP2 PUSH2 0x1268 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x167A DUP2 PUSH2 0x1309 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1694 PUSH0 DUP6 ADD DUP3 PUSH2 0x1662 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x16A7 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1662 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x16BA PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1671 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x16D5 PUSH0 DUP6 ADD DUP3 PUSH2 0x1653 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x16E8 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1653 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x16FB PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1662 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x170E PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x1680 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x1721 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x1671 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x1734 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x1671 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x174E PUSH0 DUP4 ADD DUP5 PUSH2 0x16C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x178B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1770 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17B0 DUP3 PUSH2 0x1754 JUMP JUMPDEST PUSH2 0x17BA DUP2 DUP6 PUSH2 0x175E JUMP JUMPDEST SWAP4 POP PUSH2 0x17CA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x176E JUMP JUMPDEST PUSH2 0x17D3 DUP2 PUSH2 0x1796 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x17F1 PUSH0 DUP4 ADD DUP8 PUSH2 0x12E1 JUMP JUMPDEST PUSH2 0x17FE PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x162B JUMP JUMPDEST PUSH2 0x180B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x162B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x181D DUP2 DUP5 PUSH2 0x17A6 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420746F6B656E0000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x185C PUSH1 0x12 DUP4 PUSH2 0x15B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1867 DUP3 PUSH2 0x1828 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1889 DUP2 PUSH2 0x1850 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x18CA DUP3 PUSH2 0x1796 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18E9 JUMPI PUSH2 0x18E8 PUSH2 0x1894 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18FB PUSH2 0x1205 JUMP JUMPDEST SWAP1 POP PUSH2 0x1907 DUP3 DUP3 PUSH2 0x18C1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1921 JUMPI PUSH2 0x1920 PUSH2 0x1890 JUMP JUMPDEST JUMPDEST PUSH2 0x192B PUSH1 0x60 PUSH2 0x18F2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x193A DUP5 DUP3 DUP6 ADD PUSH2 0x128F JUMP JUMPDEST PUSH0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x194D DUP5 DUP3 DUP6 ADD PUSH2 0x128F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x1961 DUP5 DUP3 DUP6 ADD PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1983 JUMPI PUSH2 0x1982 PUSH2 0x1890 JUMP JUMPDEST JUMPDEST PUSH2 0x198D PUSH1 0xC0 PUSH2 0x18F2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x199C DUP5 DUP3 DUP6 ADD PUSH2 0x1235 JUMP JUMPDEST PUSH0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x19AF DUP5 DUP3 DUP6 ADD PUSH2 0x1235 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x19C3 DUP5 DUP3 DUP6 ADD PUSH2 0x128F JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x19D7 DUP5 DUP3 DUP6 ADD PUSH2 0x190C JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x19EB DUP5 DUP3 DUP6 ADD PUSH2 0x132D JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0x19FF DUP5 DUP3 DUP6 ADD PUSH2 0x132D JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A21 JUMPI PUSH2 0x1A20 PUSH2 0x120E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A2E DUP5 DUP3 DUP6 ADD PUSH2 0x196D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A40 DUP2 PUSH2 0x1249 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1A5B PUSH0 DUP6 ADD DUP3 PUSH2 0x1662 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1A6E PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1662 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1A81 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1671 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x1A94 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x1662 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x1AA7 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x1653 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x1ABA PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x1653 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x1ACD PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x1653 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x1AE0 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x1A37 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x1AFA PUSH0 DUP4 ADD DUP5 PUSH2 0x1A46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B14 DUP3 PUSH2 0x1754 JUMP JUMPDEST PUSH2 0x1B1E DUP2 DUP6 PUSH2 0x1B00 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B2E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x176E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B45 DUP3 DUP5 PUSH2 0x1B0A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5354450000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B84 PUSH1 0x3 DUP4 PUSH2 0x15B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B8F DUP3 PUSH2 0x1B50 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BB1 DUP2 PUSH2 0x1B78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BC1 DUP2 PUSH2 0x1309 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1BDA PUSH0 DUP4 ADD DUP7 PUSH2 0x12E1 JUMP JUMPDEST PUSH2 0x1BE7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12E1 JUMP JUMPDEST PUSH2 0x1BF4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1BB8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C3A PUSH1 0x1 DUP4 PUSH2 0x1BFC JUMP JUMPDEST SWAP2 POP PUSH2 0x1C45 DUP3 PUSH2 0x1C06 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C66 DUP3 PUSH2 0x1C50 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C77 DUP3 PUSH2 0x1C5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C8F PUSH2 0x1C8A DUP3 PUSH2 0x1268 JUMP JUMPDEST PUSH2 0x1C6D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CB8 PUSH2 0x1CB3 DUP3 PUSH2 0x1C95 JUMP JUMPDEST PUSH2 0x1C9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CC8 DUP3 PUSH2 0x1C2E JUMP JUMPDEST SWAP2 POP PUSH2 0x1CD4 DUP3 DUP7 PUSH2 0x1C7E JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x1CE4 DUP3 DUP6 PUSH2 0x1CA7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x1CF4 DUP3 DUP5 PUSH2 0x1CA7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D18 PUSH0 DUP4 ADD DUP6 PUSH2 0x12E1 JUMP JUMPDEST PUSH2 0x1D25 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x162B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D40 DUP2 PUSH2 0x1D2C JUMP JUMPDEST DUP2 EQ PUSH2 0x1D4A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D5B DUP2 PUSH2 0x1D37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D76 JUMPI PUSH2 0x1D75 PUSH2 0x120E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D83 DUP5 DUP3 DUP6 ADD PUSH2 0x1D4D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5354000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DC0 PUSH1 0x2 DUP4 PUSH2 0x15B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DCB DUP3 PUSH2 0x1D8C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DED DUP2 PUSH2 0x1DB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5341000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E28 PUSH1 0x2 DUP4 PUSH2 0x15B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E33 DUP3 PUSH2 0x1DF4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E55 DUP2 PUSH2 0x1E1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1E93 DUP3 PUSH2 0x1216 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E9E DUP4 PUSH2 0x1216 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1EB6 JUMPI PUSH2 0x1EB5 PUSH2 0x1E5C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EC6 DUP3 PUSH2 0x1216 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ED1 DUP4 PUSH2 0x1216 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1EE9 JUMPI PUSH2 0x1EE8 PUSH2 0x1E5C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F02 PUSH0 DUP4 ADD DUP7 PUSH2 0x12E1 JUMP JUMPDEST PUSH2 0x1F0F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12E1 JUMP JUMPDEST PUSH2 0x1F1C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x162B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5354460000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F58 PUSH1 0x3 DUP4 PUSH2 0x15B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F63 DUP3 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F85 DUP2 PUSH2 0x1F4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE SWAP10 BLOCKHASH 0xAD PUSH31 0x435BB3F7C55704562E4F9E098F32CE51F9934C3101B295A633A4A664736F6C PUSH4 0x43000814 STOP CALLER ",
							"sourceMap": "563:6417:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1377:168:18;;;:::i;:::-;;458:411;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;422:39:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5870:1107:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;739:39;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;328:41:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;917:412:18;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1987:3194:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1377:168:18;1463:1;1439:21;:25;1435:102;;;1466:71;1503:10;1515:21;1466:36;:71::i;:::-;1435:102;1377:168::o;458:411::-;556:20;586:5;579:23;;;611:4;579:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;556:61;;652:13;636:12;:29;;628:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;720:1;705:12;:16;701:161;;;745:5;738:22;;;761:12;738:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;789:61;826:9;837:12;789:36;:61::i;:::-;701:161;545:324;458:411;;:::o;422:39:17:-;;;:::o;5870:1107:9:-;6068:34;6118:64;;;;;;;;6147:6;6118:64;;;;;;6163:6;6118:64;;;;;;6176:4;6118:64;;;;;6068:114;;6193:19;6230:44;6257:7;6266;6230:26;:44::i;:::-;6193:82;;6548:4;:10;;;6581:4;6601:7;6623;6674:269;;;;;;;;6724:7;6674:269;;;;6763:7;6674:269;;;;6800:10;6674:269;;;;;;6842:7;6674:269;;;;6882:4;6674:269;;;;;;6919:4;6674:269;;;;;6645:313;;;;;;;;:::i;:::-;;;;;;;;;;;;;6548:421;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6057:920;;5870:1107;;;;;;;:::o;739:39::-;;;:::o;328:41:17:-;;;:::o;917:412:18:-;1063:20;1093:5;1086:23;;;1118:4;1086:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1063:61;;1159:13;1143:12;:29;;1135:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;1227:1;1212:12;:16;1208:114;;;1245:65;1279:5;1286:9;1297:12;1245:33;:65::i;:::-;1208:114;1052:277;917:412;;;:::o;1987:3194:9:-;2131:32;2177:4;;2166:37;;;;;;;:::i;:::-;2131:72;;2214:59;2248:7;2257;:15;;;2214:33;:59::i;:::-;;2286:14;2303:7;:15;;;:22;;;2286:39;;2336:14;2353:7;:15;;;:22;;;2336:39;;2388:78;2421:6;2437:10;2450:7;:15;;;2388:32;:78::i;:::-;2477;2510:6;2526:10;2539:7;:15;;;2477:32;:78::i;:::-;2659:18;2680:41;2699:7;:15;;;2716:4;2680:18;:41::i;:::-;2659:62;;2732:18;2753:41;2772:7;:15;;;2789:4;2753:18;:41::i;:::-;2732:62;;2887:18;2921:10;:27;;;2967:413;;;;;;;;3034:6;2967:413;;;;;;3073:6;2967:413;;;;;;3107:7;:16;;;2967:413;;;;;;3165:4;2967:413;;;;;;3203:15;2967:413;;;;3251:7;:15;;;2967:413;;;;3307:10;2967:413;;;;3359:1;2967:413;;;;;2921:474;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2887:508;;3489:18;3523:10;:27;;;3569:413;;;;;;;;3636:6;3569:413;;;;;;3675:6;3569:413;;;;;;3709:7;:16;;;3569:413;;;;;;3767:4;3569:413;;;;;;3805:15;3569:413;;;;3853:7;:15;;;3569:413;;;;3909:10;3569:413;;;;3961:1;3569:413;;;;;3523:474;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3489:508;;4113:19;4135:41;4154:7;:15;;;4171:4;4135:18;:41::i;:::-;4113:63;;4187:19;4209:41;4228:7;:15;;;4245:4;4209:18;:41::i;:::-;4187:63;;4263:68;4296:6;4312:4;4319:11;4263:32;:68::i;:::-;4342;4375:6;4391:4;4398:11;4342:32;:68::i;:::-;4441:1;4427:11;:15;4423:72;;;4444:51;4448:6;4464:4;4471:10;4483:11;4444:3;:51::i;:::-;4423:72;4524:1;4510:11;:15;4506:72;;;4527:51;4531:6;4547:4;4554:10;4566:11;4527:3;:51::i;:::-;4506:72;4655:11;4642:10;:24;4638:264;;;4683:15;4701:43;4720:10;4732:11;4701:18;:43::i;:::-;4683:61;;4761:64;4794:6;4810:4;4817:7;4761:32;:64::i;:::-;4840:50;4844:6;4860:4;4867:7;:13;;;4882:7;4840:3;:50::i;:::-;4668:234;4638:264;4929:11;4916:10;:24;4912:262;;;4957:15;4975:43;4994:10;5006:11;4975:18;:43::i;:::-;4957:61;;5033:64;5066:6;5082:4;5089:7;5033:32;:64::i;:::-;5112:50;5116:6;5132:4;5139:7;:13;;;5154:7;5112:3;:50::i;:::-;4942:232;4912:262;2120:3061;;;;;;;;;1987:3194;;;;:::o;2431:168:10:-;2504:12;2522:2;:7;;2537:5;2554:1;2544:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2522:35;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2503:54;;;2576:7;2568:23;;;;;;;;;;;;:::i;:::-;;;;;;;;;2492:107;2431:168;;:::o;1334:373:20:-;1418:12;1460:3;:10;;;1447:23;;:3;:10;;;:23;;;1439:32;;;;;;1478:12;1548:7;1587:3;:10;;;1599:3;:10;;;1611:3;:7;;;1576:43;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1566:54;;;;;;244:66;1631:19;;1503:154;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1493:165;;;;;;1478:180;;1696:4;1688:13;;1665:38;;1432:275;1334:373;;;;:::o;1245:316:10:-;1364:12;1378:17;1399:5;:10;;1433:24;;;1459:2;1463:5;1410:59;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1399:71;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1363:107;;;;1489:7;:57;;;;;1516:1;1501:4;:11;:16;:44;;;;1532:4;1521:24;;;;;;;;;;;;:::i;:::-;1501:44;1489:57;1481:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1352:209;;1245:316;;;:::o;1218:286:19:-;1345:19;1404:44;1431:7;1440;1404:26;:44::i;:::-;1382:67;;1490:4;1468:27;;:10;:27;;;1460:36;;;;;;1218:286;;;;:::o;1921:314:10:-;2039:12;2053:17;2074:5;:10;;2108:23;;;2133:2;2137:5;2085:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:70;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2038:106;;;;2163:7;:57;;;;;2190:1;2175:4;:11;:16;:44;;;;2206:4;2195:24;;;;;;;;;;;;:::i;:::-;2175:44;2163:57;2155:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;2027:208;;1921:314;;;:::o;435:111:8:-;493:9;537:1;531;527;:5;;;;:::i;:::-;523:9;;;522:16;;514:25;;;;;;435:111;;;;:::o;1742:728:18:-;1895:5;1886:14;;:5;:14;;;:48;;;;;1929:5;1904:21;:30;;1886:48;1882:581;;;1989:5;1982:21;;;2011:5;1982:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2076:5;2069:22;;;2092:9;2103:5;2069:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1882:581;;;2148:4;2131:22;;:5;:22;;;2127:336;;2262:58;2296:5;2303:9;2314:5;2262:33;:58::i;:::-;2127:336;;;2382:69;2420:5;2427;2434:9;2445:5;2382:37;:69::i;:::-;2127:336;1882:581;1742:728;;;;:::o;710:111:8:-;768:9;812:1;806;802;:5;;;;:::i;:::-;798:9;;;797:16;;789:25;;;;;;710:111;;;;:::o;579:367:10:-;725:12;739:17;773:5;:10;;807:28;;;837:4;843:2;847:5;784:69;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;773:81;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;724:130;;;;873:7;:57;;;;;900:1;885:4;:11;:16;:44;;;;916:4;905:24;;;;;;;;;;;;:::i;:::-;885:44;873:57;865:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;713:233;;579:367;;;;:::o;7:75:21:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:126::-;727:7;767:42;760:5;756:54;745:65;;690:126;;;:::o;822:96::-;859:7;888:24;906:5;888:24;:::i;:::-;877:35;;822:96;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:91::-;2065:7;2105:8;2098:5;2094:20;2083:31;;2029:91;;;:::o;2126:120::-;2198:23;2215:5;2198:23;:::i;:::-;2191:5;2188:34;2178:62;;2236:1;2233;2226:12;2178:62;2126:120;:::o;2252:137::-;2297:5;2335:6;2322:20;2313:29;;2351:32;2377:5;2351:32;:::i;:::-;2252:137;;;;:::o;2395:1197::-;2505:6;2513;2521;2529;2537;2545;2553;2602:3;2590:9;2581:7;2577:23;2573:33;2570:120;;;2609:79;;:::i;:::-;2570:120;2729:1;2754:53;2799:7;2790:6;2779:9;2775:22;2754:53;:::i;:::-;2744:63;;2700:117;2856:2;2882:53;2927:7;2918:6;2907:9;2903:22;2882:53;:::i;:::-;2872:63;;2827:118;2984:2;3010:52;3054:7;3045:6;3034:9;3030:22;3010:52;:::i;:::-;3000:62;;2955:117;3111:2;3137:53;3182:7;3173:6;3162:9;3158:22;3137:53;:::i;:::-;3127:63;;3082:118;3239:3;3266:53;3311:7;3302:6;3291:9;3287:22;3266:53;:::i;:::-;3256:63;;3210:119;3368:3;3395:52;3439:7;3430:6;3419:9;3415:22;3395:52;:::i;:::-;3385:62;;3339:118;3496:3;3523:52;3567:7;3558:6;3547:9;3543:22;3523:52;:::i;:::-;3513:62;;3467:118;2395:1197;;;;;;;;;;:::o;3598:60::-;3626:3;3647:5;3640:12;;3598:60;;;:::o;3664:142::-;3714:9;3747:53;3765:34;3774:24;3792:5;3774:24;:::i;:::-;3765:34;:::i;:::-;3747:53;:::i;:::-;3734:66;;3664:142;;;:::o;3812:126::-;3862:9;3895:37;3926:5;3895:37;:::i;:::-;3882:50;;3812:126;;;:::o;3944:146::-;4014:9;4047:37;4078:5;4047:37;:::i;:::-;4034:50;;3944:146;;;:::o;4096:171::-;4203:57;4254:5;4203:57;:::i;:::-;4198:3;4191:70;4096:171;;:::o;4273:262::-;4386:4;4424:2;4413:9;4409:18;4401:26;;4437:91;4525:1;4514:9;4510:17;4501:6;4437:91;:::i;:::-;4273:262;;;;:::o;4541:619::-;4618:6;4626;4634;4683:2;4671:9;4662:7;4658:23;4654:32;4651:119;;;4689:79;;:::i;:::-;4651:119;4809:1;4834:53;4879:7;4870:6;4859:9;4855:22;4834:53;:::i;:::-;4824:63;;4780:117;4936:2;4962:53;5007:7;4998:6;4987:9;4983:22;4962:53;:::i;:::-;4952:63;;4907:118;5064:2;5090:53;5135:7;5126:6;5115:9;5111:22;5090:53;:::i;:::-;5080:63;;5035:118;4541:619;;;;;:::o;5166:117::-;5275:1;5272;5265:12;5289:117;5398:1;5395;5388:12;5412:117;5521:1;5518;5511:12;5548:552;5605:8;5615:6;5665:3;5658:4;5650:6;5646:17;5642:27;5632:122;;5673:79;;:::i;:::-;5632:122;5786:6;5773:20;5763:30;;5816:18;5808:6;5805:30;5802:117;;;5838:79;;:::i;:::-;5802:117;5952:4;5944:6;5940:17;5928:29;;6006:3;5998:4;5990:6;5986:17;5976:8;5972:32;5969:41;5966:128;;;6013:79;;:::i;:::-;5966:128;5548:552;;;;;:::o;6106:817::-;6194:6;6202;6210;6218;6267:2;6255:9;6246:7;6242:23;6238:32;6235:119;;;6273:79;;:::i;:::-;6235:119;6393:1;6418:53;6463:7;6454:6;6443:9;6439:22;6418:53;:::i;:::-;6408:63;;6364:117;6520:2;6546:53;6591:7;6582:6;6571:9;6567:22;6546:53;:::i;:::-;6536:63;;6491:118;6676:2;6665:9;6661:18;6648:32;6707:18;6699:6;6696:30;6693:117;;;6729:79;;:::i;:::-;6693:117;6842:64;6898:7;6889:6;6878:9;6874:22;6842:64;:::i;:::-;6824:82;;;;6619:297;6106:817;;;;;;;:::o;6929:143::-;6986:5;7017:6;7011:13;7002:22;;7033:33;7060:5;7033:33;:::i;:::-;6929:143;;;;:::o;7078:351::-;7148:6;7197:2;7185:9;7176:7;7172:23;7168:32;7165:119;;;7203:79;;:::i;:::-;7165:119;7323:1;7348:64;7404:7;7395:6;7384:9;7380:22;7348:64;:::i;:::-;7338:74;;7294:128;7078:351;;;;:::o;7435:169::-;7519:11;7553:6;7548:3;7541:19;7593:4;7588:3;7584:14;7569:29;;7435:169;;;;:::o;7610:168::-;7750:20;7746:1;7738:6;7734:14;7727:44;7610:168;:::o;7784:366::-;7926:3;7947:67;8011:2;8006:3;7947:67;:::i;:::-;7940:74;;8023:93;8112:3;8023:93;:::i;:::-;8141:2;8136:3;8132:12;8125:19;;7784:366;;;:::o;8156:419::-;8322:4;8360:2;8349:9;8345:18;8337:26;;8409:9;8403:4;8399:20;8395:1;8384:9;8380:17;8373:47;8437:131;8563:4;8437:131;:::i;:::-;8429:139;;8156:419;;;:::o;8581:118::-;8668:24;8686:5;8668:24;:::i;:::-;8663:3;8656:37;8581:118;;:::o;8705:222::-;8798:4;8836:2;8825:9;8821:18;8813:26;;8849:71;8917:1;8906:9;8902:17;8893:6;8849:71;:::i;:::-;8705:222;;;;:::o;8933:108::-;9010:24;9028:5;9010:24;:::i;:::-;9005:3;8998:37;8933:108;;:::o;9047:::-;9124:24;9142:5;9124:24;:::i;:::-;9119:3;9112:37;9047:108;;:::o;9161:105::-;9236:23;9253:5;9236:23;:::i;:::-;9231:3;9224:36;9161:105;;:::o;9336:672::-;9473:4;9468:3;9464:14;9562:4;9555:5;9551:16;9545:23;9581:63;9638:4;9633:3;9629:14;9615:12;9581:63;:::i;:::-;9488:166;9738:4;9731:5;9727:16;9721:23;9757:63;9814:4;9809:3;9805:14;9791:12;9757:63;:::i;:::-;9664:166;9911:4;9904:5;9900:16;9894:23;9930:61;9985:4;9980:3;9976:14;9962:12;9930:61;:::i;:::-;9840:161;9442:566;9336:672;;:::o;10094:1287::-;10259:6;10254:3;10250:16;10351:4;10344:5;10340:16;10334:23;10370:63;10427:4;10422:3;10418:14;10404:12;10370:63;:::i;:::-;10276:167;10528:4;10521:5;10517:16;10511:23;10547:63;10604:4;10599:3;10595:14;10581:12;10547:63;:::i;:::-;10453:167;10703:4;10696:5;10692:16;10686:23;10722:63;10779:4;10774:3;10770:14;10756:12;10722:63;:::i;:::-;10630:165;10880:4;10873:5;10869:16;10863:23;10899:113;11006:4;11001:3;10997:14;10983:12;10899:113;:::i;:::-;10805:217;11108:4;11101:5;11097:16;11091:23;11127:61;11182:4;11177:3;11173:14;11159:12;11127:61;:::i;:::-;11032:166;11284:4;11277:5;11273:16;11267:23;11303:61;11358:4;11353:3;11349:14;11335:12;11303:61;:::i;:::-;11208:166;10228:1153;10094:1287;;:::o;11387:359::-;11548:4;11586:3;11575:9;11571:19;11563:27;;11600:139;11736:1;11725:9;11721:17;11712:6;11600:139;:::i;:::-;11387:359;;;;:::o;11752:98::-;11803:6;11837:5;11831:12;11821:22;;11752:98;;;:::o;11856:168::-;11939:11;11973:6;11968:3;11961:19;12013:4;12008:3;12004:14;11989:29;;11856:168;;;;:::o;12030:246::-;12111:1;12121:113;12135:6;12132:1;12129:13;12121:113;;;12220:1;12215:3;12211:11;12205:18;12201:1;12196:3;12192:11;12185:39;12157:2;12154:1;12150:10;12145:15;;12121:113;;;12268:1;12259:6;12254:3;12250:16;12243:27;12092:184;12030:246;;;:::o;12282:102::-;12323:6;12374:2;12370:7;12365:2;12358:5;12354:14;12350:28;12340:38;;12282:102;;;:::o;12390:373::-;12476:3;12504:38;12536:5;12504:38;:::i;:::-;12558:70;12621:6;12616:3;12558:70;:::i;:::-;12551:77;;12637:65;12695:6;12690:3;12683:4;12676:5;12672:16;12637:65;:::i;:::-;12727:29;12749:6;12727:29;:::i;:::-;12722:3;12718:39;12711:46;;12480:283;12390:373;;;;:::o;12769:640::-;12964:4;13002:3;12991:9;12987:19;12979:27;;13016:71;13084:1;13073:9;13069:17;13060:6;13016:71;:::i;:::-;13097:72;13165:2;13154:9;13150:18;13141:6;13097:72;:::i;:::-;13179;13247:2;13236:9;13232:18;13223:6;13179:72;:::i;:::-;13298:9;13292:4;13288:20;13283:2;13272:9;13268:18;13261:48;13326:76;13397:4;13388:6;13326:76;:::i;:::-;13318:84;;12769:640;;;;;;;:::o;13415:168::-;13555:20;13551:1;13543:6;13539:14;13532:44;13415:168;:::o;13589:366::-;13731:3;13752:67;13816:2;13811:3;13752:67;:::i;:::-;13745:74;;13828:93;13917:3;13828:93;:::i;:::-;13946:2;13941:3;13937:12;13930:19;;13589:366;;;:::o;13961:419::-;14127:4;14165:2;14154:9;14150:18;14142:26;;14214:9;14208:4;14204:20;14200:1;14189:9;14185:17;14178:47;14242:131;14368:4;14242:131;:::i;:::-;14234:139;;13961:419;;;:::o;14386:117::-;14495:1;14492;14485:12;14509:180;14557:77;14554:1;14547:88;14654:4;14651:1;14644:15;14678:4;14675:1;14668:15;14695:281;14778:27;14800:4;14778:27;:::i;:::-;14770:6;14766:40;14908:6;14896:10;14893:22;14872:18;14860:10;14857:34;14854:62;14851:88;;;14919:18;;:::i;:::-;14851:88;14959:10;14955:2;14948:22;14738:238;14695:281;;:::o;14982:129::-;15016:6;15043:20;;:::i;:::-;15033:30;;15072:33;15100:4;15092:6;15072:33;:::i;:::-;14982:129;;;:::o;15274:737::-;15348:5;15392:4;15380:9;15375:3;15371:19;15367:30;15364:117;;;15400:79;;:::i;:::-;15364:117;15499:21;15515:4;15499:21;:::i;:::-;15490:30;;15581:1;15621:49;15666:3;15657:6;15646:9;15642:22;15621:49;:::i;:::-;15614:4;15607:5;15603:16;15596:75;15530:152;15743:2;15784:49;15829:3;15820:6;15809:9;15805:22;15784:49;:::i;:::-;15777:4;15770:5;15766:16;15759:75;15692:153;15903:2;15944:48;15988:3;15979:6;15968:9;15964:22;15944:48;:::i;:::-;15937:4;15930:5;15926:16;15919:74;15855:149;15274:737;;;;:::o;16059:1272::-;16142:5;16186:6;16174:9;16169:3;16165:19;16161:32;16158:119;;;16196:79;;:::i;:::-;16158:119;16295:21;16311:4;16295:21;:::i;:::-;16286:30;;16378:1;16418:49;16463:3;16454:6;16443:9;16439:22;16418:49;:::i;:::-;16411:4;16404:5;16400:16;16393:75;16326:153;16541:2;16582:49;16627:3;16618:6;16607:9;16603:22;16582:49;:::i;:::-;16575:4;16568:5;16564:16;16557:75;16489:154;16703:2;16744:49;16789:3;16780:6;16769:9;16765:22;16744:49;:::i;:::-;16737:4;16730:5;16726:16;16719:75;16653:152;16867:2;16908:74;16978:3;16969:6;16958:9;16954:22;16908:74;:::i;:::-;16901:4;16894:5;16890:16;16883:100;16815:179;17057:3;17099:48;17143:3;17134:6;17123:9;17119:22;17099:48;:::i;:::-;17092:4;17085:5;17081:16;17074:74;17004:155;17222:3;17264:48;17308:3;17299:6;17288:9;17284:22;17264:48;:::i;:::-;17257:4;17250:5;17246:16;17239:74;17169:155;16059:1272;;;;:::o;17337:398::-;17430:6;17479:3;17467:9;17458:7;17454:23;17450:33;17447:120;;;17486:79;;:::i;:::-;17447:120;17606:1;17631:87;17710:7;17701:6;17690:9;17686:22;17631:87;:::i;:::-;17621:97;;17577:151;17337:398;;;;:::o;17741:108::-;17818:24;17836:5;17818:24;:::i;:::-;17813:3;17806:37;17741:108;;:::o;17949:1625::-;18126:6;18121:3;18117:16;18218:4;18211:5;18207:16;18201:23;18237:63;18294:4;18289:3;18285:14;18271:12;18237:63;:::i;:::-;18143:167;18396:4;18389:5;18385:16;18379:23;18415:63;18472:4;18467:3;18463:14;18449:12;18415:63;:::i;:::-;18320:168;18569:4;18562:5;18558:16;18552:23;18588:61;18643:4;18638:3;18634:14;18620:12;18588:61;:::i;:::-;18498:161;18746:4;18739:5;18735:16;18729:23;18765:63;18822:4;18817:3;18813:14;18799:12;18765:63;:::i;:::-;18669:169;18924:4;18917:5;18913:16;18907:23;18943:63;19000:4;18995:3;18991:14;18977:12;18943:63;:::i;:::-;18848:168;19102:4;19095:5;19091:16;19085:23;19121:63;19178:4;19173:3;19169:14;19155:12;19121:63;:::i;:::-;19026:168;19288:4;19281:5;19277:16;19271:23;19307:63;19364:4;19359:3;19355:14;19341:12;19307:63;:::i;:::-;19204:176;19475:4;19468:5;19464:16;19458:23;19494:63;19551:4;19546:3;19542:14;19528:12;19494:63;:::i;:::-;19390:177;18095:1479;17949:1625;;:::o;19580:383::-;19753:4;19791:3;19780:9;19776:19;19768:27;;19805:151;19953:1;19942:9;19938:17;19929:6;19805:151;:::i;:::-;19580:383;;;;:::o;19969:147::-;20070:11;20107:3;20092:18;;19969:147;;;;:::o;20122:386::-;20226:3;20254:38;20286:5;20254:38;:::i;:::-;20308:88;20389:6;20384:3;20308:88;:::i;:::-;20301:95;;20405:65;20463:6;20458:3;20451:4;20444:5;20440:16;20405:65;:::i;:::-;20495:6;20490:3;20486:16;20479:23;;20230:278;20122:386;;;;:::o;20514:271::-;20644:3;20666:93;20755:3;20746:6;20666:93;:::i;:::-;20659:100;;20776:3;20769:10;;20514:271;;;;:::o;20791:153::-;20931:5;20927:1;20919:6;20915:14;20908:29;20791:153;:::o;20950:365::-;21092:3;21113:66;21177:1;21172:3;21113:66;:::i;:::-;21106:73;;21188:93;21277:3;21188:93;:::i;:::-;21306:2;21301:3;21297:12;21290:19;;20950:365;;;:::o;21321:419::-;21487:4;21525:2;21514:9;21510:18;21502:26;;21574:9;21568:4;21564:20;21560:1;21549:9;21545:17;21538:47;21602:131;21728:4;21602:131;:::i;:::-;21594:139;;21321:419;;;:::o;21746:115::-;21831:23;21848:5;21831:23;:::i;:::-;21826:3;21819:36;21746:115;;:::o;21867:438::-;22014:4;22052:2;22041:9;22037:18;22029:26;;22065:71;22133:1;22122:9;22118:17;22109:6;22065:71;:::i;:::-;22146:72;22214:2;22203:9;22199:18;22190:6;22146:72;:::i;:::-;22228:70;22294:2;22283:9;22279:18;22270:6;22228:70;:::i;:::-;21867:438;;;;;;:::o;22311:148::-;22413:11;22450:3;22435:18;;22311:148;;;;:::o;22465:214::-;22605:66;22601:1;22593:6;22589:14;22582:90;22465:214;:::o;22685:400::-;22845:3;22866:84;22948:1;22943:3;22866:84;:::i;:::-;22859:91;;22959:93;23048:3;22959:93;:::i;:::-;23077:1;23072:3;23068:11;23061:18;;22685:400;;;:::o;23091:94::-;23124:8;23172:5;23168:2;23164:14;23143:35;;23091:94;;;:::o;23191:::-;23230:7;23259:20;23273:5;23259:20;:::i;:::-;23248:31;;23191:94;;;:::o;23291:100::-;23330:7;23359:26;23379:5;23359:26;:::i;:::-;23348:37;;23291:100;;;:::o;23397:157::-;23502:45;23522:24;23540:5;23522:24;:::i;:::-;23502:45;:::i;:::-;23497:3;23490:58;23397:157;;:::o;23560:77::-;23597:7;23626:5;23615:16;;23560:77;;;:::o;23643:79::-;23682:7;23711:5;23700:16;;23643:79;;;:::o;23728:157::-;23833:45;23853:24;23871:5;23853:24;:::i;:::-;23833:45;:::i;:::-;23828:3;23821:58;23728:157;;:::o;23891:804::-;24160:3;24182:148;24326:3;24182:148;:::i;:::-;24175:155;;24340:75;24411:3;24402:6;24340:75;:::i;:::-;24440:2;24435:3;24431:12;24424:19;;24453:75;24524:3;24515:6;24453:75;:::i;:::-;24553:2;24548:3;24544:12;24537:19;;24566:75;24637:3;24628:6;24566:75;:::i;:::-;24666:2;24661:3;24657:12;24650:19;;24686:3;24679:10;;23891:804;;;;;;:::o;24701:332::-;24822:4;24860:2;24849:9;24845:18;24837:26;;24873:71;24941:1;24930:9;24926:17;24917:6;24873:71;:::i;:::-;24954:72;25022:2;25011:9;25007:18;24998:6;24954:72;:::i;:::-;24701:332;;;;;:::o;25039:90::-;25073:7;25116:5;25109:13;25102:21;25091:32;;25039:90;;;:::o;25135:116::-;25205:21;25220:5;25205:21;:::i;:::-;25198:5;25195:32;25185:60;;25241:1;25238;25231:12;25185:60;25135:116;:::o;25257:137::-;25311:5;25342:6;25336:13;25327:22;;25358:30;25382:5;25358:30;:::i;:::-;25257:137;;;;:::o;25400:345::-;25467:6;25516:2;25504:9;25495:7;25491:23;25487:32;25484:119;;;25522:79;;:::i;:::-;25484:119;25642:1;25667:61;25720:7;25711:6;25700:9;25696:22;25667:61;:::i;:::-;25657:71;;25613:125;25400:345;;;;:::o;25751:152::-;25891:4;25887:1;25879:6;25875:14;25868:28;25751:152;:::o;25909:365::-;26051:3;26072:66;26136:1;26131:3;26072:66;:::i;:::-;26065:73;;26147:93;26236:3;26147:93;:::i;:::-;26265:2;26260:3;26256:12;26249:19;;25909:365;;;:::o;26280:419::-;26446:4;26484:2;26473:9;26469:18;26461:26;;26533:9;26527:4;26523:20;26519:1;26508:9;26504:17;26497:47;26561:131;26687:4;26561:131;:::i;:::-;26553:139;;26280:419;;;:::o;26705:152::-;26845:4;26841:1;26833:6;26829:14;26822:28;26705:152;:::o;26863:365::-;27005:3;27026:66;27090:1;27085:3;27026:66;:::i;:::-;27019:73;;27101:93;27190:3;27101:93;:::i;:::-;27219:2;27214:3;27210:12;27203:19;;26863:365;;;:::o;27234:419::-;27400:4;27438:2;27427:9;27423:18;27415:26;;27487:9;27481:4;27477:20;27473:1;27462:9;27458:17;27451:47;27515:131;27641:4;27515:131;:::i;:::-;27507:139;;27234:419;;;:::o;27659:180::-;27707:77;27704:1;27697:88;27804:4;27801:1;27794:15;27828:4;27825:1;27818:15;27845:191;27885:3;27904:20;27922:1;27904:20;:::i;:::-;27899:25;;27938:20;27956:1;27938:20;:::i;:::-;27933:25;;27981:1;27978;27974:9;27967:16;;28002:3;27999:1;27996:10;27993:36;;;28009:18;;:::i;:::-;27993:36;27845:191;;;;:::o;28042:194::-;28082:4;28102:20;28120:1;28102:20;:::i;:::-;28097:25;;28136:20;28154:1;28136:20;:::i;:::-;28131:25;;28180:1;28177;28173:9;28165:17;;28204:1;28198:4;28195:11;28192:37;;;28209:18;;:::i;:::-;28192:37;28042:194;;;;:::o;28242:442::-;28391:4;28429:2;28418:9;28414:18;28406:26;;28442:71;28510:1;28499:9;28495:17;28486:6;28442:71;:::i;:::-;28523:72;28591:2;28580:9;28576:18;28567:6;28523:72;:::i;:::-;28605;28673:2;28662:9;28658:18;28649:6;28605:72;:::i;:::-;28242:442;;;;;;:::o;28690:153::-;28830:5;28826:1;28818:6;28814:14;28807:29;28690:153;:::o;28849:365::-;28991:3;29012:66;29076:1;29071:3;29012:66;:::i;:::-;29005:73;;29087:93;29176:3;29087:93;:::i;:::-;29205:2;29200:3;29196:12;29189:19;;28849:365;;;:::o;29220:419::-;29386:4;29424:2;29413:9;29409:18;29401:26;;29473:9;29467:4;29463:20;29459:1;29448:9;29444:17;29437:47;29501:131;29627:4;29501:131;:::i;:::-;29493:139;;29220:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1626000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"WETH9()": "infinite",
								"factory()": "infinite",
								"initFlash(address,address,uint24,uint256,uint256,uint24,uint24)": "infinite",
								"refundETH()": "infinite",
								"swapRouter()": "infinite",
								"sweepToken(address,uint256,address)": "infinite",
								"uniswapV3FlashCallback(uint256,uint256,bytes)": "infinite",
								"unwrapWETH9(uint256,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 563,
									"end": 6980,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 563,
									"end": 6980,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 563,
									"end": 6980,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1392,
									"end": 1582,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1521,
									"end": 1529,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1531,
									"end": 1537,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 537,
									"end": 545,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 527,
									"end": 545,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 527,
									"end": 545,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 527,
									"end": 545,
									"name": "PUSH",
									"source": 17,
									"value": "80"
								},
								{
									"begin": 527,
									"end": 545,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 527,
									"end": 545,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 527,
									"end": 545,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 527,
									"end": 545,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 527,
									"end": 545,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 527,
									"end": 545,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 527,
									"end": 545,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 564,
									"end": 570,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 556,
									"end": 570,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 556,
									"end": 570,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 556,
									"end": 570,
									"name": "PUSH",
									"source": 17,
									"value": "A0"
								},
								{
									"begin": 556,
									"end": 570,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 556,
									"end": 570,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 556,
									"end": 570,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 556,
									"end": 570,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 556,
									"end": 570,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 556,
									"end": 570,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 556,
									"end": 570,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 470,
									"end": 578,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 470,
									"end": 578,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1563,
									"end": 1574,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1550,
									"end": 1574,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1550,
									"end": 1574,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1550,
									"end": 1574,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "C0"
								},
								{
									"begin": 1550,
									"end": 1574,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1550,
									"end": 1574,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1550,
									"end": 1574,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1550,
									"end": 1574,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1550,
									"end": 1574,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1550,
									"end": 1574,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1550,
									"end": 1574,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1392,
									"end": 1582,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 563,
									"end": 6980,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 563,
									"end": 6980,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 21,
									"value": "10"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 21
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 21,
									"value": "12"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 21,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 21
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 21,
									"value": "13"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "25"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "12"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 21,
									"value": "25"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 568,
									"end": 684,
									"name": "tag",
									"source": 21,
									"value": "14"
								},
								{
									"begin": 568,
									"end": 684,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 625,
									"end": 632,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 654,
									"end": 678,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "27"
								},
								{
									"begin": 672,
									"end": 677,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 654,
									"end": 678,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "13"
								},
								{
									"begin": 654,
									"end": 678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 654,
									"end": 678,
									"name": "tag",
									"source": 21,
									"value": "27"
								},
								{
									"begin": 654,
									"end": 678,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 643,
									"end": 678,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 643,
									"end": 678,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 568,
									"end": 684,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 568,
									"end": 684,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 568,
									"end": 684,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 568,
									"end": 684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 690,
									"end": 852,
									"name": "tag",
									"source": 21,
									"value": "15"
								},
								{
									"begin": 690,
									"end": 852,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 783,
									"end": 827,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "29"
								},
								{
									"begin": 821,
									"end": 826,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 783,
									"end": 827,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "14"
								},
								{
									"begin": 783,
									"end": 827,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 783,
									"end": 827,
									"name": "tag",
									"source": 21,
									"value": "29"
								},
								{
									"begin": 783,
									"end": 827,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 776,
									"end": 781,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 773,
									"end": 828,
									"name": "EQ",
									"source": 21
								},
								{
									"begin": 763,
									"end": 846,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "30"
								},
								{
									"begin": 763,
									"end": 846,
									"name": "JUMPI",
									"source": 21
								},
								{
									"begin": 842,
									"end": 843,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 839,
									"end": 840,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 832,
									"end": 844,
									"name": "REVERT",
									"source": 21
								},
								{
									"begin": 763,
									"end": 846,
									"name": "tag",
									"source": 21,
									"value": "30"
								},
								{
									"begin": 763,
									"end": 846,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 690,
									"end": 852,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 690,
									"end": 852,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 858,
									"end": 1041,
									"name": "tag",
									"source": 21,
									"value": "16"
								},
								{
									"begin": 858,
									"end": 1041,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 935,
									"end": 940,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 966,
									"end": 972,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 960,
									"end": 973,
									"name": "MLOAD",
									"source": 21
								},
								{
									"begin": 951,
									"end": 973,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 951,
									"end": 973,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 982,
									"end": 1035,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "32"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 982,
									"end": 1035,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "15"
								},
								{
									"begin": 982,
									"end": 1035,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 982,
									"end": 1035,
									"name": "tag",
									"source": 21,
									"value": "32"
								},
								{
									"begin": 982,
									"end": 1035,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 858,
									"end": 1041,
									"name": "SWAP3",
									"source": 21
								},
								{
									"begin": 858,
									"end": 1041,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 858,
									"end": 1041,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 858,
									"end": 1041,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 858,
									"end": 1041,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 1047,
									"end": 1169,
									"name": "tag",
									"source": 21,
									"value": "17"
								},
								{
									"begin": 1047,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 1120,
									"end": 1144,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "34"
								},
								{
									"begin": 1138,
									"end": 1143,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 1120,
									"end": 1144,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "13"
								},
								{
									"begin": 1120,
									"end": 1144,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 1120,
									"end": 1144,
									"name": "tag",
									"source": 21,
									"value": "34"
								},
								{
									"begin": 1120,
									"end": 1144,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 1110,
									"end": 1145,
									"name": "EQ",
									"source": 21
								},
								{
									"begin": 1100,
									"end": 1163,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "35"
								},
								{
									"begin": 1100,
									"end": 1163,
									"name": "JUMPI",
									"source": 21
								},
								{
									"begin": 1159,
									"end": 1160,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 1156,
									"end": 1157,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 1149,
									"end": 1161,
									"name": "REVERT",
									"source": 21
								},
								{
									"begin": 1100,
									"end": 1163,
									"name": "tag",
									"source": 21,
									"value": "35"
								},
								{
									"begin": 1100,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 1047,
									"end": 1169,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1047,
									"end": 1169,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 1175,
									"end": 1318,
									"name": "tag",
									"source": 21,
									"value": "18"
								},
								{
									"begin": 1175,
									"end": 1318,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 1232,
									"end": 1237,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 1263,
									"end": 1269,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 1257,
									"end": 1270,
									"name": "MLOAD",
									"source": 21
								},
								{
									"begin": 1248,
									"end": 1270,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 1248,
									"end": 1270,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1279,
									"end": 1312,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "37"
								},
								{
									"begin": 1306,
									"end": 1311,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 1279,
									"end": 1312,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "17"
								},
								{
									"begin": 1279,
									"end": 1312,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 1279,
									"end": 1312,
									"name": "tag",
									"source": 21,
									"value": "37"
								},
								{
									"begin": 1279,
									"end": 1312,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 1175,
									"end": 1318,
									"name": "SWAP3",
									"source": 21
								},
								{
									"begin": 1175,
									"end": 1318,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 1175,
									"end": 1318,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1175,
									"end": 1318,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1175,
									"end": 1318,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 1324,
									"end": 2027,
									"name": "tag",
									"source": 21,
									"value": "3"
								},
								{
									"begin": 1324,
									"end": 2027,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 1432,
									"end": 1438,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 1448,
									"end": 1454,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 1497,
									"end": 1499,
									"name": "PUSH",
									"source": 21,
									"value": "60"
								},
								{
									"begin": 1485,
									"end": 1494,
									"name": "DUP5",
									"source": 21
								},
								{
									"begin": 1476,
									"end": 1483,
									"name": "DUP7",
									"source": 21
								},
								{
									"begin": 1472,
									"end": 1495,
									"name": "SUB",
									"source": 21
								},
								{
									"begin": 1468,
									"end": 1500,
									"name": "SLT",
									"source": 21
								},
								{
									"begin": 1465,
									"end": 1584,
									"name": "ISZERO",
									"source": 21
								},
								{
									"begin": 1465,
									"end": 1584,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "39"
								},
								{
									"begin": 1465,
									"end": 1584,
									"name": "JUMPI",
									"source": 21
								},
								{
									"begin": 1503,
									"end": 1582,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "40"
								},
								{
									"begin": 1503,
									"end": 1582,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "10"
								},
								{
									"begin": 1503,
									"end": 1582,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 1503,
									"end": 1582,
									"name": "tag",
									"source": 21,
									"value": "40"
								},
								{
									"begin": 1503,
									"end": 1582,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 1465,
									"end": 1584,
									"name": "tag",
									"source": 21,
									"value": "39"
								},
								{
									"begin": 1465,
									"end": 1584,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 1623,
									"end": 1624,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 1648,
									"end": 1732,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "41"
								},
								{
									"begin": 1724,
									"end": 1731,
									"name": "DUP7",
									"source": 21
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 1704,
									"end": 1713,
									"name": "DUP8",
									"source": 21
								},
								{
									"begin": 1700,
									"end": 1722,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 1648,
									"end": 1732,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "16"
								},
								{
									"begin": 1648,
									"end": 1732,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 1648,
									"end": 1732,
									"name": "tag",
									"source": 21,
									"value": "41"
								},
								{
									"begin": 1648,
									"end": 1732,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 1638,
									"end": 1732,
									"name": "SWAP4",
									"source": 21
								},
								{
									"begin": 1638,
									"end": 1732,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1594,
									"end": 1742,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1781,
									"end": 1783,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 1807,
									"end": 1871,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "42"
								},
								{
									"begin": 1863,
									"end": 1870,
									"name": "DUP7",
									"source": 21
								},
								{
									"begin": 1854,
									"end": 1860,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 1843,
									"end": 1852,
									"name": "DUP8",
									"source": 21
								},
								{
									"begin": 1839,
									"end": 1861,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 1807,
									"end": 1871,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "18"
								},
								{
									"begin": 1807,
									"end": 1871,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 1807,
									"end": 1871,
									"name": "tag",
									"source": 21,
									"value": "42"
								},
								{
									"begin": 1807,
									"end": 1871,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 1797,
									"end": 1871,
									"name": "SWAP3",
									"source": 21
								},
								{
									"begin": 1797,
									"end": 1871,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1752,
									"end": 1881,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1920,
									"end": 1922,
									"name": "PUSH",
									"source": 21,
									"value": "40"
								},
								{
									"begin": 1946,
									"end": 2010,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "43"
								},
								{
									"begin": 2002,
									"end": 2009,
									"name": "DUP7",
									"source": 21
								},
								{
									"begin": 1993,
									"end": 1999,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 1982,
									"end": 1991,
									"name": "DUP8",
									"source": 21
								},
								{
									"begin": 1978,
									"end": 2000,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 1946,
									"end": 2010,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "18"
								},
								{
									"begin": 1946,
									"end": 2010,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 1946,
									"end": 2010,
									"name": "tag",
									"source": 21,
									"value": "43"
								},
								{
									"begin": 1946,
									"end": 2010,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 1936,
									"end": 2010,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 1936,
									"end": 2010,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1891,
									"end": 2020,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1324,
									"end": 2027,
									"name": "SWAP3",
									"source": 21
								},
								{
									"begin": 1324,
									"end": 2027,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1324,
									"end": 2027,
									"name": "SWAP3",
									"source": 21
								},
								{
									"begin": 1324,
									"end": 2027,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1324,
									"end": 2027,
									"name": "SWAP3",
									"source": 21
								},
								{
									"begin": 1324,
									"end": 2027,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 563,
									"end": 6980,
									"name": "tag",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 563,
									"end": 6980,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 563,
									"end": 6980,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 563,
									"end": 6980,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 563,
									"end": 6980,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 563,
									"end": 6980,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 563,
									"end": 6980,
									"name": "PUSH",
									"source": 9,
									"value": "C0"
								},
								{
									"begin": 563,
									"end": 6980,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 563,
									"end": 6980,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 563,
									"end": 6980,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 563,
									"end": 6980,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 6980,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 563,
									"end": 6980,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 6980,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "675"
								},
								{
									"begin": 563,
									"end": 6980,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 6980,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "1430"
								},
								{
									"begin": 563,
									"end": 6980,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 6980,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "1426"
								},
								{
									"begin": 563,
									"end": 6980,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 563,
									"end": 6980,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 6980,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ce9940ad7e435bb3f7c55704562e4f9e098f32ce51f9934c3101b295a633a4a664736f6c63430008140033",
									".code": [
										{
											"begin": 563,
											"end": 6980,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "PUSH",
											"source": 9,
											"value": "C31C9C07"
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "PUSH",
											"source": 9,
											"value": "C31C9C07"
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "PUSH",
											"source": 9,
											"value": "C45A0155"
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "PUSH",
											"source": 9,
											"value": "DF2AB5BB"
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "PUSH",
											"source": 9,
											"value": "E9CBAFB0"
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "PUSH",
											"source": 9,
											"value": "12210E8A"
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "PUSH",
											"source": 9,
											"value": "49404B7C"
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "PUSH",
											"source": 9,
											"value": "4AA4A4FC"
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "PUSH",
											"source": 9,
											"value": "833263E6"
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 563,
											"end": 6980,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1545,
											"name": "tag",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 1377,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1377,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "14"
										},
										{
											"begin": 1377,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "15"
										},
										{
											"begin": 1377,
											"end": 1545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1377,
											"end": 1545,
											"name": "tag",
											"source": 18,
											"value": "14"
										},
										{
											"begin": 1377,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1377,
											"end": 1545,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 458,
											"end": 869,
											"name": "tag",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 458,
											"end": 869,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 458,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "16"
										},
										{
											"begin": 458,
											"end": 869,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 458,
											"end": 869,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 458,
											"end": 869,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 458,
											"end": 869,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 458,
											"end": 869,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 458,
											"end": 869,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 458,
											"end": 869,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 458,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "17"
										},
										{
											"begin": 458,
											"end": 869,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 458,
											"end": 869,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 458,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "18"
										},
										{
											"begin": 458,
											"end": 869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 458,
											"end": 869,
											"name": "tag",
											"source": 18,
											"value": "17"
										},
										{
											"begin": 458,
											"end": 869,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 458,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 458,
											"end": 869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 458,
											"end": 869,
											"name": "tag",
											"source": 18,
											"value": "16"
										},
										{
											"begin": 458,
											"end": 869,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 458,
											"end": 869,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 422,
											"end": 461,
											"name": "tag",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 422,
											"end": 461,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 422,
											"end": 461,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 422,
											"end": 461,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 422,
											"end": 461,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 422,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 422,
											"end": 461,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 422,
											"end": 461,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 461,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 422,
											"end": 461,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 422,
											"end": 461,
											"name": "tag",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 422,
											"end": 461,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 422,
											"end": 461,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 422,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 422,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 422,
											"end": 461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 422,
											"end": 461,
											"name": "tag",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 422,
											"end": 461,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 422,
											"end": 461,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 422,
											"end": 461,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 422,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "23"
										},
										{
											"begin": 422,
											"end": 461,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 422,
											"end": 461,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 422,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 422,
											"end": 461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 422,
											"end": 461,
											"name": "tag",
											"source": 17,
											"value": "23"
										},
										{
											"begin": 422,
											"end": 461,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 422,
											"end": 461,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 422,
											"end": 461,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 422,
											"end": 461,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 422,
											"end": 461,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 422,
											"end": 461,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 422,
											"end": 461,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 422,
											"end": 461,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 5870,
											"end": 6977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 5870,
											"end": 6977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 739,
											"end": 778,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 739,
											"end": 778,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 739,
											"end": 778,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 739,
											"end": 778,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 739,
											"end": 778,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 739,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 739,
											"end": 778,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 739,
											"end": 778,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 778,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 739,
											"end": 778,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 739,
											"end": 778,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 739,
											"end": 778,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 739,
											"end": 778,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 739,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 739,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 739,
											"end": 778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 739,
											"end": 778,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 739,
											"end": 778,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 739,
											"end": 778,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 739,
											"end": 778,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 739,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 739,
											"end": 778,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 739,
											"end": 778,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 739,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 739,
											"end": 778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 739,
											"end": 778,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 739,
											"end": 778,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 739,
											"end": 778,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 739,
											"end": 778,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 739,
											"end": 778,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 739,
											"end": 778,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 739,
											"end": 778,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 739,
											"end": 778,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 739,
											"end": 778,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 328,
											"end": 369,
											"name": "tag",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 328,
											"end": 369,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 328,
											"end": 369,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 328,
											"end": 369,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 328,
											"end": 369,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 328,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 328,
											"end": 369,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 328,
											"end": 369,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 328,
											"end": 369,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 328,
											"end": 369,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 328,
											"end": 369,
											"name": "tag",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 328,
											"end": 369,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 328,
											"end": 369,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 328,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 328,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "37"
										},
										{
											"begin": 328,
											"end": 369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 328,
											"end": 369,
											"name": "tag",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 328,
											"end": 369,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 328,
											"end": 369,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 328,
											"end": 369,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 328,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "38"
										},
										{
											"begin": 328,
											"end": 369,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 328,
											"end": 369,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 328,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 328,
											"end": 369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 328,
											"end": 369,
											"name": "tag",
											"source": 17,
											"value": "38"
										},
										{
											"begin": 328,
											"end": 369,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 328,
											"end": 369,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 328,
											"end": 369,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 328,
											"end": 369,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 328,
											"end": 369,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 328,
											"end": 369,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 328,
											"end": 369,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 328,
											"end": 369,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 917,
											"end": 1329,
											"name": "tag",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 917,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 917,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "39"
										},
										{
											"begin": 917,
											"end": 1329,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 917,
											"end": 1329,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 917,
											"end": 1329,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 917,
											"end": 1329,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 917,
											"end": 1329,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 917,
											"end": 1329,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 917,
											"end": 1329,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 917,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 917,
											"end": 1329,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 917,
											"end": 1329,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 917,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 917,
											"end": 1329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 917,
											"end": 1329,
											"name": "tag",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 917,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 917,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "42"
										},
										{
											"begin": 917,
											"end": 1329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 917,
											"end": 1329,
											"name": "tag",
											"source": 18,
											"value": "39"
										},
										{
											"begin": 917,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 917,
											"end": 1329,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1987,
											"end": 5181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1987,
											"end": 5181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1545,
											"name": "tag",
											"source": 18,
											"value": "15"
										},
										{
											"begin": 1377,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1463,
											"end": 1464,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1439,
											"end": 1460,
											"name": "SELFBALANCE",
											"source": 18
										},
										{
											"begin": 1439,
											"end": 1464,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 1435,
											"end": 1537,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1435,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "49"
										},
										{
											"begin": 1435,
											"end": 1537,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1466,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "50"
										},
										{
											"begin": 1503,
											"end": 1513,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1536,
											"name": "SELFBALANCE",
											"source": 18
										},
										{
											"begin": 1466,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "51"
										},
										{
											"begin": 1466,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1466,
											"end": 1537,
											"name": "tag",
											"source": 18,
											"value": "50"
										},
										{
											"begin": 1466,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1435,
											"end": 1537,
											"name": "tag",
											"source": 18,
											"value": "49"
										},
										{
											"begin": 1435,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1377,
											"end": 1545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 458,
											"end": 869,
											"name": "tag",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 458,
											"end": 869,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 556,
											"end": 576,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 586,
											"end": 591,
											"name": "PUSHIMMUTABLE",
											"source": 18,
											"value": "1430"
										},
										{
											"begin": 579,
											"end": 602,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 579,
											"end": 602,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 579,
											"end": 602,
											"name": "PUSH",
											"source": 18,
											"value": "70A08231"
										},
										{
											"begin": 611,
											"end": 615,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 579,
											"end": 617,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 579,
											"end": 617,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 579,
											"end": 617,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 579,
											"end": 617,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "53"
										},
										{
											"begin": 579,
											"end": 617,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 579,
											"end": 617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "tag",
											"source": 18,
											"value": "53"
										},
										{
											"begin": 579,
											"end": 617,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 579,
											"end": 617,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 579,
											"end": 617,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "STATICCALL",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "55"
										},
										{
											"begin": 579,
											"end": 617,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 579,
											"end": 617,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 579,
											"end": 617,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "tag",
											"source": 18,
											"value": "55"
										},
										{
											"begin": 579,
											"end": 617,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 579,
											"end": 617,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 579,
											"end": 617,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 579,
											"end": 617,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 579,
											"end": 617,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "56"
										},
										{
											"begin": 579,
											"end": 617,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "57"
										},
										{
											"begin": 579,
											"end": 617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 579,
											"end": 617,
											"name": "tag",
											"source": 18,
											"value": "56"
										},
										{
											"begin": 579,
											"end": 617,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 556,
											"end": 617,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 556,
											"end": 617,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 652,
											"end": 665,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 636,
											"end": 648,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 636,
											"end": 665,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 636,
											"end": 665,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 628,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "58"
										},
										{
											"begin": 628,
											"end": 688,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 628,
											"end": 688,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 688,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 628,
											"end": 688,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 628,
											"end": 688,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 628,
											"end": 688,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 628,
											"end": 688,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 688,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 628,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "59"
										},
										{
											"begin": 628,
											"end": 688,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 628,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 628,
											"end": 688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 628,
											"end": 688,
											"name": "tag",
											"source": 18,
											"value": "59"
										},
										{
											"begin": 628,
											"end": 688,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 628,
											"end": 688,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 688,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 628,
											"end": 688,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 628,
											"end": 688,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 628,
											"end": 688,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 628,
											"end": 688,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 628,
											"end": 688,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 628,
											"end": 688,
											"name": "tag",
											"source": 18,
											"value": "58"
										},
										{
											"begin": 628,
											"end": 688,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 720,
											"end": 721,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 705,
											"end": 717,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 705,
											"end": 721,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 701,
											"end": 862,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 701,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "61"
										},
										{
											"begin": 701,
											"end": 862,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 745,
											"end": 750,
											"name": "PUSHIMMUTABLE",
											"source": 18,
											"value": "1430"
										},
										{
											"begin": 738,
											"end": 760,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 738,
											"end": 760,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 738,
											"end": 760,
											"name": "PUSH",
											"source": 18,
											"value": "2E1A7D4D"
										},
										{
											"begin": 761,
											"end": 773,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 738,
											"end": 774,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 738,
											"end": 774,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 738,
											"end": 774,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 738,
											"end": 774,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "62"
										},
										{
											"begin": 738,
											"end": 774,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "63"
										},
										{
											"begin": 738,
											"end": 774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "tag",
											"source": 18,
											"value": "62"
										},
										{
											"begin": 738,
											"end": 774,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 738,
											"end": 774,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 738,
											"end": 774,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 738,
											"end": 774,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "EXTCODESIZE",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 738,
											"end": 774,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 738,
											"end": 774,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "tag",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 738,
											"end": 774,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "CALL",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "66"
										},
										{
											"begin": 738,
											"end": 774,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 738,
											"end": 774,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 738,
											"end": 774,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "tag",
											"source": 18,
											"value": "66"
										},
										{
											"begin": 738,
											"end": 774,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 738,
											"end": 774,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 789,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "67"
										},
										{
											"begin": 826,
											"end": 835,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 837,
											"end": 849,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 789,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "51"
										},
										{
											"begin": 789,
											"end": 850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 789,
											"end": 850,
											"name": "tag",
											"source": 18,
											"value": "67"
										},
										{
											"begin": 789,
											"end": 850,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 701,
											"end": 862,
											"name": "tag",
											"source": 18,
											"value": "61"
										},
										{
											"begin": 701,
											"end": 862,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 545,
											"end": 869,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 458,
											"end": 869,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 458,
											"end": 869,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 458,
											"end": 869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 422,
											"end": 461,
											"name": "tag",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 422,
											"end": 461,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 422,
											"end": 461,
											"name": "PUSHIMMUTABLE",
											"source": 17,
											"value": "1430"
										},
										{
											"begin": 422,
											"end": 461,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 422,
											"end": 461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6102,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6118,
											"end": 6182,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6118,
											"end": 6182,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6118,
											"end": 6182,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6118,
											"end": 6182,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6118,
											"end": 6182,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6118,
											"end": 6182,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6118,
											"end": 6182,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6118,
											"end": 6182,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6147,
											"end": 6153,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 6118,
											"end": 6182,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6118,
											"end": 6182,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6118,
											"end": 6182,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6118,
											"end": 6182,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6118,
											"end": 6182,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6118,
											"end": 6182,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6163,
											"end": 6169,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6118,
											"end": 6182,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6118,
											"end": 6182,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6118,
											"end": 6182,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6118,
											"end": 6182,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6118,
											"end": 6182,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6118,
											"end": 6182,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6176,
											"end": 6180,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6118,
											"end": 6182,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFF"
										},
										{
											"begin": 6118,
											"end": 6182,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6118,
											"end": 6182,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6118,
											"end": 6182,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6118,
											"end": 6182,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6182,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6182,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6193,
											"end": 6212,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6230,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 6257,
											"end": 6264,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "1426"
										},
										{
											"begin": 6266,
											"end": 6273,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6230,
											"end": 6256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 6230,
											"end": 6274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6230,
											"end": 6274,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 6230,
											"end": 6274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6193,
											"end": 6275,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6193,
											"end": 6275,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6552,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6558,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6548,
											"end": 6558,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6558,
											"name": "PUSH",
											"source": 9,
											"value": "490E6CBC"
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6608,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6623,
											"end": 6630,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6724,
											"end": 6731,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6763,
											"end": 6770,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6800,
											"end": 6810,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6882,
											"end": 6886,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFF"
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6919,
											"end": 6923,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFF"
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6674,
											"end": 6943,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6645,
											"end": 6958,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6645,
											"end": 6958,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6645,
											"end": 6958,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6645,
											"end": 6958,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6645,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 6645,
											"end": 6958,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6645,
											"end": 6958,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6645,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 6645,
											"end": 6958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6645,
											"end": 6958,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 6645,
											"end": 6958,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6645,
											"end": 6958,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6645,
											"end": 6958,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6645,
											"end": 6958,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6645,
											"end": 6958,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6645,
											"end": 6958,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6645,
											"end": 6958,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6645,
											"end": 6958,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6645,
											"end": 6958,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6645,
											"end": 6958,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6645,
											"end": 6958,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6645,
											"end": 6958,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6645,
											"end": 6958,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 6548,
											"end": 6969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6969,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6057,
											"end": 6977,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6057,
											"end": 6977,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 6977,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 6977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 739,
											"end": 778,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 739,
											"end": 778,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 739,
											"end": 778,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "675"
										},
										{
											"begin": 739,
											"end": 778,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 739,
											"end": 778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 328,
											"end": 369,
											"name": "tag",
											"source": 17,
											"value": "37"
										},
										{
											"begin": 328,
											"end": 369,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 328,
											"end": 369,
											"name": "PUSHIMMUTABLE",
											"source": 17,
											"value": "1426"
										},
										{
											"begin": 328,
											"end": 369,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 328,
											"end": 369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 917,
											"end": 1329,
											"name": "tag",
											"source": 18,
											"value": "42"
										},
										{
											"begin": 917,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1063,
											"end": 1083,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1093,
											"end": 1098,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1109,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1086,
											"end": 1109,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1109,
											"name": "PUSH",
											"source": 18,
											"value": "70A08231"
										},
										{
											"begin": 1118,
											"end": 1122,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "79"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 1086,
											"end": 1124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "tag",
											"source": 18,
											"value": "79"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "STATICCALL",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "81"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "tag",
											"source": 18,
											"value": "81"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "82"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "57"
										},
										{
											"begin": 1086,
											"end": 1124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "tag",
											"source": 18,
											"value": "82"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1063,
											"end": 1124,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1063,
											"end": 1124,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1159,
											"end": 1172,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1143,
											"end": 1155,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1143,
											"end": 1172,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 1143,
											"end": 1172,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1135,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "83"
										},
										{
											"begin": 1135,
											"end": 1195,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1135,
											"end": 1195,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1135,
											"end": 1195,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1135,
											"end": 1195,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1135,
											"end": 1195,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1135,
											"end": 1195,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1135,
											"end": 1195,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1135,
											"end": 1195,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1135,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 1135,
											"end": 1195,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1135,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "85"
										},
										{
											"begin": 1135,
											"end": 1195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1135,
											"end": 1195,
											"name": "tag",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 1135,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1135,
											"end": 1195,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1135,
											"end": 1195,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1135,
											"end": 1195,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1135,
											"end": 1195,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1135,
											"end": 1195,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1135,
											"end": 1195,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1135,
											"end": 1195,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1135,
											"end": 1195,
											"name": "tag",
											"source": 18,
											"value": "83"
										},
										{
											"begin": 1135,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1227,
											"end": 1228,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 1224,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1212,
											"end": 1228,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 1208,
											"end": 1322,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1208,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "86"
										},
										{
											"begin": 1208,
											"end": 1322,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1245,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "87"
										},
										{
											"begin": 1279,
											"end": 1284,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1286,
											"end": 1295,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1245,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "88"
										},
										{
											"begin": 1245,
											"end": 1310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1245,
											"end": 1310,
											"name": "tag",
											"source": 18,
											"value": "87"
										},
										{
											"begin": 1245,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1208,
											"end": 1322,
											"name": "tag",
											"source": 18,
											"value": "86"
										},
										{
											"begin": 1208,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1052,
											"end": 1329,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 917,
											"end": 1329,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 917,
											"end": 1329,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 917,
											"end": 1329,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 917,
											"end": 1329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2163,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2177,
											"end": 2181,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2177,
											"end": 2181,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 2203,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 2203,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 2203,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 2166,
											"end": 2203,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 2203,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 2166,
											"end": 2203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 2203,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 2166,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2203,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2203,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2214,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "1426"
										},
										{
											"begin": 2257,
											"end": 2264,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2257,
											"end": 2272,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2257,
											"end": 2272,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2257,
											"end": 2272,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2214,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 2214,
											"end": 2273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2214,
											"end": 2273,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 2214,
											"end": 2273,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2214,
											"end": 2273,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2300,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2303,
											"end": 2310,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2318,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2303,
											"end": 2318,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2318,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2325,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2303,
											"end": 2325,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2325,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2325,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2325,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2350,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2353,
											"end": 2360,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2353,
											"end": 2368,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2353,
											"end": 2368,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2353,
											"end": 2368,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2353,
											"end": 2375,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2353,
											"end": 2375,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2353,
											"end": 2375,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2375,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2375,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 2421,
											"end": 2427,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2437,
											"end": 2447,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "675"
										},
										{
											"begin": 2450,
											"end": 2457,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2450,
											"end": 2465,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2465,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2450,
											"end": 2465,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 2388,
											"end": 2466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2466,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 2388,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2477,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 2510,
											"end": 2516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2526,
											"end": 2536,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "675"
										},
										{
											"begin": 2539,
											"end": 2546,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 2554,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2539,
											"end": 2554,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 2554,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2477,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 2477,
											"end": 2555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2477,
											"end": 2555,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 2477,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2680,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2716,
											"end": 2720,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2680,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 2680,
											"end": 2721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2680,
											"end": 2721,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 2680,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2659,
											"end": 2721,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2659,
											"end": 2721,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2732,
											"end": 2750,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2753,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 2772,
											"end": 2779,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2772,
											"end": 2787,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2772,
											"end": 2787,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2772,
											"end": 2787,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2789,
											"end": 2793,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 2753,
											"end": 2794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 2794,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 2753,
											"end": 2794,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2732,
											"end": 2794,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2732,
											"end": 2794,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2887,
											"end": 2905,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2921,
											"end": 2931,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "675"
										},
										{
											"begin": 2921,
											"end": 2948,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2921,
											"end": 2948,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 2948,
											"name": "PUSH",
											"source": 9,
											"value": "414BF389"
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3040,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3073,
											"end": 3079,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3107,
											"end": 3114,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 3107,
											"end": 3123,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3107,
											"end": 3123,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3107,
											"end": 3123,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFF"
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3165,
											"end": 3169,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3203,
											"end": 3218,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3251,
											"end": 3258,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 3251,
											"end": 3266,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3251,
											"end": 3266,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3251,
											"end": 3266,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3307,
											"end": 3317,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3360,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2967,
											"end": 3380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 2921,
											"end": 3395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 2921,
											"end": 3395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 2921,
											"end": 3395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2887,
											"end": 3395,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2887,
											"end": 3395,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3489,
											"end": 3507,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3523,
											"end": 3533,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "675"
										},
										{
											"begin": 3523,
											"end": 3550,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3523,
											"end": 3550,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3550,
											"name": "PUSH",
											"source": 9,
											"value": "414BF389"
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3636,
											"end": 3642,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3675,
											"end": 3681,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3709,
											"end": 3716,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 3709,
											"end": 3725,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 3709,
											"end": 3725,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3709,
											"end": 3725,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFF"
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3767,
											"end": 3771,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3805,
											"end": 3820,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3853,
											"end": 3860,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 3853,
											"end": 3868,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3853,
											"end": 3868,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3853,
											"end": 3868,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3909,
											"end": 3919,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3961,
											"end": 3962,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3982,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 3523,
											"end": 3997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 3523,
											"end": 3997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 3523,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3489,
											"end": 3997,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3489,
											"end": 3997,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4113,
											"end": 4132,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4135,
											"end": 4176,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 4154,
											"end": 4161,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4154,
											"end": 4169,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4154,
											"end": 4169,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4154,
											"end": 4169,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4171,
											"end": 4175,
											"name": "DUP14",
											"source": 9
										},
										{
											"begin": 4135,
											"end": 4153,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 4135,
											"end": 4176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4135,
											"end": 4176,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 4135,
											"end": 4176,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4113,
											"end": 4176,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4113,
											"end": 4176,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4187,
											"end": 4206,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4209,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 4228,
											"end": 4235,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4228,
											"end": 4243,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4228,
											"end": 4243,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4228,
											"end": 4243,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4245,
											"end": 4249,
											"name": "DUP14",
											"source": 9
										},
										{
											"begin": 4209,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 4209,
											"end": 4250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4209,
											"end": 4250,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 4209,
											"end": 4250,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4187,
											"end": 4250,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4187,
											"end": 4250,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 4296,
											"end": 4302,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4312,
											"end": 4316,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4330,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 4263,
											"end": 4331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4331,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 4263,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4342,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 4375,
											"end": 4381,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4409,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4342,
											"end": 4374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 4342,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4342,
											"end": 4410,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 4342,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4441,
											"end": 4442,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4427,
											"end": 4438,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4427,
											"end": 4442,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4423,
											"end": 4495,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4423,
											"end": 4495,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 4423,
											"end": 4495,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4444,
											"end": 4495,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 4448,
											"end": 4454,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4464,
											"end": 4468,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 4471,
											"end": 4481,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4483,
											"end": 4494,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4444,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 4444,
											"end": 4495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4444,
											"end": 4495,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 4444,
											"end": 4495,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4423,
											"end": 4495,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 4423,
											"end": 4495,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4524,
											"end": 4525,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4510,
											"end": 4521,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4525,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4506,
											"end": 4578,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4506,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 4506,
											"end": 4578,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4527,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 4531,
											"end": 4537,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4547,
											"end": 4551,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 4554,
											"end": 4564,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4566,
											"end": 4577,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4527,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 4527,
											"end": 4578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4527,
											"end": 4578,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 4527,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4506,
											"end": 4578,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 4506,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4655,
											"end": 4666,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4642,
											"end": 4652,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4642,
											"end": 4666,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4638,
											"end": 4902,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4638,
											"end": 4902,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 4638,
											"end": 4902,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4698,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4701,
											"end": 4744,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 4720,
											"end": 4730,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4732,
											"end": 4743,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4701,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 4701,
											"end": 4744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4701,
											"end": 4744,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 4701,
											"end": 4744,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4744,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4744,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4761,
											"end": 4825,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 4794,
											"end": 4800,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4810,
											"end": 4814,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 4817,
											"end": 4824,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4761,
											"end": 4793,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 4761,
											"end": 4825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4761,
											"end": 4825,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 4761,
											"end": 4825,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4840,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 4844,
											"end": 4850,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4860,
											"end": 4864,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 4867,
											"end": 4874,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 4867,
											"end": 4880,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4867,
											"end": 4880,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4867,
											"end": 4880,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4882,
											"end": 4889,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4840,
											"end": 4843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 4840,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4840,
											"end": 4890,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 4840,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4668,
											"end": 4902,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4638,
											"end": 4902,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 4638,
											"end": 4902,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4929,
											"end": 4940,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4916,
											"end": 4926,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4916,
											"end": 4940,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4912,
											"end": 5174,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4912,
											"end": 5174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 4912,
											"end": 5174,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4957,
											"end": 4972,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 4994,
											"end": 5004,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5006,
											"end": 5017,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4975,
											"end": 4993,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 4975,
											"end": 5018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4975,
											"end": 5018,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 4975,
											"end": 5018,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4957,
											"end": 5018,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4957,
											"end": 5018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5033,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 5066,
											"end": 5072,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 5082,
											"end": 5086,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 5089,
											"end": 5096,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5033,
											"end": 5065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 5033,
											"end": 5097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5033,
											"end": 5097,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 5033,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5112,
											"end": 5162,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 5116,
											"end": 5122,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5132,
											"end": 5136,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 5139,
											"end": 5146,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 5139,
											"end": 5152,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5139,
											"end": 5152,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5139,
											"end": 5152,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5154,
											"end": 5161,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5112,
											"end": 5115,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 5112,
											"end": 5162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5112,
											"end": 5162,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 5112,
											"end": 5162,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4942,
											"end": 5174,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4912,
											"end": 5174,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 4912,
											"end": 5174,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2120,
											"end": 5181,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2120,
											"end": 5181,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2120,
											"end": 5181,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2120,
											"end": 5181,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2120,
											"end": 5181,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2120,
											"end": 5181,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2120,
											"end": 5181,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2120,
											"end": 5181,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2120,
											"end": 5181,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 5181,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 5181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2431,
											"end": 2599,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 2431,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2504,
											"end": 2516,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2524,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2529,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2522,
											"end": 2529,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2537,
											"end": 2542,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2554,
											"end": 2555,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 2544,
											"end": 2556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 2522,
											"end": 2557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "PUSH",
											"source": 10,
											"value": "3F"
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2503,
											"end": 2557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2503,
											"end": 2557,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2503,
											"end": 2557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2576,
											"end": 2583,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2568,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 2568,
											"end": 2591,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2568,
											"end": 2591,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2568,
											"end": 2591,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2568,
											"end": 2591,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2568,
											"end": 2591,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2568,
											"end": 2591,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2568,
											"end": 2591,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2568,
											"end": 2591,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2568,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 2568,
											"end": 2591,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2568,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 2568,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2568,
											"end": 2591,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 2568,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2568,
											"end": 2591,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2568,
											"end": 2591,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2568,
											"end": 2591,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2568,
											"end": 2591,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2568,
											"end": 2591,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2568,
											"end": 2591,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2568,
											"end": 2591,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2568,
											"end": 2591,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 2568,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2492,
											"end": 2599,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2431,
											"end": 2599,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2431,
											"end": 2599,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2431,
											"end": 2599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1334,
											"end": 1707,
											"name": "tag",
											"source": 20,
											"value": "70"
										},
										{
											"begin": 1334,
											"end": 1707,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1418,
											"end": 1430,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1463,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1460,
											"end": 1470,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1460,
											"end": 1470,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1460,
											"end": 1470,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1447,
											"end": 1470,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1470,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1447,
											"end": 1450,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1447,
											"end": 1457,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1447,
											"end": 1457,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1447,
											"end": 1457,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1447,
											"end": 1470,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1470,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1447,
											"end": 1470,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "141"
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "tag",
											"source": 20,
											"value": "141"
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1478,
											"end": 1490,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1555,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1587,
											"end": 1590,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1587,
											"end": 1597,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 1597,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1587,
											"end": 1597,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1599,
											"end": 1602,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 1599,
											"end": 1609,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1599,
											"end": 1609,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1599,
											"end": 1609,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1611,
											"end": 1614,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 1611,
											"end": 1618,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1611,
											"end": 1618,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1611,
											"end": 1618,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1576,
											"end": 1619,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1576,
											"end": 1619,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1576,
											"end": 1619,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1576,
											"end": 1619,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1576,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "142"
										},
										{
											"begin": 1576,
											"end": 1619,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 1576,
											"end": 1619,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 1576,
											"end": 1619,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1576,
											"end": 1619,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1576,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "143"
										},
										{
											"begin": 1576,
											"end": 1619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1576,
											"end": 1619,
											"name": "tag",
											"source": 20,
											"value": "142"
										},
										{
											"begin": 1576,
											"end": 1619,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1576,
											"end": 1619,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1576,
											"end": 1619,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1576,
											"end": 1619,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1576,
											"end": 1619,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1576,
											"end": 1619,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1576,
											"end": 1619,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 1576,
											"end": 1619,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 1576,
											"end": 1619,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1576,
											"end": 1619,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1576,
											"end": 1619,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1576,
											"end": 1619,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1576,
											"end": 1619,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1566,
											"end": 1620,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1566,
											"end": 1620,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1566,
											"end": 1620,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1566,
											"end": 1620,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1566,
											"end": 1620,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1566,
											"end": 1620,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 244,
											"end": 310,
											"name": "PUSH",
											"source": 20,
											"value": "E34F199B19B2B4F47F68442619D555527D244F78A3297EA89325F843F87B8B54"
										},
										{
											"begin": 1631,
											"end": 1650,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1650,
											"name": "SHL",
											"source": 20
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "144"
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "145"
										},
										{
											"begin": 1503,
											"end": 1657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "tag",
											"source": 20,
											"value": "144"
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1493,
											"end": 1658,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1493,
											"end": 1658,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1493,
											"end": 1658,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1493,
											"end": 1658,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1493,
											"end": 1658,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1493,
											"end": 1658,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 1478,
											"end": 1658,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1478,
											"end": 1658,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1696,
											"end": 1700,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1688,
											"end": 1701,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1688,
											"end": 1701,
											"name": "SHR",
											"source": 20
										},
										{
											"begin": 1665,
											"end": 1703,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1665,
											"end": 1703,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1432,
											"end": 1707,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1334,
											"end": 1707,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 1334,
											"end": 1707,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1334,
											"end": 1707,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1334,
											"end": 1707,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1334,
											"end": 1707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1245,
											"end": 1561,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 1245,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1364,
											"end": 1376,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1395,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1404,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1409,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1399,
											"end": 1409,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1433,
											"end": 1457,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 1433,
											"end": 1457,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1433,
											"end": 1457,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1461,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1468,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 1410,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1469,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 1399,
											"end": 1470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "PUSH",
											"source": 10,
											"value": "3F"
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1470,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1363,
											"end": 1470,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1363,
											"end": 1470,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1363,
											"end": 1470,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1363,
											"end": 1470,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1489,
											"end": 1496,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1489,
											"end": 1546,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1489,
											"end": 1546,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1489,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 1489,
											"end": 1546,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1489,
											"end": 1546,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1516,
											"end": 1517,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1505,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1501,
											"end": 1512,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1501,
											"end": 1517,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1501,
											"end": 1545,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1501,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 1501,
											"end": 1545,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1501,
											"end": 1545,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1532,
											"end": 1536,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 1521,
											"end": 1545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1501,
											"end": 1545,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 1501,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1489,
											"end": 1546,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 1489,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1481,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 1481,
											"end": 1553,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1481,
											"end": 1553,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1481,
											"end": 1553,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1481,
											"end": 1553,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1481,
											"end": 1553,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1481,
											"end": 1553,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1481,
											"end": 1553,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1481,
											"end": 1553,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1481,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 1481,
											"end": 1553,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1481,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 1481,
											"end": 1553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1481,
											"end": 1553,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 1481,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1481,
											"end": 1553,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1481,
											"end": 1553,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1481,
											"end": 1553,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1481,
											"end": 1553,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1481,
											"end": 1553,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1481,
											"end": 1553,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1481,
											"end": 1553,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1481,
											"end": 1553,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 1481,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1352,
											"end": 1561,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1352,
											"end": 1561,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1245,
											"end": 1561,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1245,
											"end": 1561,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1245,
											"end": 1561,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1245,
											"end": 1561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1218,
											"end": 1504,
											"name": "tag",
											"source": 19,
											"value": "93"
										},
										{
											"begin": 1218,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1345,
											"end": 1364,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1404,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "161"
										},
										{
											"begin": 1431,
											"end": 1438,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1440,
											"end": 1447,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "70"
										},
										{
											"begin": 1404,
											"end": 1448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1404,
											"end": 1448,
											"name": "tag",
											"source": 19,
											"value": "161"
										},
										{
											"begin": 1404,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1382,
											"end": 1449,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1382,
											"end": 1449,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1490,
											"end": 1494,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1468,
											"end": 1478,
											"name": "CALLER",
											"source": 19
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 1460,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "162"
										},
										{
											"begin": 1460,
											"end": 1496,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1460,
											"end": 1496,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1496,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1460,
											"end": 1496,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1460,
											"end": 1496,
											"name": "tag",
											"source": 19,
											"value": "162"
										},
										{
											"begin": 1460,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1218,
											"end": 1504,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1218,
											"end": 1504,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1218,
											"end": 1504,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1218,
											"end": 1504,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1218,
											"end": 1504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1921,
											"end": 2235,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 1921,
											"end": 2235,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2051,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2070,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2079,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2084,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2074,
											"end": 2084,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "PUSH",
											"source": 10,
											"value": "95EA7B3"
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2142,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 2085,
											"end": 2143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2143,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 2074,
											"end": 2144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "PUSH",
											"source": 10,
											"value": "3F"
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2144,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2144,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2144,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2144,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2144,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2163,
											"end": 2170,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2190,
											"end": 2191,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2179,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2175,
											"end": 2186,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2175,
											"end": 2191,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2175,
											"end": 2219,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2175,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 2175,
											"end": 2219,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2175,
											"end": 2219,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2206,
											"end": 2210,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2195,
											"end": 2219,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2195,
											"end": 2219,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2195,
											"end": 2219,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2195,
											"end": 2219,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2195,
											"end": 2219,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2195,
											"end": 2219,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2195,
											"end": 2219,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2195,
											"end": 2219,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2195,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 2195,
											"end": 2219,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2195,
											"end": 2219,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2195,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 2195,
											"end": 2219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2195,
											"end": 2219,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 2195,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2175,
											"end": 2219,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 2175,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 2155,
											"end": 2227,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2227,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2155,
											"end": 2227,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2227,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2155,
											"end": 2227,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2227,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2227,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2155,
											"end": 2227,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 2155,
											"end": 2227,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 2155,
											"end": 2227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2227,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 2155,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2227,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2155,
											"end": 2227,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2227,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2227,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2227,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2227,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2227,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2227,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 2155,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2027,
											"end": 2235,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2027,
											"end": 2235,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1921,
											"end": 2235,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1921,
											"end": 2235,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1921,
											"end": 2235,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1921,
											"end": 2235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 435,
											"end": 546,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 435,
											"end": 546,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 493,
											"end": 502,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 537,
											"end": 538,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 531,
											"end": 532,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 527,
											"end": 528,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 527,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 527,
											"end": 532,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 527,
											"end": 532,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 527,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 527,
											"end": 532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 527,
											"end": 532,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 527,
											"end": 532,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 523,
											"end": 532,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 523,
											"end": 532,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 523,
											"end": 532,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 522,
											"end": 538,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 522,
											"end": 538,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 514,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 514,
											"end": 539,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 514,
											"end": 539,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 514,
											"end": 539,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 514,
											"end": 539,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 514,
											"end": 539,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 514,
											"end": 539,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 435,
											"end": 546,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 435,
											"end": 546,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 435,
											"end": 546,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 435,
											"end": 546,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 435,
											"end": 546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1742,
											"end": 2470,
											"name": "tag",
											"source": 18,
											"value": "115"
										},
										{
											"begin": 1742,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1895,
											"end": 1900,
											"name": "PUSHIMMUTABLE",
											"source": 18,
											"value": "1430"
										},
										{
											"begin": 1886,
											"end": 1900,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1886,
											"end": 1900,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1886,
											"end": 1891,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1886,
											"end": 1900,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1886,
											"end": 1900,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1886,
											"end": 1900,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 1886,
											"end": 1934,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1886,
											"end": 1934,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1886,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "180"
										},
										{
											"begin": 1886,
											"end": 1934,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1886,
											"end": 1934,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1929,
											"end": 1934,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1904,
											"end": 1925,
											"name": "SELFBALANCE",
											"source": 18
										},
										{
											"begin": 1904,
											"end": 1934,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 1904,
											"end": 1934,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1886,
											"end": 1934,
											"name": "tag",
											"source": 18,
											"value": "180"
										},
										{
											"begin": 1886,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1882,
											"end": 2463,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1882,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "181"
										},
										{
											"begin": 1882,
											"end": 2463,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1989,
											"end": 1994,
											"name": "PUSHIMMUTABLE",
											"source": 18,
											"value": "1430"
										},
										{
											"begin": 1982,
											"end": 2003,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1982,
											"end": 2003,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2003,
											"name": "PUSH",
											"source": 18,
											"value": "D0E30DB0"
										},
										{
											"begin": 2011,
											"end": 2016,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "EXTCODESIZE",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "182"
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "tag",
											"source": 18,
											"value": "182"
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "CALL",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "184"
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "tag",
											"source": 18,
											"value": "184"
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2019,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2076,
											"end": 2081,
											"name": "PUSHIMMUTABLE",
											"source": 18,
											"value": "1430"
										},
										{
											"begin": 2069,
											"end": 2091,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2069,
											"end": 2091,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2091,
											"name": "PUSH",
											"source": 18,
											"value": "A9059CBB"
										},
										{
											"begin": 2092,
											"end": 2101,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2103,
											"end": 2108,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "185"
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "148"
										},
										{
											"begin": 2069,
											"end": 2109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "tag",
											"source": 18,
											"value": "185"
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "CALL",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "187"
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "tag",
											"source": 18,
											"value": "187"
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "188"
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "156"
										},
										{
											"begin": 2069,
											"end": 2109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "tag",
											"source": 18,
											"value": "188"
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2069,
											"end": 2109,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1882,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "189"
										},
										{
											"begin": 1882,
											"end": 2463,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1882,
											"end": 2463,
											"name": "tag",
											"source": 18,
											"value": "181"
										},
										{
											"begin": 1882,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2148,
											"end": 2152,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 2131,
											"end": 2153,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2131,
											"end": 2153,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2131,
											"end": 2136,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2131,
											"end": 2153,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2131,
											"end": 2153,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2131,
											"end": 2153,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2127,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "190"
										},
										{
											"begin": 2127,
											"end": 2463,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2262,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "191"
										},
										{
											"begin": 2296,
											"end": 2301,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2303,
											"end": 2312,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2314,
											"end": 2319,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2262,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "88"
										},
										{
											"begin": 2262,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2262,
											"end": 2320,
											"name": "tag",
											"source": 18,
											"value": "191"
										},
										{
											"begin": 2262,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2127,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "192"
										},
										{
											"begin": 2127,
											"end": 2463,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2127,
											"end": 2463,
											"name": "tag",
											"source": 18,
											"value": "190"
										},
										{
											"begin": 2127,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2382,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "193"
										},
										{
											"begin": 2420,
											"end": 2425,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2427,
											"end": 2432,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2434,
											"end": 2443,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2445,
											"end": 2450,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2382,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "194"
										},
										{
											"begin": 2382,
											"end": 2451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2382,
											"end": 2451,
											"name": "tag",
											"source": 18,
											"value": "193"
										},
										{
											"begin": 2382,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2127,
											"end": 2463,
											"name": "tag",
											"source": 18,
											"value": "192"
										},
										{
											"begin": 2127,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1882,
											"end": 2463,
											"name": "tag",
											"source": 18,
											"value": "189"
										},
										{
											"begin": 1882,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1742,
											"end": 2470,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1742,
											"end": 2470,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1742,
											"end": 2470,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1742,
											"end": 2470,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1742,
											"end": 2470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 710,
											"end": 821,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 710,
											"end": 821,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 768,
											"end": 777,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 812,
											"end": 813,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 806,
											"end": 807,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 802,
											"end": 803,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 802,
											"end": 807,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 802,
											"end": 807,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 802,
											"end": 807,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 802,
											"end": 807,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 802,
											"end": 807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 802,
											"end": 807,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 802,
											"end": 807,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 798,
											"end": 807,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 798,
											"end": 807,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 798,
											"end": 807,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 797,
											"end": 813,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 797,
											"end": 813,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 789,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 789,
											"end": 814,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 789,
											"end": 814,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 789,
											"end": 814,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 789,
											"end": 814,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 789,
											"end": 814,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 789,
											"end": 814,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 710,
											"end": 821,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 710,
											"end": 821,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 710,
											"end": 821,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 710,
											"end": 821,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 710,
											"end": 821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 579,
											"end": 946,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 579,
											"end": 946,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 725,
											"end": 737,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 756,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 773,
											"end": 778,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 773,
											"end": 783,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 773,
											"end": 783,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 807,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 807,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 807,
											"end": 835,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 837,
											"end": 841,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 843,
											"end": 845,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 847,
											"end": 852,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 784,
											"end": 853,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 784,
											"end": 853,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 784,
											"end": 853,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 784,
											"end": 853,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 784,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 784,
											"end": 853,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 784,
											"end": 853,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 784,
											"end": 853,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 784,
											"end": 853,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 784,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 784,
											"end": 853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 784,
											"end": 853,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 784,
											"end": 853,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 784,
											"end": 853,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 784,
											"end": 853,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 784,
											"end": 853,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 784,
											"end": 853,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 784,
											"end": 853,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 784,
											"end": 853,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 784,
											"end": 853,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 784,
											"end": 853,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 784,
											"end": 853,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 784,
											"end": 853,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 784,
											"end": 853,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 784,
											"end": 853,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 784,
											"end": 853,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 784,
											"end": 853,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 784,
											"end": 853,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 784,
											"end": 853,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 784,
											"end": 853,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 784,
											"end": 853,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 784,
											"end": 853,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 784,
											"end": 853,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 784,
											"end": 853,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 784,
											"end": 853,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 784,
											"end": 853,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 784,
											"end": 853,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 784,
											"end": 853,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 784,
											"end": 853,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 784,
											"end": 853,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 784,
											"end": 853,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 784,
											"end": 853,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 784,
											"end": 853,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 784,
											"end": 853,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 784,
											"end": 853,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 784,
											"end": 853,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 854,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 773,
											"end": 854,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 773,
											"end": 854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 773,
											"end": 854,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 773,
											"end": 854,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 854,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 773,
											"end": 854,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 773,
											"end": 854,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 773,
											"end": 854,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 854,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 773,
											"end": 854,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "PUSH",
											"source": 10,
											"value": "3F"
										},
										{
											"begin": 773,
											"end": 854,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 854,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 773,
											"end": 854,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 773,
											"end": 854,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 773,
											"end": 854,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 773,
											"end": 854,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 773,
											"end": 854,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 773,
											"end": 854,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 773,
											"end": 854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 724,
											"end": 854,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 724,
											"end": 854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 724,
											"end": 854,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 724,
											"end": 854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 873,
											"end": 880,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 873,
											"end": 930,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 873,
											"end": 930,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 873,
											"end": 930,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 873,
											"end": 930,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 873,
											"end": 930,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 900,
											"end": 901,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 889,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 885,
											"end": 896,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 885,
											"end": 901,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 885,
											"end": 929,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 885,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 885,
											"end": 929,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 885,
											"end": 929,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 916,
											"end": 920,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 905,
											"end": 929,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 905,
											"end": 929,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 905,
											"end": 929,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 905,
											"end": 929,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 905,
											"end": 929,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 905,
											"end": 929,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 905,
											"end": 929,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 905,
											"end": 929,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 905,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 905,
											"end": 929,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 905,
											"end": 929,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 905,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 905,
											"end": 929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 905,
											"end": 929,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 905,
											"end": 929,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 885,
											"end": 929,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 885,
											"end": 929,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 873,
											"end": 930,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 873,
											"end": 930,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 865,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 865,
											"end": 938,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 865,
											"end": 938,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 865,
											"end": 938,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 865,
											"end": 938,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 865,
											"end": 938,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 865,
											"end": 938,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 865,
											"end": 938,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 865,
											"end": 938,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 865,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 865,
											"end": 938,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 865,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 865,
											"end": 938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 865,
											"end": 938,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 865,
											"end": 938,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 865,
											"end": 938,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 865,
											"end": 938,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 865,
											"end": 938,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 865,
											"end": 938,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 865,
											"end": 938,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 865,
											"end": 938,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 865,
											"end": 938,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 865,
											"end": 938,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 865,
											"end": 938,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 713,
											"end": 946,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 713,
											"end": 946,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 579,
											"end": 946,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 579,
											"end": 946,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 579,
											"end": 946,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 579,
											"end": 946,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 579,
											"end": 946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 21,
											"value": "212"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 21,
											"value": "213"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 21,
											"value": "214"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 21,
											"value": "215"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 21,
											"value": "216"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "291"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "215"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 21,
											"value": "291"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "292"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 21,
											"value": "292"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 21,
											"value": "217"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "294"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "216"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 21,
											"value": "294"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 690,
											"end": 816,
											"name": "tag",
											"source": 21,
											"value": "218"
										},
										{
											"begin": 690,
											"end": 816,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 727,
											"end": 734,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 767,
											"end": 809,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 760,
											"end": 765,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 756,
											"end": 810,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 745,
											"end": 810,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 745,
											"end": 810,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 690,
											"end": 816,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 690,
											"end": 816,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 690,
											"end": 816,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 690,
											"end": 816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 822,
											"end": 918,
											"name": "tag",
											"source": 21,
											"value": "219"
										},
										{
											"begin": 822,
											"end": 918,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 859,
											"end": 866,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 888,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "297"
										},
										{
											"begin": 906,
											"end": 911,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 888,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "218"
										},
										{
											"begin": 888,
											"end": 912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 888,
											"end": 912,
											"name": "tag",
											"source": 21,
											"value": "297"
										},
										{
											"begin": 888,
											"end": 912,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 877,
											"end": 912,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 877,
											"end": 912,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 822,
											"end": 918,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 822,
											"end": 918,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 822,
											"end": 918,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 822,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 21,
											"value": "220"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "299"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "219"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 21,
											"value": "299"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "300"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 21,
											"value": "300"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 21,
											"value": "221"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "302"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "220"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 21,
											"value": "302"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 21,
											"value": "18"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "304"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "305"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "213"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 21,
											"value": "305"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 21,
											"value": "304"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "306"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "217"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 21,
											"value": "306"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "307"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "221"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 21,
											"value": "307"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 21,
											"value": "222"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "309"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "219"
										},
										{
											"begin": 1764,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 21,
											"value": "309"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1677,
											"end": 1795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "311"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "222"
										},
										{
											"begin": 1945,
											"end": 2016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 21,
											"value": "311"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1801,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2029,
											"end": 2120,
											"name": "tag",
											"source": 21,
											"value": "223"
										},
										{
											"begin": 2029,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2113,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFF"
										},
										{
											"begin": 2098,
											"end": 2103,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2094,
											"end": 2114,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 2083,
											"end": 2114,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2083,
											"end": 2114,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2029,
											"end": 2120,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2029,
											"end": 2120,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2029,
											"end": 2120,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2029,
											"end": 2120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2126,
											"end": 2246,
											"name": "tag",
											"source": 21,
											"value": "224"
										},
										{
											"begin": 2126,
											"end": 2246,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2198,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "314"
										},
										{
											"begin": 2215,
											"end": 2220,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2198,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "223"
										},
										{
											"begin": 2198,
											"end": 2221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2198,
											"end": 2221,
											"name": "tag",
											"source": 21,
											"value": "314"
										},
										{
											"begin": 2198,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2191,
											"end": 2196,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2188,
											"end": 2222,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 2178,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "315"
										},
										{
											"begin": 2178,
											"end": 2240,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 2178,
											"end": 2240,
											"name": "tag",
											"source": 21,
											"value": "315"
										},
										{
											"begin": 2178,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2126,
											"end": 2246,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2126,
											"end": 2246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2252,
											"end": 2389,
											"name": "tag",
											"source": 21,
											"value": "225"
										},
										{
											"begin": 2252,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2297,
											"end": 2302,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2341,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2322,
											"end": 2342,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 2313,
											"end": 2342,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2313,
											"end": 2342,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2351,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "317"
										},
										{
											"begin": 2377,
											"end": 2382,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2351,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "224"
										},
										{
											"begin": 2351,
											"end": 2383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2351,
											"end": 2383,
											"name": "tag",
											"source": 21,
											"value": "317"
										},
										{
											"begin": 2351,
											"end": 2383,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2252,
											"end": 2389,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 2252,
											"end": 2389,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2252,
											"end": 2389,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2252,
											"end": 2389,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2252,
											"end": 2389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2395,
											"end": 3592,
											"name": "tag",
											"source": 21,
											"value": "28"
										},
										{
											"begin": 2395,
											"end": 3592,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2505,
											"end": 2511,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2519,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2529,
											"end": 2535,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2537,
											"end": 2543,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2553,
											"end": 2559,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2605,
											"name": "PUSH",
											"source": 21,
											"value": "E0"
										},
										{
											"begin": 2590,
											"end": 2599,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 2581,
											"end": 2588,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 2577,
											"end": 2600,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 2573,
											"end": 2606,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 2570,
											"end": 2690,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 2570,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "319"
										},
										{
											"begin": 2570,
											"end": 2690,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 2609,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "320"
										},
										{
											"begin": 2609,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "213"
										},
										{
											"begin": 2609,
											"end": 2688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2609,
											"end": 2688,
											"name": "tag",
											"source": 21,
											"value": "320"
										},
										{
											"begin": 2609,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2570,
											"end": 2690,
											"name": "tag",
											"source": 21,
											"value": "319"
										},
										{
											"begin": 2570,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2729,
											"end": 2730,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "321"
										},
										{
											"begin": 2799,
											"end": 2806,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 2790,
											"end": 2796,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2779,
											"end": 2788,
											"name": "DUP12",
											"source": 21
										},
										{
											"begin": 2775,
											"end": 2797,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2754,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "221"
										},
										{
											"begin": 2754,
											"end": 2807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2754,
											"end": 2807,
											"name": "tag",
											"source": 21,
											"value": "321"
										},
										{
											"begin": 2754,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "SWAP8",
											"source": 21
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2700,
											"end": 2817,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2856,
											"end": 2858,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 2882,
											"end": 2935,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "322"
										},
										{
											"begin": 2927,
											"end": 2934,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 2918,
											"end": 2924,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2907,
											"end": 2916,
											"name": "DUP12",
											"source": 21
										},
										{
											"begin": 2903,
											"end": 2925,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2882,
											"end": 2935,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "221"
										},
										{
											"begin": 2882,
											"end": 2935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2882,
											"end": 2935,
											"name": "tag",
											"source": 21,
											"value": "322"
										},
										{
											"begin": 2882,
											"end": 2935,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2872,
											"end": 2935,
											"name": "SWAP7",
											"source": 21
										},
										{
											"begin": 2872,
											"end": 2935,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2827,
											"end": 2945,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2984,
											"end": 2986,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3010,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "323"
										},
										{
											"begin": 3054,
											"end": 3061,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 3045,
											"end": 3051,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3034,
											"end": 3043,
											"name": "DUP12",
											"source": 21
										},
										{
											"begin": 3030,
											"end": 3052,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3010,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "225"
										},
										{
											"begin": 3010,
											"end": 3062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3010,
											"end": 3062,
											"name": "tag",
											"source": 21,
											"value": "323"
										},
										{
											"begin": 3010,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3000,
											"end": 3062,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 3000,
											"end": 3062,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2955,
											"end": 3072,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3111,
											"end": 3113,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 3137,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "324"
										},
										{
											"begin": 3182,
											"end": 3189,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 3173,
											"end": 3179,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3162,
											"end": 3171,
											"name": "DUP12",
											"source": 21
										},
										{
											"begin": 3158,
											"end": 3180,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3137,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "217"
										},
										{
											"begin": 3137,
											"end": 3190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3137,
											"end": 3190,
											"name": "tag",
											"source": 21,
											"value": "324"
										},
										{
											"begin": 3137,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3127,
											"end": 3190,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 3127,
											"end": 3190,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3082,
											"end": 3200,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3239,
											"end": 3242,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 3266,
											"end": 3319,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "325"
										},
										{
											"begin": 3311,
											"end": 3318,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 3302,
											"end": 3308,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3291,
											"end": 3300,
											"name": "DUP12",
											"source": 21
										},
										{
											"begin": 3287,
											"end": 3309,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3266,
											"end": 3319,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "217"
										},
										{
											"begin": 3266,
											"end": 3319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3266,
											"end": 3319,
											"name": "tag",
											"source": 21,
											"value": "325"
										},
										{
											"begin": 3266,
											"end": 3319,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3256,
											"end": 3319,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 3256,
											"end": 3319,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3210,
											"end": 3329,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3368,
											"end": 3371,
											"name": "PUSH",
											"source": 21,
											"value": "A0"
										},
										{
											"begin": 3395,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "326"
										},
										{
											"begin": 3439,
											"end": 3446,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 3430,
											"end": 3436,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP12",
											"source": 21
										},
										{
											"begin": 3415,
											"end": 3437,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3395,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "225"
										},
										{
											"begin": 3395,
											"end": 3447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3395,
											"end": 3447,
											"name": "tag",
											"source": 21,
											"value": "326"
										},
										{
											"begin": 3395,
											"end": 3447,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3385,
											"end": 3447,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 3385,
											"end": 3447,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3496,
											"end": 3499,
											"name": "PUSH",
											"source": 21,
											"value": "C0"
										},
										{
											"begin": 3523,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "327"
										},
										{
											"begin": 3567,
											"end": 3574,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 3558,
											"end": 3564,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3547,
											"end": 3556,
											"name": "DUP12",
											"source": 21
										},
										{
											"begin": 3543,
											"end": 3565,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3523,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "225"
										},
										{
											"begin": 3523,
											"end": 3575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3523,
											"end": 3575,
											"name": "tag",
											"source": 21,
											"value": "327"
										},
										{
											"begin": 3523,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3513,
											"end": 3575,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3513,
											"end": 3575,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3467,
											"end": 3585,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2395,
											"end": 3592,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 2395,
											"end": 3592,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 2395,
											"end": 3592,
											"name": "SWAP9",
											"source": 21
										},
										{
											"begin": 2395,
											"end": 3592,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2395,
											"end": 3592,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 2395,
											"end": 3592,
											"name": "SWAP8",
											"source": 21
										},
										{
											"begin": 2395,
											"end": 3592,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2395,
											"end": 3592,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 2395,
											"end": 3592,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 2395,
											"end": 3592,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2395,
											"end": 3592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3598,
											"end": 3658,
											"name": "tag",
											"source": 21,
											"value": "226"
										},
										{
											"begin": 3598,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3626,
											"end": 3629,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3647,
											"end": 3652,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3640,
											"end": 3652,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3640,
											"end": 3652,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3598,
											"end": 3658,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3598,
											"end": 3658,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3598,
											"end": 3658,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3598,
											"end": 3658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3664,
											"end": 3806,
											"name": "tag",
											"source": 21,
											"value": "227"
										},
										{
											"begin": 3664,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3714,
											"end": 3723,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3747,
											"end": 3800,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "330"
										},
										{
											"begin": 3765,
											"end": 3799,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "331"
										},
										{
											"begin": 3774,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "332"
										},
										{
											"begin": 3792,
											"end": 3797,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 3774,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "218"
										},
										{
											"begin": 3774,
											"end": 3798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3774,
											"end": 3798,
											"name": "tag",
											"source": 21,
											"value": "332"
										},
										{
											"begin": 3774,
											"end": 3798,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3765,
											"end": 3799,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "226"
										},
										{
											"begin": 3765,
											"end": 3799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3765,
											"end": 3799,
											"name": "tag",
											"source": 21,
											"value": "331"
										},
										{
											"begin": 3765,
											"end": 3799,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3747,
											"end": 3800,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "218"
										},
										{
											"begin": 3747,
											"end": 3800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3747,
											"end": 3800,
											"name": "tag",
											"source": 21,
											"value": "330"
										},
										{
											"begin": 3747,
											"end": 3800,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3734,
											"end": 3800,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3734,
											"end": 3800,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3664,
											"end": 3806,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3664,
											"end": 3806,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3664,
											"end": 3806,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3664,
											"end": 3806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3812,
											"end": 3938,
											"name": "tag",
											"source": 21,
											"value": "228"
										},
										{
											"begin": 3812,
											"end": 3938,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3862,
											"end": 3871,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3895,
											"end": 3932,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "334"
										},
										{
											"begin": 3926,
											"end": 3931,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3895,
											"end": 3932,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "227"
										},
										{
											"begin": 3895,
											"end": 3932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3895,
											"end": 3932,
											"name": "tag",
											"source": 21,
											"value": "334"
										},
										{
											"begin": 3895,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3882,
											"end": 3932,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3882,
											"end": 3932,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3812,
											"end": 3938,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3812,
											"end": 3938,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3812,
											"end": 3938,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3812,
											"end": 3938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3944,
											"end": 4090,
											"name": "tag",
											"source": 21,
											"value": "229"
										},
										{
											"begin": 3944,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4014,
											"end": 4023,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4047,
											"end": 4084,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "336"
										},
										{
											"begin": 4078,
											"end": 4083,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4047,
											"end": 4084,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "228"
										},
										{
											"begin": 4047,
											"end": 4084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4047,
											"end": 4084,
											"name": "tag",
											"source": 21,
											"value": "336"
										},
										{
											"begin": 4047,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4034,
											"end": 4084,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4034,
											"end": 4084,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3944,
											"end": 4090,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3944,
											"end": 4090,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3944,
											"end": 4090,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3944,
											"end": 4090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4096,
											"end": 4267,
											"name": "tag",
											"source": 21,
											"value": "230"
										},
										{
											"begin": 4096,
											"end": 4267,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4203,
											"end": 4260,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "338"
										},
										{
											"begin": 4254,
											"end": 4259,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4203,
											"end": 4260,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "229"
										},
										{
											"begin": 4203,
											"end": 4260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4203,
											"end": 4260,
											"name": "tag",
											"source": 21,
											"value": "338"
										},
										{
											"begin": 4203,
											"end": 4260,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4198,
											"end": 4201,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4191,
											"end": 4261,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4096,
											"end": 4267,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4096,
											"end": 4267,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4096,
											"end": 4267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4273,
											"end": 4535,
											"name": "tag",
											"source": 21,
											"value": "34"
										},
										{
											"begin": 4273,
											"end": 4535,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4386,
											"end": 4390,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4424,
											"end": 4426,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4413,
											"end": 4422,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4409,
											"end": 4427,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4401,
											"end": 4427,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4401,
											"end": 4427,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4437,
											"end": 4528,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "340"
										},
										{
											"begin": 4525,
											"end": 4526,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4514,
											"end": 4523,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 4510,
											"end": 4527,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4501,
											"end": 4507,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4437,
											"end": 4528,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "230"
										},
										{
											"begin": 4437,
											"end": 4528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4437,
											"end": 4528,
											"name": "tag",
											"source": 21,
											"value": "340"
										},
										{
											"begin": 4437,
											"end": 4528,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4273,
											"end": 4535,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4273,
											"end": 4535,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4273,
											"end": 4535,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4273,
											"end": 4535,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4273,
											"end": 4535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4541,
											"end": 5160,
											"name": "tag",
											"source": 21,
											"value": "41"
										},
										{
											"begin": 4541,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4618,
											"end": 4624,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4626,
											"end": 4632,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4634,
											"end": 4640,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4683,
											"end": 4685,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 4671,
											"end": 4680,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4662,
											"end": 4669,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 4658,
											"end": 4681,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 4654,
											"end": 4686,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 4651,
											"end": 4770,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 4651,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "342"
										},
										{
											"begin": 4651,
											"end": 4770,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4689,
											"end": 4768,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "343"
										},
										{
											"begin": 4689,
											"end": 4768,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "213"
										},
										{
											"begin": 4689,
											"end": 4768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4689,
											"end": 4768,
											"name": "tag",
											"source": 21,
											"value": "343"
										},
										{
											"begin": 4689,
											"end": 4768,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4651,
											"end": 4770,
											"name": "tag",
											"source": 21,
											"value": "342"
										},
										{
											"begin": 4651,
											"end": 4770,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4809,
											"end": 4810,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "344"
										},
										{
											"begin": 4879,
											"end": 4886,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 4870,
											"end": 4876,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4859,
											"end": 4868,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 4855,
											"end": 4877,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "221"
										},
										{
											"begin": 4834,
											"end": 4887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "tag",
											"source": 21,
											"value": "344"
										},
										{
											"begin": 4834,
											"end": 4887,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4824,
											"end": 4887,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 4824,
											"end": 4887,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4780,
											"end": 4897,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4936,
											"end": 4938,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4962,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "345"
										},
										{
											"begin": 5007,
											"end": 5014,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 4998,
											"end": 5004,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4987,
											"end": 4996,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 4983,
											"end": 5005,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4962,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "217"
										},
										{
											"begin": 4962,
											"end": 5015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4962,
											"end": 5015,
											"name": "tag",
											"source": 21,
											"value": "345"
										},
										{
											"begin": 4962,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4952,
											"end": 5015,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4952,
											"end": 5015,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4907,
											"end": 5025,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5064,
											"end": 5066,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 5090,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "346"
										},
										{
											"begin": 5135,
											"end": 5142,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 5126,
											"end": 5132,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5115,
											"end": 5124,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 5111,
											"end": 5133,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5090,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "221"
										},
										{
											"begin": 5090,
											"end": 5143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5090,
											"end": 5143,
											"name": "tag",
											"source": 21,
											"value": "346"
										},
										{
											"begin": 5090,
											"end": 5143,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5080,
											"end": 5143,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5080,
											"end": 5143,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5035,
											"end": 5153,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4541,
											"end": 5160,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4541,
											"end": 5160,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4541,
											"end": 5160,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4541,
											"end": 5160,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4541,
											"end": 5160,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4541,
											"end": 5160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5166,
											"end": 5283,
											"name": "tag",
											"source": 21,
											"value": "231"
										},
										{
											"begin": 5166,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5275,
											"end": 5276,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5272,
											"end": 5273,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5265,
											"end": 5277,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 5289,
											"end": 5406,
											"name": "tag",
											"source": 21,
											"value": "232"
										},
										{
											"begin": 5289,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5398,
											"end": 5399,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5395,
											"end": 5396,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5388,
											"end": 5400,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 5412,
											"end": 5529,
											"name": "tag",
											"source": 21,
											"value": "233"
										},
										{
											"begin": 5412,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5521,
											"end": 5522,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5518,
											"end": 5519,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5511,
											"end": 5523,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 5548,
											"end": 6100,
											"name": "tag",
											"source": 21,
											"value": "234"
										},
										{
											"begin": 5548,
											"end": 6100,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5605,
											"end": 5613,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5615,
											"end": 5621,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5665,
											"end": 5668,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 5658,
											"end": 5662,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 5650,
											"end": 5656,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 5646,
											"end": 5663,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 5632,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "351"
										},
										{
											"begin": 5632,
											"end": 5754,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5673,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "352"
										},
										{
											"begin": 5673,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "231"
										},
										{
											"begin": 5673,
											"end": 5752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5673,
											"end": 5752,
											"name": "tag",
											"source": 21,
											"value": "352"
										},
										{
											"begin": 5673,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5632,
											"end": 5754,
											"name": "tag",
											"source": 21,
											"value": "351"
										},
										{
											"begin": 5632,
											"end": 5754,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5786,
											"end": 5792,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5773,
											"end": 5793,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 5763,
											"end": 5793,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5763,
											"end": 5793,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5816,
											"end": 5834,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5808,
											"end": 5814,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5805,
											"end": 5835,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 5802,
											"end": 5919,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5802,
											"end": 5919,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "353"
										},
										{
											"begin": 5802,
											"end": 5919,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5838,
											"end": 5917,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "354"
										},
										{
											"begin": 5838,
											"end": 5917,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "232"
										},
										{
											"begin": 5838,
											"end": 5917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5838,
											"end": 5917,
											"name": "tag",
											"source": 21,
											"value": "354"
										},
										{
											"begin": 5838,
											"end": 5917,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5802,
											"end": 5919,
											"name": "tag",
											"source": 21,
											"value": "353"
										},
										{
											"begin": 5802,
											"end": 5919,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5952,
											"end": 5956,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 5944,
											"end": 5950,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 5940,
											"end": 5957,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5928,
											"end": 5957,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5928,
											"end": 5957,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6006,
											"end": 6009,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 5998,
											"end": 6002,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 5990,
											"end": 5996,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5986,
											"end": 6003,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 5976,
											"end": 5984,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 5972,
											"end": 6004,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5969,
											"end": 6010,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 5966,
											"end": 6094,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5966,
											"end": 6094,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "355"
										},
										{
											"begin": 5966,
											"end": 6094,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 6013,
											"end": 6092,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "356"
										},
										{
											"begin": 6013,
											"end": 6092,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "233"
										},
										{
											"begin": 6013,
											"end": 6092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6013,
											"end": 6092,
											"name": "tag",
											"source": 21,
											"value": "356"
										},
										{
											"begin": 6013,
											"end": 6092,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5966,
											"end": 6094,
											"name": "tag",
											"source": 21,
											"value": "355"
										},
										{
											"begin": 5966,
											"end": 6094,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5548,
											"end": 6100,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 5548,
											"end": 6100,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5548,
											"end": 6100,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 5548,
											"end": 6100,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5548,
											"end": 6100,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5548,
											"end": 6100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6106,
											"end": 6923,
											"name": "tag",
											"source": 21,
											"value": "46"
										},
										{
											"begin": 6106,
											"end": 6923,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6194,
											"end": 6200,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6202,
											"end": 6208,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6210,
											"end": 6216,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6218,
											"end": 6224,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6267,
											"end": 6269,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 6255,
											"end": 6264,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 6246,
											"end": 6253,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 6242,
											"end": 6265,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 6238,
											"end": 6270,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 6235,
											"end": 6354,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 6235,
											"end": 6354,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "358"
										},
										{
											"begin": 6235,
											"end": 6354,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 6273,
											"end": 6352,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "359"
										},
										{
											"begin": 6273,
											"end": 6352,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "213"
										},
										{
											"begin": 6273,
											"end": 6352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6273,
											"end": 6352,
											"name": "tag",
											"source": 21,
											"value": "359"
										},
										{
											"begin": 6273,
											"end": 6352,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6235,
											"end": 6354,
											"name": "tag",
											"source": 21,
											"value": "358"
										},
										{
											"begin": 6235,
											"end": 6354,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6393,
											"end": 6394,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6418,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "360"
										},
										{
											"begin": 6463,
											"end": 6470,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 6454,
											"end": 6460,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6443,
											"end": 6452,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 6439,
											"end": 6461,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6418,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "217"
										},
										{
											"begin": 6418,
											"end": 6471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6418,
											"end": 6471,
											"name": "tag",
											"source": 21,
											"value": "360"
										},
										{
											"begin": 6418,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6408,
											"end": 6471,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 6408,
											"end": 6471,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6364,
											"end": 6481,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6520,
											"end": 6522,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6546,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "361"
										},
										{
											"begin": 6591,
											"end": 6598,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 6582,
											"end": 6588,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 6567,
											"end": 6589,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6546,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "217"
										},
										{
											"begin": 6546,
											"end": 6599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6546,
											"end": 6599,
											"name": "tag",
											"source": 21,
											"value": "361"
										},
										{
											"begin": 6546,
											"end": 6599,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6536,
											"end": 6599,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 6536,
											"end": 6599,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6491,
											"end": 6609,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6676,
											"end": 6678,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 6665,
											"end": 6674,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 6661,
											"end": 6679,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6648,
											"end": 6680,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 6707,
											"end": 6725,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6699,
											"end": 6705,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6696,
											"end": 6726,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 6693,
											"end": 6810,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 6693,
											"end": 6810,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "362"
										},
										{
											"begin": 6693,
											"end": 6810,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 6729,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "363"
										},
										{
											"begin": 6729,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "214"
										},
										{
											"begin": 6729,
											"end": 6808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6729,
											"end": 6808,
											"name": "tag",
											"source": 21,
											"value": "363"
										},
										{
											"begin": 6729,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6693,
											"end": 6810,
											"name": "tag",
											"source": 21,
											"value": "362"
										},
										{
											"begin": 6693,
											"end": 6810,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6842,
											"end": 6906,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "364"
										},
										{
											"begin": 6898,
											"end": 6905,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 6889,
											"end": 6895,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6878,
											"end": 6887,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 6874,
											"end": 6896,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6842,
											"end": 6906,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "234"
										},
										{
											"begin": 6842,
											"end": 6906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6842,
											"end": 6906,
											"name": "tag",
											"source": 21,
											"value": "364"
										},
										{
											"begin": 6842,
											"end": 6906,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6824,
											"end": 6906,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6824,
											"end": 6906,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6824,
											"end": 6906,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6824,
											"end": 6906,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6619,
											"end": 6916,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6106,
											"end": 6923,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6106,
											"end": 6923,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 6106,
											"end": 6923,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 6106,
											"end": 6923,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 6106,
											"end": 6923,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6106,
											"end": 6923,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6106,
											"end": 6923,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6106,
											"end": 6923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6929,
											"end": 7072,
											"name": "tag",
											"source": 21,
											"value": "235"
										},
										{
											"begin": 6929,
											"end": 7072,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6986,
											"end": 6991,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7017,
											"end": 7023,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7011,
											"end": 7024,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7033,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "366"
										},
										{
											"begin": 7060,
											"end": 7065,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7033,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "216"
										},
										{
											"begin": 7033,
											"end": 7066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7033,
											"end": 7066,
											"name": "tag",
											"source": 21,
											"value": "366"
										},
										{
											"begin": 7033,
											"end": 7066,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6929,
											"end": 7072,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6929,
											"end": 7072,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 6929,
											"end": 7072,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6929,
											"end": 7072,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6929,
											"end": 7072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7078,
											"end": 7429,
											"name": "tag",
											"source": 21,
											"value": "57"
										},
										{
											"begin": 7078,
											"end": 7429,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7148,
											"end": 7154,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7197,
											"end": 7199,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 7185,
											"end": 7194,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7176,
											"end": 7183,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 7172,
											"end": 7195,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 7168,
											"end": 7200,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 7165,
											"end": 7284,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 7165,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "368"
										},
										{
											"begin": 7165,
											"end": 7284,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 7203,
											"end": 7282,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "369"
										},
										{
											"begin": 7203,
											"end": 7282,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "213"
										},
										{
											"begin": 7203,
											"end": 7282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7203,
											"end": 7282,
											"name": "tag",
											"source": 21,
											"value": "369"
										},
										{
											"begin": 7203,
											"end": 7282,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7165,
											"end": 7284,
											"name": "tag",
											"source": 21,
											"value": "368"
										},
										{
											"begin": 7165,
											"end": 7284,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7323,
											"end": 7324,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7412,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "370"
										},
										{
											"begin": 7404,
											"end": 7411,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 7395,
											"end": 7401,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7384,
											"end": 7393,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 7380,
											"end": 7402,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7348,
											"end": 7412,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "235"
										},
										{
											"begin": 7348,
											"end": 7412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7348,
											"end": 7412,
											"name": "tag",
											"source": 21,
											"value": "370"
										},
										{
											"begin": 7348,
											"end": 7412,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7338,
											"end": 7412,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7338,
											"end": 7412,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7294,
											"end": 7422,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7078,
											"end": 7429,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 7078,
											"end": 7429,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7078,
											"end": 7429,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7078,
											"end": 7429,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7078,
											"end": 7429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7435,
											"end": 7604,
											"name": "tag",
											"source": 21,
											"value": "236"
										},
										{
											"begin": 7435,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7519,
											"end": 7530,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7553,
											"end": 7559,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7548,
											"end": 7551,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7541,
											"end": 7560,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7593,
											"end": 7597,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 7588,
											"end": 7591,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7584,
											"end": 7598,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7569,
											"end": 7598,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7569,
											"end": 7598,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7435,
											"end": 7604,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 7435,
											"end": 7604,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7435,
											"end": 7604,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7435,
											"end": 7604,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7435,
											"end": 7604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7610,
											"end": 7778,
											"name": "tag",
											"source": 21,
											"value": "237"
										},
										{
											"begin": 7610,
											"end": 7778,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7750,
											"end": 7770,
											"name": "PUSH",
											"source": 21,
											"value": "496E73756666696369656E742057455448390000000000000000000000000000"
										},
										{
											"begin": 7746,
											"end": 7747,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7738,
											"end": 7744,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7734,
											"end": 7748,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7727,
											"end": 7771,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7610,
											"end": 7778,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7610,
											"end": 7778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7784,
											"end": 8150,
											"name": "tag",
											"source": 21,
											"value": "238"
										},
										{
											"begin": 7784,
											"end": 8150,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7926,
											"end": 7929,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7947,
											"end": 8014,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "374"
										},
										{
											"begin": 8011,
											"end": 8013,
											"name": "PUSH",
											"source": 21,
											"value": "12"
										},
										{
											"begin": 8006,
											"end": 8009,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 7947,
											"end": 8014,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "236"
										},
										{
											"begin": 7947,
											"end": 8014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7947,
											"end": 8014,
											"name": "tag",
											"source": 21,
											"value": "374"
										},
										{
											"begin": 7947,
											"end": 8014,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7940,
											"end": 8014,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7940,
											"end": 8014,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8023,
											"end": 8116,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "375"
										},
										{
											"begin": 8112,
											"end": 8115,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8023,
											"end": 8116,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "237"
										},
										{
											"begin": 8023,
											"end": 8116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8023,
											"end": 8116,
											"name": "tag",
											"source": 21,
											"value": "375"
										},
										{
											"begin": 8023,
											"end": 8116,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8141,
											"end": 8143,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 8136,
											"end": 8139,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8132,
											"end": 8144,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8125,
											"end": 8144,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8125,
											"end": 8144,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7784,
											"end": 8150,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7784,
											"end": 8150,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7784,
											"end": 8150,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7784,
											"end": 8150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8156,
											"end": 8575,
											"name": "tag",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 8156,
											"end": 8575,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8322,
											"end": 8326,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8360,
											"end": 8362,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 8349,
											"end": 8358,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8345,
											"end": 8363,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8337,
											"end": 8363,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8337,
											"end": 8363,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8409,
											"end": 8418,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8403,
											"end": 8407,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8399,
											"end": 8419,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 8395,
											"end": 8396,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8384,
											"end": 8393,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 8380,
											"end": 8397,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8373,
											"end": 8420,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8437,
											"end": 8568,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "377"
										},
										{
											"begin": 8563,
											"end": 8567,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8437,
											"end": 8568,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "238"
										},
										{
											"begin": 8437,
											"end": 8568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8437,
											"end": 8568,
											"name": "tag",
											"source": 21,
											"value": "377"
										},
										{
											"begin": 8437,
											"end": 8568,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8429,
											"end": 8568,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8429,
											"end": 8568,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8156,
											"end": 8575,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 8156,
											"end": 8575,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8156,
											"end": 8575,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8156,
											"end": 8575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8581,
											"end": 8699,
											"name": "tag",
											"source": 21,
											"value": "239"
										},
										{
											"begin": 8581,
											"end": 8699,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8668,
											"end": 8692,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "379"
										},
										{
											"begin": 8686,
											"end": 8691,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8668,
											"end": 8692,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "215"
										},
										{
											"begin": 8668,
											"end": 8692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8668,
											"end": 8692,
											"name": "tag",
											"source": 21,
											"value": "379"
										},
										{
											"begin": 8668,
											"end": 8692,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8663,
											"end": 8666,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8656,
											"end": 8693,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8581,
											"end": 8699,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8581,
											"end": 8699,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8581,
											"end": 8699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8705,
											"end": 8927,
											"name": "tag",
											"source": 21,
											"value": "63"
										},
										{
											"begin": 8705,
											"end": 8927,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8798,
											"end": 8802,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8836,
											"end": 8838,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 8825,
											"end": 8834,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8821,
											"end": 8839,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8813,
											"end": 8839,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8813,
											"end": 8839,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8849,
											"end": 8920,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "381"
										},
										{
											"begin": 8917,
											"end": 8918,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8906,
											"end": 8915,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8893,
											"end": 8899,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 8849,
											"end": 8920,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "239"
										},
										{
											"begin": 8849,
											"end": 8920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8849,
											"end": 8920,
											"name": "tag",
											"source": 21,
											"value": "381"
										},
										{
											"begin": 8849,
											"end": 8920,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8705,
											"end": 8927,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 8705,
											"end": 8927,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 8705,
											"end": 8927,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8705,
											"end": 8927,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8705,
											"end": 8927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8933,
											"end": 9041,
											"name": "tag",
											"source": 21,
											"value": "240"
										},
										{
											"begin": 8933,
											"end": 9041,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9010,
											"end": 9034,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "383"
										},
										{
											"begin": 9028,
											"end": 9033,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 9010,
											"end": 9034,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "215"
										},
										{
											"begin": 9010,
											"end": 9034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9010,
											"end": 9034,
											"name": "tag",
											"source": 21,
											"value": "383"
										},
										{
											"begin": 9010,
											"end": 9034,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9005,
											"end": 9008,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8998,
											"end": 9035,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8933,
											"end": 9041,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8933,
											"end": 9041,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8933,
											"end": 9041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9047,
											"end": 9155,
											"name": "tag",
											"source": 21,
											"value": "241"
										},
										{
											"begin": 9047,
											"end": 9155,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9124,
											"end": 9148,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "385"
										},
										{
											"begin": 9142,
											"end": 9147,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 9124,
											"end": 9148,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "219"
										},
										{
											"begin": 9124,
											"end": 9148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9124,
											"end": 9148,
											"name": "tag",
											"source": 21,
											"value": "385"
										},
										{
											"begin": 9124,
											"end": 9148,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9119,
											"end": 9122,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9112,
											"end": 9149,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 9047,
											"end": 9155,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9047,
											"end": 9155,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9047,
											"end": 9155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9161,
											"end": 9266,
											"name": "tag",
											"source": 21,
											"value": "242"
										},
										{
											"begin": 9161,
											"end": 9266,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9236,
											"end": 9259,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "387"
										},
										{
											"begin": 9253,
											"end": 9258,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 9236,
											"end": 9259,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "223"
										},
										{
											"begin": 9236,
											"end": 9259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9236,
											"end": 9259,
											"name": "tag",
											"source": 21,
											"value": "387"
										},
										{
											"begin": 9236,
											"end": 9259,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9231,
											"end": 9234,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9224,
											"end": 9260,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 9161,
											"end": 9266,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9161,
											"end": 9266,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9161,
											"end": 9266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9336,
											"end": 10008,
											"name": "tag",
											"source": 21,
											"value": "243"
										},
										{
											"begin": 9336,
											"end": 10008,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9473,
											"end": 9477,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 9468,
											"end": 9471,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9464,
											"end": 9478,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9562,
											"end": 9566,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9555,
											"end": 9560,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9551,
											"end": 9567,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9545,
											"end": 9568,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 9581,
											"end": 9644,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "389"
										},
										{
											"begin": 9638,
											"end": 9642,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9633,
											"end": 9636,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 9629,
											"end": 9643,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9615,
											"end": 9627,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9581,
											"end": 9644,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "241"
										},
										{
											"begin": 9581,
											"end": 9644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9581,
											"end": 9644,
											"name": "tag",
											"source": 21,
											"value": "389"
										},
										{
											"begin": 9581,
											"end": 9644,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9488,
											"end": 9654,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9738,
											"end": 9742,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 9731,
											"end": 9736,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9727,
											"end": 9743,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9721,
											"end": 9744,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 9757,
											"end": 9820,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "390"
										},
										{
											"begin": 9814,
											"end": 9818,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 9809,
											"end": 9812,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 9805,
											"end": 9819,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9791,
											"end": 9803,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9757,
											"end": 9820,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "241"
										},
										{
											"begin": 9757,
											"end": 9820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9757,
											"end": 9820,
											"name": "tag",
											"source": 21,
											"value": "390"
										},
										{
											"begin": 9757,
											"end": 9820,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9664,
											"end": 9830,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9911,
											"end": 9915,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 9904,
											"end": 9909,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9900,
											"end": 9916,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9894,
											"end": 9917,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 9930,
											"end": 9991,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "391"
										},
										{
											"begin": 9985,
											"end": 9989,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 9980,
											"end": 9983,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 9976,
											"end": 9990,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9962,
											"end": 9974,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9930,
											"end": 9991,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "242"
										},
										{
											"begin": 9930,
											"end": 9991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9930,
											"end": 9991,
											"name": "tag",
											"source": 21,
											"value": "391"
										},
										{
											"begin": 9930,
											"end": 9991,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9840,
											"end": 10001,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9442,
											"end": 10008,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9336,
											"end": 10008,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9336,
											"end": 10008,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9336,
											"end": 10008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10094,
											"end": 11381,
											"name": "tag",
											"source": 21,
											"value": "244"
										},
										{
											"begin": 10094,
											"end": 11381,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10259,
											"end": 10265,
											"name": "PUSH",
											"source": 21,
											"value": "100"
										},
										{
											"begin": 10254,
											"end": 10257,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10250,
											"end": 10266,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10351,
											"end": 10355,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 10344,
											"end": 10349,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10340,
											"end": 10356,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10334,
											"end": 10357,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 10370,
											"end": 10433,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "393"
										},
										{
											"begin": 10427,
											"end": 10431,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 10422,
											"end": 10425,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 10418,
											"end": 10432,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10404,
											"end": 10416,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10370,
											"end": 10433,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "240"
										},
										{
											"begin": 10370,
											"end": 10433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10370,
											"end": 10433,
											"name": "tag",
											"source": 21,
											"value": "393"
										},
										{
											"begin": 10370,
											"end": 10433,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10276,
											"end": 10443,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10528,
											"end": 10532,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 10521,
											"end": 10526,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10517,
											"end": 10533,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10511,
											"end": 10534,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 10547,
											"end": 10610,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "394"
										},
										{
											"begin": 10604,
											"end": 10608,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 10599,
											"end": 10602,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 10595,
											"end": 10609,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10581,
											"end": 10593,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10547,
											"end": 10610,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "240"
										},
										{
											"begin": 10547,
											"end": 10610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10547,
											"end": 10610,
											"name": "tag",
											"source": 21,
											"value": "394"
										},
										{
											"begin": 10547,
											"end": 10610,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10453,
											"end": 10620,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10703,
											"end": 10707,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 10696,
											"end": 10701,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10692,
											"end": 10708,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10686,
											"end": 10709,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 10722,
											"end": 10785,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "395"
										},
										{
											"begin": 10779,
											"end": 10783,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 10774,
											"end": 10777,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 10770,
											"end": 10784,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10756,
											"end": 10768,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10722,
											"end": 10785,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "241"
										},
										{
											"begin": 10722,
											"end": 10785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10722,
											"end": 10785,
											"name": "tag",
											"source": 21,
											"value": "395"
										},
										{
											"begin": 10722,
											"end": 10785,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10630,
											"end": 10795,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10880,
											"end": 10884,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 10873,
											"end": 10878,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10869,
											"end": 10885,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10863,
											"end": 10886,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 10899,
											"end": 11012,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "396"
										},
										{
											"begin": 11006,
											"end": 11010,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 11001,
											"end": 11004,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 10997,
											"end": 11011,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10983,
											"end": 10995,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10899,
											"end": 11012,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "243"
										},
										{
											"begin": 10899,
											"end": 11012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10899,
											"end": 11012,
											"name": "tag",
											"source": 21,
											"value": "396"
										},
										{
											"begin": 10899,
											"end": 11012,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10805,
											"end": 11022,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11108,
											"end": 11112,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 11101,
											"end": 11106,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11097,
											"end": 11113,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11091,
											"end": 11114,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 11127,
											"end": 11188,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "397"
										},
										{
											"begin": 11182,
											"end": 11186,
											"name": "PUSH",
											"source": 21,
											"value": "C0"
										},
										{
											"begin": 11177,
											"end": 11180,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 11173,
											"end": 11187,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11159,
											"end": 11171,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11127,
											"end": 11188,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "242"
										},
										{
											"begin": 11127,
											"end": 11188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11127,
											"end": 11188,
											"name": "tag",
											"source": 21,
											"value": "397"
										},
										{
											"begin": 11127,
											"end": 11188,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11032,
											"end": 11198,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11284,
											"end": 11288,
											"name": "PUSH",
											"source": 21,
											"value": "A0"
										},
										{
											"begin": 11277,
											"end": 11282,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11273,
											"end": 11289,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11267,
											"end": 11290,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 11303,
											"end": 11364,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "398"
										},
										{
											"begin": 11358,
											"end": 11362,
											"name": "PUSH",
											"source": 21,
											"value": "E0"
										},
										{
											"begin": 11353,
											"end": 11356,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 11349,
											"end": 11363,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11335,
											"end": 11347,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11303,
											"end": 11364,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "242"
										},
										{
											"begin": 11303,
											"end": 11364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11303,
											"end": 11364,
											"name": "tag",
											"source": 21,
											"value": "398"
										},
										{
											"begin": 11303,
											"end": 11364,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11208,
											"end": 11374,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10228,
											"end": 11381,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10094,
											"end": 11381,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10094,
											"end": 11381,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10094,
											"end": 11381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11387,
											"end": 11746,
											"name": "tag",
											"source": 21,
											"value": "72"
										},
										{
											"begin": 11387,
											"end": 11746,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11548,
											"end": 11552,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 11586,
											"end": 11589,
											"name": "PUSH",
											"source": 21,
											"value": "100"
										},
										{
											"begin": 11575,
											"end": 11584,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11571,
											"end": 11590,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11563,
											"end": 11590,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 11563,
											"end": 11590,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11600,
											"end": 11739,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "400"
										},
										{
											"begin": 11736,
											"end": 11737,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 11725,
											"end": 11734,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 11721,
											"end": 11738,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11712,
											"end": 11718,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 11600,
											"end": 11739,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "244"
										},
										{
											"begin": 11600,
											"end": 11739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11600,
											"end": 11739,
											"name": "tag",
											"source": 21,
											"value": "400"
										},
										{
											"begin": 11600,
											"end": 11739,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11387,
											"end": 11746,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 11387,
											"end": 11746,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 11387,
											"end": 11746,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11387,
											"end": 11746,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11387,
											"end": 11746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11752,
											"end": 11850,
											"name": "tag",
											"source": 21,
											"value": "245"
										},
										{
											"begin": 11752,
											"end": 11850,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11803,
											"end": 11809,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 11837,
											"end": 11842,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 11831,
											"end": 11843,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 11821,
											"end": 11843,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 11821,
											"end": 11843,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11752,
											"end": 11850,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 11752,
											"end": 11850,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 11752,
											"end": 11850,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11752,
											"end": 11850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11856,
											"end": 12024,
											"name": "tag",
											"source": 21,
											"value": "246"
										},
										{
											"begin": 11856,
											"end": 12024,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11939,
											"end": 11950,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 11973,
											"end": 11979,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11968,
											"end": 11971,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11961,
											"end": 11980,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12013,
											"end": 12017,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 12008,
											"end": 12011,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12004,
											"end": 12018,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11989,
											"end": 12018,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 11989,
											"end": 12018,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11856,
											"end": 12024,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 11856,
											"end": 12024,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 11856,
											"end": 12024,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11856,
											"end": 12024,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11856,
											"end": 12024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12030,
											"end": 12276,
											"name": "tag",
											"source": 21,
											"value": "247"
										},
										{
											"begin": 12030,
											"end": 12276,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12111,
											"end": 12112,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 12121,
											"end": 12234,
											"name": "tag",
											"source": 21,
											"value": "404"
										},
										{
											"begin": 12121,
											"end": 12234,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12135,
											"end": 12141,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 12132,
											"end": 12133,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12129,
											"end": 12142,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 12121,
											"end": 12234,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 12121,
											"end": 12234,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "406"
										},
										{
											"begin": 12121,
											"end": 12234,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 12220,
											"end": 12221,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 12215,
											"end": 12218,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12211,
											"end": 12222,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12205,
											"end": 12223,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 12201,
											"end": 12202,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12196,
											"end": 12199,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 12192,
											"end": 12203,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12185,
											"end": 12224,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12157,
											"end": 12159,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 12154,
											"end": 12155,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12150,
											"end": 12160,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12145,
											"end": 12160,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12145,
											"end": 12160,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12121,
											"end": 12234,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "404"
										},
										{
											"begin": 12121,
											"end": 12234,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12121,
											"end": 12234,
											"name": "tag",
											"source": 21,
											"value": "406"
										},
										{
											"begin": 12121,
											"end": 12234,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12268,
											"end": 12269,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 12259,
											"end": 12265,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 12254,
											"end": 12257,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 12250,
											"end": 12266,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12243,
											"end": 12270,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12092,
											"end": 12276,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12030,
											"end": 12276,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12030,
											"end": 12276,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12030,
											"end": 12276,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12030,
											"end": 12276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12282,
											"end": 12384,
											"name": "tag",
											"source": 21,
											"value": "248"
										},
										{
											"begin": 12282,
											"end": 12384,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12323,
											"end": 12329,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 12374,
											"end": 12376,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 12370,
											"end": 12377,
											"name": "NOT",
											"source": 21
										},
										{
											"begin": 12365,
											"end": 12367,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 12358,
											"end": 12363,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 12354,
											"end": 12368,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12350,
											"end": 12378,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 12340,
											"end": 12378,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12340,
											"end": 12378,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12282,
											"end": 12384,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 12282,
											"end": 12384,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12282,
											"end": 12384,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12282,
											"end": 12384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12390,
											"end": 12763,
											"name": "tag",
											"source": 21,
											"value": "249"
										},
										{
											"begin": 12390,
											"end": 12763,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12476,
											"end": 12479,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 12504,
											"end": 12542,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "409"
										},
										{
											"begin": 12536,
											"end": 12541,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12504,
											"end": 12542,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "245"
										},
										{
											"begin": 12504,
											"end": 12542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12504,
											"end": 12542,
											"name": "tag",
											"source": 21,
											"value": "409"
										},
										{
											"begin": 12504,
											"end": 12542,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12558,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "410"
										},
										{
											"begin": 12621,
											"end": 12627,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12616,
											"end": 12619,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 12558,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "246"
										},
										{
											"begin": 12558,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12558,
											"end": 12628,
											"name": "tag",
											"source": 21,
											"value": "410"
										},
										{
											"begin": 12558,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12551,
											"end": 12628,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 12551,
											"end": 12628,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12637,
											"end": 12702,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "411"
										},
										{
											"begin": 12695,
											"end": 12701,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12690,
											"end": 12693,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 12683,
											"end": 12687,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 12676,
											"end": 12681,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 12672,
											"end": 12688,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12637,
											"end": 12702,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "247"
										},
										{
											"begin": 12637,
											"end": 12702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12637,
											"end": 12702,
											"name": "tag",
											"source": 21,
											"value": "411"
										},
										{
											"begin": 12637,
											"end": 12702,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12727,
											"end": 12756,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "412"
										},
										{
											"begin": 12749,
											"end": 12755,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12727,
											"end": 12756,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "248"
										},
										{
											"begin": 12727,
											"end": 12756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12727,
											"end": 12756,
											"name": "tag",
											"source": 21,
											"value": "412"
										},
										{
											"begin": 12727,
											"end": 12756,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12722,
											"end": 12725,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 12718,
											"end": 12757,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12711,
											"end": 12757,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 12711,
											"end": 12757,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12480,
											"end": 12763,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12390,
											"end": 12763,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 12390,
											"end": 12763,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 12390,
											"end": 12763,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12390,
											"end": 12763,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12390,
											"end": 12763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12769,
											"end": 13409,
											"name": "tag",
											"source": 21,
											"value": "74"
										},
										{
											"begin": 12769,
											"end": 13409,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12964,
											"end": 12968,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13002,
											"end": 13005,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 12991,
											"end": 13000,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12987,
											"end": 13006,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12979,
											"end": 13006,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12979,
											"end": 13006,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13016,
											"end": 13087,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "414"
										},
										{
											"begin": 13084,
											"end": 13085,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13073,
											"end": 13082,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 13069,
											"end": 13086,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13060,
											"end": 13066,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 13016,
											"end": 13087,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "222"
										},
										{
											"begin": 13016,
											"end": 13087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13016,
											"end": 13087,
											"name": "tag",
											"source": 21,
											"value": "414"
										},
										{
											"begin": 13016,
											"end": 13087,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13097,
											"end": 13169,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "415"
										},
										{
											"begin": 13165,
											"end": 13167,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 13154,
											"end": 13163,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 13150,
											"end": 13168,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13141,
											"end": 13147,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 13097,
											"end": 13169,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "239"
										},
										{
											"begin": 13097,
											"end": 13169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13097,
											"end": 13169,
											"name": "tag",
											"source": 21,
											"value": "415"
										},
										{
											"begin": 13097,
											"end": 13169,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13179,
											"end": 13251,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "416"
										},
										{
											"begin": 13247,
											"end": 13249,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 13236,
											"end": 13245,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 13232,
											"end": 13250,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13223,
											"end": 13229,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 13179,
											"end": 13251,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "239"
										},
										{
											"begin": 13179,
											"end": 13251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13179,
											"end": 13251,
											"name": "tag",
											"source": 21,
											"value": "416"
										},
										{
											"begin": 13179,
											"end": 13251,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13298,
											"end": 13307,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 13292,
											"end": 13296,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 13288,
											"end": 13308,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 13283,
											"end": 13285,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 13272,
											"end": 13281,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 13268,
											"end": 13286,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13261,
											"end": 13309,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 13326,
											"end": 13402,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "417"
										},
										{
											"begin": 13397,
											"end": 13401,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 13388,
											"end": 13394,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 13326,
											"end": 13402,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "249"
										},
										{
											"begin": 13326,
											"end": 13402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13326,
											"end": 13402,
											"name": "tag",
											"source": 21,
											"value": "417"
										},
										{
											"begin": 13326,
											"end": 13402,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13318,
											"end": 13402,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 13318,
											"end": 13402,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12769,
											"end": 13409,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 12769,
											"end": 13409,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 12769,
											"end": 13409,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12769,
											"end": 13409,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12769,
											"end": 13409,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12769,
											"end": 13409,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12769,
											"end": 13409,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12769,
											"end": 13409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13415,
											"end": 13583,
											"name": "tag",
											"source": 21,
											"value": "250"
										},
										{
											"begin": 13415,
											"end": 13583,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13555,
											"end": 13575,
											"name": "PUSH",
											"source": 21,
											"value": "496E73756666696369656E7420746F6B656E0000000000000000000000000000"
										},
										{
											"begin": 13551,
											"end": 13552,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13543,
											"end": 13549,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 13539,
											"end": 13553,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13532,
											"end": 13576,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 13415,
											"end": 13583,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13415,
											"end": 13583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13589,
											"end": 13955,
											"name": "tag",
											"source": 21,
											"value": "251"
										},
										{
											"begin": 13589,
											"end": 13955,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13731,
											"end": 13734,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13752,
											"end": 13819,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "420"
										},
										{
											"begin": 13816,
											"end": 13818,
											"name": "PUSH",
											"source": 21,
											"value": "12"
										},
										{
											"begin": 13811,
											"end": 13814,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 13752,
											"end": 13819,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "236"
										},
										{
											"begin": 13752,
											"end": 13819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13752,
											"end": 13819,
											"name": "tag",
											"source": 21,
											"value": "420"
										},
										{
											"begin": 13752,
											"end": 13819,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13745,
											"end": 13819,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 13745,
											"end": 13819,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13828,
											"end": 13921,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "421"
										},
										{
											"begin": 13917,
											"end": 13920,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 13828,
											"end": 13921,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "250"
										},
										{
											"begin": 13828,
											"end": 13921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13828,
											"end": 13921,
											"name": "tag",
											"source": 21,
											"value": "421"
										},
										{
											"begin": 13828,
											"end": 13921,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13946,
											"end": 13948,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 13941,
											"end": 13944,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 13937,
											"end": 13949,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13930,
											"end": 13949,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 13930,
											"end": 13949,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13589,
											"end": 13955,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 13589,
											"end": 13955,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 13589,
											"end": 13955,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13589,
											"end": 13955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13961,
											"end": 14380,
											"name": "tag",
											"source": 21,
											"value": "85"
										},
										{
											"begin": 13961,
											"end": 14380,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14127,
											"end": 14131,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 14165,
											"end": 14167,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 14154,
											"end": 14163,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14150,
											"end": 14168,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14142,
											"end": 14168,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 14142,
											"end": 14168,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14214,
											"end": 14223,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 14208,
											"end": 14212,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 14204,
											"end": 14224,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 14200,
											"end": 14201,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 14189,
											"end": 14198,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 14185,
											"end": 14202,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14178,
											"end": 14225,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 14242,
											"end": 14373,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "423"
										},
										{
											"begin": 14368,
											"end": 14372,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 14242,
											"end": 14373,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "251"
										},
										{
											"begin": 14242,
											"end": 14373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14242,
											"end": 14373,
											"name": "tag",
											"source": 21,
											"value": "423"
										},
										{
											"begin": 14242,
											"end": 14373,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14234,
											"end": 14373,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 14234,
											"end": 14373,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13961,
											"end": 14380,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 13961,
											"end": 14380,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 13961,
											"end": 14380,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13961,
											"end": 14380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14386,
											"end": 14503,
											"name": "tag",
											"source": 21,
											"value": "252"
										},
										{
											"begin": 14386,
											"end": 14503,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14495,
											"end": 14496,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 14492,
											"end": 14493,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 14485,
											"end": 14497,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 14509,
											"end": 14689,
											"name": "tag",
											"source": 21,
											"value": "130"
										},
										{
											"begin": 14509,
											"end": 14689,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14557,
											"end": 14634,
											"name": "PUSH",
											"source": 21,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14554,
											"end": 14555,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 14547,
											"end": 14635,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 14654,
											"end": 14658,
											"name": "PUSH",
											"source": 21,
											"value": "41"
										},
										{
											"begin": 14651,
											"end": 14652,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 14644,
											"end": 14659,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 14678,
											"end": 14682,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 14675,
											"end": 14676,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 14668,
											"end": 14683,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 14695,
											"end": 14976,
											"name": "tag",
											"source": 21,
											"value": "253"
										},
										{
											"begin": 14695,
											"end": 14976,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14778,
											"end": 14805,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "427"
										},
										{
											"begin": 14800,
											"end": 14804,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14778,
											"end": 14805,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "248"
										},
										{
											"begin": 14778,
											"end": 14805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14778,
											"end": 14805,
											"name": "tag",
											"source": 21,
											"value": "427"
										},
										{
											"begin": 14778,
											"end": 14805,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14770,
											"end": 14776,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 14766,
											"end": 14806,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14908,
											"end": 14914,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 14896,
											"end": 14906,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 14893,
											"end": 14915,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 14872,
											"end": 14890,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14860,
											"end": 14870,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14857,
											"end": 14891,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 14854,
											"end": 14916,
											"name": "OR",
											"source": 21
										},
										{
											"begin": 14851,
											"end": 14939,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 14851,
											"end": 14939,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "428"
										},
										{
											"begin": 14851,
											"end": 14939,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 14919,
											"end": 14937,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "429"
										},
										{
											"begin": 14919,
											"end": 14937,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "130"
										},
										{
											"begin": 14919,
											"end": 14937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14919,
											"end": 14937,
											"name": "tag",
											"source": 21,
											"value": "429"
										},
										{
											"begin": 14919,
											"end": 14937,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14851,
											"end": 14939,
											"name": "tag",
											"source": 21,
											"value": "428"
										},
										{
											"begin": 14851,
											"end": 14939,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14959,
											"end": 14969,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 14955,
											"end": 14957,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 14948,
											"end": 14970,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 14738,
											"end": 14976,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14695,
											"end": 14976,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14695,
											"end": 14976,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14695,
											"end": 14976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14982,
											"end": 15111,
											"name": "tag",
											"source": 21,
											"value": "254"
										},
										{
											"begin": 14982,
											"end": 15111,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15016,
											"end": 15022,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 15043,
											"end": 15063,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "431"
										},
										{
											"begin": 15043,
											"end": 15063,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "212"
										},
										{
											"begin": 15043,
											"end": 15063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 15043,
											"end": 15063,
											"name": "tag",
											"source": 21,
											"value": "431"
										},
										{
											"begin": 15043,
											"end": 15063,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15033,
											"end": 15063,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 15033,
											"end": 15063,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 15072,
											"end": 15105,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "432"
										},
										{
											"begin": 15100,
											"end": 15104,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 15092,
											"end": 15098,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 15072,
											"end": 15105,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "253"
										},
										{
											"begin": 15072,
											"end": 15105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 15072,
											"end": 15105,
											"name": "tag",
											"source": 21,
											"value": "432"
										},
										{
											"begin": 15072,
											"end": 15105,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14982,
											"end": 15111,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 14982,
											"end": 15111,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 14982,
											"end": 15111,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14982,
											"end": 15111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 15274,
											"end": 16011,
											"name": "tag",
											"source": 21,
											"value": "256"
										},
										{
											"begin": 15274,
											"end": 16011,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15348,
											"end": 15353,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 15392,
											"end": 15396,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 15380,
											"end": 15389,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 15375,
											"end": 15378,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 15371,
											"end": 15390,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 15367,
											"end": 15397,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 15364,
											"end": 15481,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 15364,
											"end": 15481,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "435"
										},
										{
											"begin": 15364,
											"end": 15481,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 15400,
											"end": 15479,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "436"
										},
										{
											"begin": 15400,
											"end": 15479,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "252"
										},
										{
											"begin": 15400,
											"end": 15479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 15400,
											"end": 15479,
											"name": "tag",
											"source": 21,
											"value": "436"
										},
										{
											"begin": 15400,
											"end": 15479,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15364,
											"end": 15481,
											"name": "tag",
											"source": 21,
											"value": "435"
										},
										{
											"begin": 15364,
											"end": 15481,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15499,
											"end": 15520,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "437"
										},
										{
											"begin": 15515,
											"end": 15519,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 15499,
											"end": 15520,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "254"
										},
										{
											"begin": 15499,
											"end": 15520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 15499,
											"end": 15520,
											"name": "tag",
											"source": 21,
											"value": "437"
										},
										{
											"begin": 15499,
											"end": 15520,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15490,
											"end": 15520,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 15490,
											"end": 15520,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 15581,
											"end": 15582,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 15621,
											"end": 15670,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "438"
										},
										{
											"begin": 15666,
											"end": 15669,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 15657,
											"end": 15663,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 15646,
											"end": 15655,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 15642,
											"end": 15664,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15621,
											"end": 15670,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "221"
										},
										{
											"begin": 15621,
											"end": 15670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 15621,
											"end": 15670,
											"name": "tag",
											"source": 21,
											"value": "438"
										},
										{
											"begin": 15621,
											"end": 15670,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15614,
											"end": 15618,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 15607,
											"end": 15612,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 15603,
											"end": 15619,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15596,
											"end": 15671,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 15530,
											"end": 15682,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 15743,
											"end": 15745,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 15784,
											"end": 15833,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "439"
										},
										{
											"begin": 15829,
											"end": 15832,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 15820,
											"end": 15826,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 15809,
											"end": 15818,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 15805,
											"end": 15827,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15784,
											"end": 15833,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "221"
										},
										{
											"begin": 15784,
											"end": 15833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 15784,
											"end": 15833,
											"name": "tag",
											"source": 21,
											"value": "439"
										},
										{
											"begin": 15784,
											"end": 15833,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15777,
											"end": 15781,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 15770,
											"end": 15775,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 15766,
											"end": 15782,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15759,
											"end": 15834,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 15692,
											"end": 15845,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 15903,
											"end": 15905,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 15944,
											"end": 15992,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "440"
										},
										{
											"begin": 15988,
											"end": 15991,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 15979,
											"end": 15985,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 15968,
											"end": 15977,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 15964,
											"end": 15986,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15944,
											"end": 15992,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "225"
										},
										{
											"begin": 15944,
											"end": 15992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 15944,
											"end": 15992,
											"name": "tag",
											"source": 21,
											"value": "440"
										},
										{
											"begin": 15944,
											"end": 15992,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15937,
											"end": 15941,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 15930,
											"end": 15935,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 15926,
											"end": 15942,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15919,
											"end": 15993,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 15855,
											"end": 16004,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 15274,
											"end": 16011,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 15274,
											"end": 16011,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 15274,
											"end": 16011,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 15274,
											"end": 16011,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 15274,
											"end": 16011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 16059,
											"end": 17331,
											"name": "tag",
											"source": 21,
											"value": "257"
										},
										{
											"begin": 16059,
											"end": 17331,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16142,
											"end": 16147,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 16186,
											"end": 16192,
											"name": "PUSH",
											"source": 21,
											"value": "100"
										},
										{
											"begin": 16174,
											"end": 16183,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 16169,
											"end": 16172,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 16165,
											"end": 16184,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 16161,
											"end": 16193,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 16158,
											"end": 16277,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 16158,
											"end": 16277,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "442"
										},
										{
											"begin": 16158,
											"end": 16277,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 16196,
											"end": 16275,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "443"
										},
										{
											"begin": 16196,
											"end": 16275,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "252"
										},
										{
											"begin": 16196,
											"end": 16275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 16196,
											"end": 16275,
											"name": "tag",
											"source": 21,
											"value": "443"
										},
										{
											"begin": 16196,
											"end": 16275,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16158,
											"end": 16277,
											"name": "tag",
											"source": 21,
											"value": "442"
										},
										{
											"begin": 16158,
											"end": 16277,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16295,
											"end": 16316,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "444"
										},
										{
											"begin": 16311,
											"end": 16315,
											"name": "PUSH",
											"source": 21,
											"value": "C0"
										},
										{
											"begin": 16295,
											"end": 16316,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "254"
										},
										{
											"begin": 16295,
											"end": 16316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 16295,
											"end": 16316,
											"name": "tag",
											"source": 21,
											"value": "444"
										},
										{
											"begin": 16295,
											"end": 16316,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16286,
											"end": 16316,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 16286,
											"end": 16316,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16378,
											"end": 16379,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 16418,
											"end": 16467,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "445"
										},
										{
											"begin": 16463,
											"end": 16466,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 16454,
											"end": 16460,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 16443,
											"end": 16452,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 16439,
											"end": 16461,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16418,
											"end": 16467,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "217"
										},
										{
											"begin": 16418,
											"end": 16467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 16418,
											"end": 16467,
											"name": "tag",
											"source": 21,
											"value": "445"
										},
										{
											"begin": 16418,
											"end": 16467,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16411,
											"end": 16415,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 16404,
											"end": 16409,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 16400,
											"end": 16416,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16393,
											"end": 16468,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 16326,
											"end": 16479,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16541,
											"end": 16543,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 16582,
											"end": 16631,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "446"
										},
										{
											"begin": 16627,
											"end": 16630,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 16618,
											"end": 16624,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 16607,
											"end": 16616,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 16603,
											"end": 16625,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16582,
											"end": 16631,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "217"
										},
										{
											"begin": 16582,
											"end": 16631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 16582,
											"end": 16631,
											"name": "tag",
											"source": 21,
											"value": "446"
										},
										{
											"begin": 16582,
											"end": 16631,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16575,
											"end": 16579,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 16568,
											"end": 16573,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 16564,
											"end": 16580,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16557,
											"end": 16632,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 16489,
											"end": 16643,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16703,
											"end": 16705,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 16744,
											"end": 16793,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "447"
										},
										{
											"begin": 16789,
											"end": 16792,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 16780,
											"end": 16786,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 16769,
											"end": 16778,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 16765,
											"end": 16787,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16744,
											"end": 16793,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "221"
										},
										{
											"begin": 16744,
											"end": 16793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 16744,
											"end": 16793,
											"name": "tag",
											"source": 21,
											"value": "447"
										},
										{
											"begin": 16744,
											"end": 16793,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16737,
											"end": 16741,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 16730,
											"end": 16735,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 16726,
											"end": 16742,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16719,
											"end": 16794,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 16653,
											"end": 16805,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16867,
											"end": 16869,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 16908,
											"end": 16982,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "448"
										},
										{
											"begin": 16978,
											"end": 16981,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 16969,
											"end": 16975,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 16958,
											"end": 16967,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 16954,
											"end": 16976,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16908,
											"end": 16982,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "256"
										},
										{
											"begin": 16908,
											"end": 16982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 16908,
											"end": 16982,
											"name": "tag",
											"source": 21,
											"value": "448"
										},
										{
											"begin": 16908,
											"end": 16982,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16901,
											"end": 16905,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 16894,
											"end": 16899,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 16890,
											"end": 16906,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16883,
											"end": 16983,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 16815,
											"end": 16994,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17057,
											"end": 17060,
											"name": "PUSH",
											"source": 21,
											"value": "C0"
										},
										{
											"begin": 17099,
											"end": 17147,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "449"
										},
										{
											"begin": 17143,
											"end": 17146,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 17134,
											"end": 17140,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 17123,
											"end": 17132,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 17119,
											"end": 17141,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17099,
											"end": 17147,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "225"
										},
										{
											"begin": 17099,
											"end": 17147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 17099,
											"end": 17147,
											"name": "tag",
											"source": 21,
											"value": "449"
										},
										{
											"begin": 17099,
											"end": 17147,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17092,
											"end": 17096,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 17085,
											"end": 17090,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 17081,
											"end": 17097,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17074,
											"end": 17148,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 17004,
											"end": 17159,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17222,
											"end": 17225,
											"name": "PUSH",
											"source": 21,
											"value": "E0"
										},
										{
											"begin": 17264,
											"end": 17312,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "450"
										},
										{
											"begin": 17308,
											"end": 17311,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 17299,
											"end": 17305,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 17288,
											"end": 17297,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 17284,
											"end": 17306,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17264,
											"end": 17312,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "225"
										},
										{
											"begin": 17264,
											"end": 17312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 17264,
											"end": 17312,
											"name": "tag",
											"source": 21,
											"value": "450"
										},
										{
											"begin": 17264,
											"end": 17312,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17257,
											"end": 17261,
											"name": "PUSH",
											"source": 21,
											"value": "A0"
										},
										{
											"begin": 17250,
											"end": 17255,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 17246,
											"end": 17262,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17239,
											"end": 17313,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 17169,
											"end": 17324,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16059,
											"end": 17331,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 16059,
											"end": 17331,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 16059,
											"end": 17331,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16059,
											"end": 17331,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16059,
											"end": 17331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 17337,
											"end": 17735,
											"name": "tag",
											"source": 21,
											"value": "91"
										},
										{
											"begin": 17337,
											"end": 17735,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17430,
											"end": 17436,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 17479,
											"end": 17482,
											"name": "PUSH",
											"source": 21,
											"value": "100"
										},
										{
											"begin": 17467,
											"end": 17476,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 17458,
											"end": 17465,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 17454,
											"end": 17477,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 17450,
											"end": 17483,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 17447,
											"end": 17567,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 17447,
											"end": 17567,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "452"
										},
										{
											"begin": 17447,
											"end": 17567,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 17486,
											"end": 17565,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "453"
										},
										{
											"begin": 17486,
											"end": 17565,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "213"
										},
										{
											"begin": 17486,
											"end": 17565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 17486,
											"end": 17565,
											"name": "tag",
											"source": 21,
											"value": "453"
										},
										{
											"begin": 17486,
											"end": 17565,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17447,
											"end": 17567,
											"name": "tag",
											"source": 21,
											"value": "452"
										},
										{
											"begin": 17447,
											"end": 17567,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17606,
											"end": 17607,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 17631,
											"end": 17718,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "454"
										},
										{
											"begin": 17710,
											"end": 17717,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 17701,
											"end": 17707,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 17690,
											"end": 17699,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 17686,
											"end": 17708,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17631,
											"end": 17718,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "257"
										},
										{
											"begin": 17631,
											"end": 17718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 17631,
											"end": 17718,
											"name": "tag",
											"source": 21,
											"value": "454"
										},
										{
											"begin": 17631,
											"end": 17718,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17621,
											"end": 17718,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 17621,
											"end": 17718,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17577,
											"end": 17728,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17337,
											"end": 17735,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 17337,
											"end": 17735,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 17337,
											"end": 17735,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17337,
											"end": 17735,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17337,
											"end": 17735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 17741,
											"end": 17849,
											"name": "tag",
											"source": 21,
											"value": "258"
										},
										{
											"begin": 17741,
											"end": 17849,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17818,
											"end": 17842,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "456"
										},
										{
											"begin": 17836,
											"end": 17841,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 17818,
											"end": 17842,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "218"
										},
										{
											"begin": 17818,
											"end": 17842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 17818,
											"end": 17842,
											"name": "tag",
											"source": 21,
											"value": "456"
										},
										{
											"begin": 17818,
											"end": 17842,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17813,
											"end": 17816,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 17806,
											"end": 17843,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 17741,
											"end": 17849,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17741,
											"end": 17849,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17741,
											"end": 17849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 17949,
											"end": 19574,
											"name": "tag",
											"source": 21,
											"value": "259"
										},
										{
											"begin": 17949,
											"end": 19574,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 18126,
											"end": 18132,
											"name": "PUSH",
											"source": 21,
											"value": "100"
										},
										{
											"begin": 18121,
											"end": 18124,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 18117,
											"end": 18133,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18218,
											"end": 18222,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 18211,
											"end": 18216,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 18207,
											"end": 18223,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18201,
											"end": 18224,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 18237,
											"end": 18300,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "458"
										},
										{
											"begin": 18294,
											"end": 18298,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 18289,
											"end": 18292,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 18285,
											"end": 18299,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18271,
											"end": 18283,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 18237,
											"end": 18300,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "241"
										},
										{
											"begin": 18237,
											"end": 18300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 18237,
											"end": 18300,
											"name": "tag",
											"source": 21,
											"value": "458"
										},
										{
											"begin": 18237,
											"end": 18300,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 18143,
											"end": 18310,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 18396,
											"end": 18400,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 18389,
											"end": 18394,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 18385,
											"end": 18401,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18379,
											"end": 18402,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 18415,
											"end": 18478,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "459"
										},
										{
											"begin": 18472,
											"end": 18476,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 18467,
											"end": 18470,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 18463,
											"end": 18477,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18449,
											"end": 18461,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 18415,
											"end": 18478,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "241"
										},
										{
											"begin": 18415,
											"end": 18478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 18415,
											"end": 18478,
											"name": "tag",
											"source": 21,
											"value": "459"
										},
										{
											"begin": 18415,
											"end": 18478,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 18320,
											"end": 18488,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 18569,
											"end": 18573,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 18562,
											"end": 18567,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 18558,
											"end": 18574,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18552,
											"end": 18575,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 18588,
											"end": 18649,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "460"
										},
										{
											"begin": 18643,
											"end": 18647,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 18638,
											"end": 18641,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 18634,
											"end": 18648,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18620,
											"end": 18632,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 18588,
											"end": 18649,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "242"
										},
										{
											"begin": 18588,
											"end": 18649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 18588,
											"end": 18649,
											"name": "tag",
											"source": 21,
											"value": "460"
										},
										{
											"begin": 18588,
											"end": 18649,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 18498,
											"end": 18659,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 18746,
											"end": 18750,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 18739,
											"end": 18744,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 18735,
											"end": 18751,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18729,
											"end": 18752,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 18765,
											"end": 18828,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "461"
										},
										{
											"begin": 18822,
											"end": 18826,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 18817,
											"end": 18820,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 18813,
											"end": 18827,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18799,
											"end": 18811,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 18765,
											"end": 18828,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "241"
										},
										{
											"begin": 18765,
											"end": 18828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 18765,
											"end": 18828,
											"name": "tag",
											"source": 21,
											"value": "461"
										},
										{
											"begin": 18765,
											"end": 18828,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 18669,
											"end": 18838,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 18924,
											"end": 18928,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 18917,
											"end": 18922,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 18913,
											"end": 18929,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18907,
											"end": 18930,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 18943,
											"end": 19006,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "462"
										},
										{
											"begin": 19000,
											"end": 19004,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 18995,
											"end": 18998,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 18991,
											"end": 19005,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18977,
											"end": 18989,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 18943,
											"end": 19006,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "240"
										},
										{
											"begin": 18943,
											"end": 19006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 18943,
											"end": 19006,
											"name": "tag",
											"source": 21,
											"value": "462"
										},
										{
											"begin": 18943,
											"end": 19006,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 18848,
											"end": 19016,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 19102,
											"end": 19106,
											"name": "PUSH",
											"source": 21,
											"value": "A0"
										},
										{
											"begin": 19095,
											"end": 19100,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 19091,
											"end": 19107,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 19085,
											"end": 19108,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 19121,
											"end": 19184,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "463"
										},
										{
											"begin": 19178,
											"end": 19182,
											"name": "PUSH",
											"source": 21,
											"value": "A0"
										},
										{
											"begin": 19173,
											"end": 19176,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 19169,
											"end": 19183,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 19155,
											"end": 19167,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 19121,
											"end": 19184,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "240"
										},
										{
											"begin": 19121,
											"end": 19184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 19121,
											"end": 19184,
											"name": "tag",
											"source": 21,
											"value": "463"
										},
										{
											"begin": 19121,
											"end": 19184,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 19026,
											"end": 19194,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 19288,
											"end": 19292,
											"name": "PUSH",
											"source": 21,
											"value": "C0"
										},
										{
											"begin": 19281,
											"end": 19286,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 19277,
											"end": 19293,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 19271,
											"end": 19294,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 19307,
											"end": 19370,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "464"
										},
										{
											"begin": 19364,
											"end": 19368,
											"name": "PUSH",
											"source": 21,
											"value": "C0"
										},
										{
											"begin": 19359,
											"end": 19362,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 19355,
											"end": 19369,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 19341,
											"end": 19353,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 19307,
											"end": 19370,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "240"
										},
										{
											"begin": 19307,
											"end": 19370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 19307,
											"end": 19370,
											"name": "tag",
											"source": 21,
											"value": "464"
										},
										{
											"begin": 19307,
											"end": 19370,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 19204,
											"end": 19380,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 19475,
											"end": 19479,
											"name": "PUSH",
											"source": 21,
											"value": "E0"
										},
										{
											"begin": 19468,
											"end": 19473,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 19464,
											"end": 19480,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 19458,
											"end": 19481,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 19494,
											"end": 19557,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "465"
										},
										{
											"begin": 19551,
											"end": 19555,
											"name": "PUSH",
											"source": 21,
											"value": "E0"
										},
										{
											"begin": 19546,
											"end": 19549,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 19542,
											"end": 19556,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 19528,
											"end": 19540,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 19494,
											"end": 19557,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "258"
										},
										{
											"begin": 19494,
											"end": 19557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 19494,
											"end": 19557,
											"name": "tag",
											"source": 21,
											"value": "465"
										},
										{
											"begin": 19494,
											"end": 19557,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 19390,
											"end": 19567,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 18095,
											"end": 19574,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17949,
											"end": 19574,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17949,
											"end": 19574,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17949,
											"end": 19574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 19580,
											"end": 19963,
											"name": "tag",
											"source": 21,
											"value": "101"
										},
										{
											"begin": 19580,
											"end": 19963,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 19753,
											"end": 19757,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 19791,
											"end": 19794,
											"name": "PUSH",
											"source": 21,
											"value": "100"
										},
										{
											"begin": 19780,
											"end": 19789,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 19776,
											"end": 19795,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 19768,
											"end": 19795,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 19768,
											"end": 19795,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 19805,
											"end": 19956,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "467"
										},
										{
											"begin": 19953,
											"end": 19954,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 19942,
											"end": 19951,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 19938,
											"end": 19955,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 19929,
											"end": 19935,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 19805,
											"end": 19956,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "259"
										},
										{
											"begin": 19805,
											"end": 19956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 19805,
											"end": 19956,
											"name": "tag",
											"source": 21,
											"value": "467"
										},
										{
											"begin": 19805,
											"end": 19956,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 19580,
											"end": 19963,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 19580,
											"end": 19963,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 19580,
											"end": 19963,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 19580,
											"end": 19963,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 19580,
											"end": 19963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 19969,
											"end": 20116,
											"name": "tag",
											"source": 21,
											"value": "260"
										},
										{
											"begin": 19969,
											"end": 20116,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 20070,
											"end": 20081,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 20107,
											"end": 20110,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 20092,
											"end": 20110,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 20092,
											"end": 20110,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 19969,
											"end": 20116,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 19969,
											"end": 20116,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 19969,
											"end": 20116,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 19969,
											"end": 20116,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 19969,
											"end": 20116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 20122,
											"end": 20508,
											"name": "tag",
											"source": 21,
											"value": "261"
										},
										{
											"begin": 20122,
											"end": 20508,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 20226,
											"end": 20229,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 20254,
											"end": 20292,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "470"
										},
										{
											"begin": 20286,
											"end": 20291,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 20254,
											"end": 20292,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "245"
										},
										{
											"begin": 20254,
											"end": 20292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 20254,
											"end": 20292,
											"name": "tag",
											"source": 21,
											"value": "470"
										},
										{
											"begin": 20254,
											"end": 20292,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 20308,
											"end": 20396,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "471"
										},
										{
											"begin": 20389,
											"end": 20395,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 20384,
											"end": 20387,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 20308,
											"end": 20396,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "260"
										},
										{
											"begin": 20308,
											"end": 20396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 20308,
											"end": 20396,
											"name": "tag",
											"source": 21,
											"value": "471"
										},
										{
											"begin": 20308,
											"end": 20396,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 20301,
											"end": 20396,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 20301,
											"end": 20396,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20405,
											"end": 20470,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "472"
										},
										{
											"begin": 20463,
											"end": 20469,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 20458,
											"end": 20461,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 20451,
											"end": 20455,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 20444,
											"end": 20449,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 20440,
											"end": 20456,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 20405,
											"end": 20470,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "247"
										},
										{
											"begin": 20405,
											"end": 20470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 20405,
											"end": 20470,
											"name": "tag",
											"source": 21,
											"value": "472"
										},
										{
											"begin": 20405,
											"end": 20470,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 20495,
											"end": 20501,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 20490,
											"end": 20493,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 20486,
											"end": 20502,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 20479,
											"end": 20502,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 20479,
											"end": 20502,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20230,
											"end": 20508,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20122,
											"end": 20508,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 20122,
											"end": 20508,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 20122,
											"end": 20508,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20122,
											"end": 20508,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20122,
											"end": 20508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 20514,
											"end": 20785,
											"name": "tag",
											"source": 21,
											"value": "133"
										},
										{
											"begin": 20514,
											"end": 20785,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 20644,
											"end": 20647,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 20666,
											"end": 20759,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "474"
										},
										{
											"begin": 20755,
											"end": 20758,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 20746,
											"end": 20752,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 20666,
											"end": 20759,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "261"
										},
										{
											"begin": 20666,
											"end": 20759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 20666,
											"end": 20759,
											"name": "tag",
											"source": 21,
											"value": "474"
										},
										{
											"begin": 20666,
											"end": 20759,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 20659,
											"end": 20759,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 20659,
											"end": 20759,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20776,
											"end": 20779,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 20769,
											"end": 20779,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 20769,
											"end": 20779,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20514,
											"end": 20785,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 20514,
											"end": 20785,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 20514,
											"end": 20785,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20514,
											"end": 20785,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20514,
											"end": 20785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 20791,
											"end": 20944,
											"name": "tag",
											"source": 21,
											"value": "262"
										},
										{
											"begin": 20791,
											"end": 20944,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 20931,
											"end": 20936,
											"name": "PUSH",
											"source": 21,
											"value": "5354450000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20927,
											"end": 20928,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 20919,
											"end": 20925,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 20915,
											"end": 20929,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 20908,
											"end": 20937,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 20791,
											"end": 20944,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20791,
											"end": 20944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 20950,
											"end": 21315,
											"name": "tag",
											"source": 21,
											"value": "263"
										},
										{
											"begin": 20950,
											"end": 21315,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21092,
											"end": 21095,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 21113,
											"end": 21179,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "477"
										},
										{
											"begin": 21177,
											"end": 21178,
											"name": "PUSH",
											"source": 21,
											"value": "3"
										},
										{
											"begin": 21172,
											"end": 21175,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 21113,
											"end": 21179,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "236"
										},
										{
											"begin": 21113,
											"end": 21179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 21113,
											"end": 21179,
											"name": "tag",
											"source": 21,
											"value": "477"
										},
										{
											"begin": 21113,
											"end": 21179,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21106,
											"end": 21179,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 21106,
											"end": 21179,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21188,
											"end": 21281,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "478"
										},
										{
											"begin": 21277,
											"end": 21280,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 21188,
											"end": 21281,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "262"
										},
										{
											"begin": 21188,
											"end": 21281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 21188,
											"end": 21281,
											"name": "tag",
											"source": 21,
											"value": "478"
										},
										{
											"begin": 21188,
											"end": 21281,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21306,
											"end": 21308,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 21301,
											"end": 21304,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 21297,
											"end": 21309,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 21290,
											"end": 21309,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 21290,
											"end": 21309,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20950,
											"end": 21315,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 20950,
											"end": 21315,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 20950,
											"end": 21315,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20950,
											"end": 21315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 21321,
											"end": 21740,
											"name": "tag",
											"source": 21,
											"value": "139"
										},
										{
											"begin": 21321,
											"end": 21740,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21487,
											"end": 21491,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 21525,
											"end": 21527,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 21514,
											"end": 21523,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 21510,
											"end": 21528,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 21502,
											"end": 21528,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 21502,
											"end": 21528,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21574,
											"end": 21583,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 21568,
											"end": 21572,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 21564,
											"end": 21584,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 21560,
											"end": 21561,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 21549,
											"end": 21558,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 21545,
											"end": 21562,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 21538,
											"end": 21585,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 21602,
											"end": 21733,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "480"
										},
										{
											"begin": 21728,
											"end": 21732,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 21602,
											"end": 21733,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "263"
										},
										{
											"begin": 21602,
											"end": 21733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 21602,
											"end": 21733,
											"name": "tag",
											"source": 21,
											"value": "480"
										},
										{
											"begin": 21602,
											"end": 21733,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21594,
											"end": 21733,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 21594,
											"end": 21733,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21321,
											"end": 21740,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 21321,
											"end": 21740,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 21321,
											"end": 21740,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21321,
											"end": 21740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 21746,
											"end": 21861,
											"name": "tag",
											"source": 21,
											"value": "264"
										},
										{
											"begin": 21746,
											"end": 21861,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21831,
											"end": 21854,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "482"
										},
										{
											"begin": 21848,
											"end": 21853,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 21831,
											"end": 21854,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "223"
										},
										{
											"begin": 21831,
											"end": 21854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 21831,
											"end": 21854,
											"name": "tag",
											"source": 21,
											"value": "482"
										},
										{
											"begin": 21831,
											"end": 21854,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21826,
											"end": 21829,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 21819,
											"end": 21855,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 21746,
											"end": 21861,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21746,
											"end": 21861,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21746,
											"end": 21861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 21867,
											"end": 22305,
											"name": "tag",
											"source": 21,
											"value": "143"
										},
										{
											"begin": 21867,
											"end": 22305,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 22014,
											"end": 22018,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 22052,
											"end": 22054,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 22041,
											"end": 22050,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 22037,
											"end": 22055,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 22029,
											"end": 22055,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 22029,
											"end": 22055,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 22065,
											"end": 22136,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "484"
										},
										{
											"begin": 22133,
											"end": 22134,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 22122,
											"end": 22131,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 22118,
											"end": 22135,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 22109,
											"end": 22115,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 22065,
											"end": 22136,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "222"
										},
										{
											"begin": 22065,
											"end": 22136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 22065,
											"end": 22136,
											"name": "tag",
											"source": 21,
											"value": "484"
										},
										{
											"begin": 22065,
											"end": 22136,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 22146,
											"end": 22218,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "485"
										},
										{
											"begin": 22214,
											"end": 22216,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 22203,
											"end": 22212,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 22199,
											"end": 22217,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 22190,
											"end": 22196,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 22146,
											"end": 22218,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "222"
										},
										{
											"begin": 22146,
											"end": 22218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 22146,
											"end": 22218,
											"name": "tag",
											"source": 21,
											"value": "485"
										},
										{
											"begin": 22146,
											"end": 22218,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 22228,
											"end": 22298,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "486"
										},
										{
											"begin": 22294,
											"end": 22296,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 22283,
											"end": 22292,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 22279,
											"end": 22297,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 22270,
											"end": 22276,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 22228,
											"end": 22298,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "264"
										},
										{
											"begin": 22228,
											"end": 22298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 22228,
											"end": 22298,
											"name": "tag",
											"source": 21,
											"value": "486"
										},
										{
											"begin": 22228,
											"end": 22298,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21867,
											"end": 22305,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 21867,
											"end": 22305,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 21867,
											"end": 22305,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21867,
											"end": 22305,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21867,
											"end": 22305,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21867,
											"end": 22305,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21867,
											"end": 22305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 22311,
											"end": 22459,
											"name": "tag",
											"source": 21,
											"value": "265"
										},
										{
											"begin": 22311,
											"end": 22459,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 22413,
											"end": 22424,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 22450,
											"end": 22453,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 22435,
											"end": 22453,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 22435,
											"end": 22453,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 22311,
											"end": 22459,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 22311,
											"end": 22459,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 22311,
											"end": 22459,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 22311,
											"end": 22459,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 22311,
											"end": 22459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 22465,
											"end": 22679,
											"name": "tag",
											"source": 21,
											"value": "266"
										},
										{
											"begin": 22465,
											"end": 22679,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 22605,
											"end": 22671,
											"name": "PUSH",
											"source": 21,
											"value": "FF00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22601,
											"end": 22602,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 22593,
											"end": 22599,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 22589,
											"end": 22603,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 22582,
											"end": 22672,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 22465,
											"end": 22679,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 22465,
											"end": 22679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 22685,
											"end": 23085,
											"name": "tag",
											"source": 21,
											"value": "267"
										},
										{
											"begin": 22685,
											"end": 23085,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 22845,
											"end": 22848,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 22866,
											"end": 22950,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "490"
										},
										{
											"begin": 22948,
											"end": 22949,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 22943,
											"end": 22946,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 22866,
											"end": 22950,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "265"
										},
										{
											"begin": 22866,
											"end": 22950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 22866,
											"end": 22950,
											"name": "tag",
											"source": 21,
											"value": "490"
										},
										{
											"begin": 22866,
											"end": 22950,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 22859,
											"end": 22950,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 22859,
											"end": 22950,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 22959,
											"end": 23052,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "491"
										},
										{
											"begin": 23048,
											"end": 23051,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 22959,
											"end": 23052,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "266"
										},
										{
											"begin": 22959,
											"end": 23052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 22959,
											"end": 23052,
											"name": "tag",
											"source": 21,
											"value": "491"
										},
										{
											"begin": 22959,
											"end": 23052,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23077,
											"end": 23078,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 23072,
											"end": 23075,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 23068,
											"end": 23079,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 23061,
											"end": 23079,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 23061,
											"end": 23079,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 22685,
											"end": 23085,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 22685,
											"end": 23085,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 22685,
											"end": 23085,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 22685,
											"end": 23085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 23091,
											"end": 23185,
											"name": "tag",
											"source": 21,
											"value": "268"
										},
										{
											"begin": 23091,
											"end": 23185,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23124,
											"end": 23132,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 23172,
											"end": 23177,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 23168,
											"end": 23170,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 23164,
											"end": 23178,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 23143,
											"end": 23178,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 23143,
											"end": 23178,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23091,
											"end": 23185,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 23091,
											"end": 23185,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 23091,
											"end": 23185,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23091,
											"end": 23185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 23191,
											"end": 23285,
											"name": "tag",
											"source": 21,
											"value": "269"
										},
										{
											"begin": 23191,
											"end": 23285,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23230,
											"end": 23237,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 23259,
											"end": 23279,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "494"
										},
										{
											"begin": 23273,
											"end": 23278,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 23259,
											"end": 23279,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "268"
										},
										{
											"begin": 23259,
											"end": 23279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 23259,
											"end": 23279,
											"name": "tag",
											"source": 21,
											"value": "494"
										},
										{
											"begin": 23259,
											"end": 23279,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23248,
											"end": 23279,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 23248,
											"end": 23279,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23191,
											"end": 23285,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 23191,
											"end": 23285,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 23191,
											"end": 23285,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23191,
											"end": 23285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 23291,
											"end": 23391,
											"name": "tag",
											"source": 21,
											"value": "270"
										},
										{
											"begin": 23291,
											"end": 23391,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23330,
											"end": 23337,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 23359,
											"end": 23385,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "496"
										},
										{
											"begin": 23379,
											"end": 23384,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 23359,
											"end": 23385,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "269"
										},
										{
											"begin": 23359,
											"end": 23385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 23359,
											"end": 23385,
											"name": "tag",
											"source": 21,
											"value": "496"
										},
										{
											"begin": 23359,
											"end": 23385,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23348,
											"end": 23385,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 23348,
											"end": 23385,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23291,
											"end": 23391,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 23291,
											"end": 23391,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 23291,
											"end": 23391,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23291,
											"end": 23391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 23397,
											"end": 23554,
											"name": "tag",
											"source": 21,
											"value": "271"
										},
										{
											"begin": 23397,
											"end": 23554,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23502,
											"end": 23547,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "498"
										},
										{
											"begin": 23522,
											"end": 23546,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "499"
										},
										{
											"begin": 23540,
											"end": 23545,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 23522,
											"end": 23546,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "219"
										},
										{
											"begin": 23522,
											"end": 23546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 23522,
											"end": 23546,
											"name": "tag",
											"source": 21,
											"value": "499"
										},
										{
											"begin": 23522,
											"end": 23546,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23502,
											"end": 23547,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "270"
										},
										{
											"begin": 23502,
											"end": 23547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 23502,
											"end": 23547,
											"name": "tag",
											"source": 21,
											"value": "498"
										},
										{
											"begin": 23502,
											"end": 23547,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23497,
											"end": 23500,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 23490,
											"end": 23548,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 23397,
											"end": 23554,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23397,
											"end": 23554,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23397,
											"end": 23554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 23560,
											"end": 23637,
											"name": "tag",
											"source": 21,
											"value": "272"
										},
										{
											"begin": 23560,
											"end": 23637,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23597,
											"end": 23604,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 23626,
											"end": 23631,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 23615,
											"end": 23631,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 23615,
											"end": 23631,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23560,
											"end": 23637,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 23560,
											"end": 23637,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 23560,
											"end": 23637,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23560,
											"end": 23637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 23643,
											"end": 23722,
											"name": "tag",
											"source": 21,
											"value": "273"
										},
										{
											"begin": 23643,
											"end": 23722,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23682,
											"end": 23689,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 23711,
											"end": 23716,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 23700,
											"end": 23716,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 23700,
											"end": 23716,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23643,
											"end": 23722,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 23643,
											"end": 23722,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 23643,
											"end": 23722,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23643,
											"end": 23722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 23728,
											"end": 23885,
											"name": "tag",
											"source": 21,
											"value": "274"
										},
										{
											"begin": 23728,
											"end": 23885,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23833,
											"end": 23878,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "503"
										},
										{
											"begin": 23853,
											"end": 23877,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "504"
										},
										{
											"begin": 23871,
											"end": 23876,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 23853,
											"end": 23877,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "272"
										},
										{
											"begin": 23853,
											"end": 23877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 23853,
											"end": 23877,
											"name": "tag",
											"source": 21,
											"value": "504"
										},
										{
											"begin": 23853,
											"end": 23877,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23833,
											"end": 23878,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "273"
										},
										{
											"begin": 23833,
											"end": 23878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 23833,
											"end": 23878,
											"name": "tag",
											"source": 21,
											"value": "503"
										},
										{
											"begin": 23833,
											"end": 23878,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23828,
											"end": 23831,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 23821,
											"end": 23879,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 23728,
											"end": 23885,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23728,
											"end": 23885,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23728,
											"end": 23885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 23891,
											"end": 24695,
											"name": "tag",
											"source": 21,
											"value": "145"
										},
										{
											"begin": 23891,
											"end": 24695,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 24160,
											"end": 24163,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 24182,
											"end": 24330,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "506"
										},
										{
											"begin": 24326,
											"end": 24329,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 24182,
											"end": 24330,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "267"
										},
										{
											"begin": 24182,
											"end": 24330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 24182,
											"end": 24330,
											"name": "tag",
											"source": 21,
											"value": "506"
										},
										{
											"begin": 24182,
											"end": 24330,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 24175,
											"end": 24330,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 24175,
											"end": 24330,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 24340,
											"end": 24415,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "507"
										},
										{
											"begin": 24411,
											"end": 24414,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 24402,
											"end": 24408,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 24340,
											"end": 24415,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "271"
										},
										{
											"begin": 24340,
											"end": 24415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 24340,
											"end": 24415,
											"name": "tag",
											"source": 21,
											"value": "507"
										},
										{
											"begin": 24340,
											"end": 24415,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 24440,
											"end": 24442,
											"name": "PUSH",
											"source": 21,
											"value": "14"
										},
										{
											"begin": 24435,
											"end": 24438,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 24431,
											"end": 24443,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 24424,
											"end": 24443,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 24424,
											"end": 24443,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 24453,
											"end": 24528,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "508"
										},
										{
											"begin": 24524,
											"end": 24527,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 24515,
											"end": 24521,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 24453,
											"end": 24528,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "274"
										},
										{
											"begin": 24453,
											"end": 24528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 24453,
											"end": 24528,
											"name": "tag",
											"source": 21,
											"value": "508"
										},
										{
											"begin": 24453,
											"end": 24528,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 24553,
											"end": 24555,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 24548,
											"end": 24551,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 24544,
											"end": 24556,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 24537,
											"end": 24556,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 24537,
											"end": 24556,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 24566,
											"end": 24641,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "509"
										},
										{
											"begin": 24637,
											"end": 24640,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 24628,
											"end": 24634,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 24566,
											"end": 24641,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "274"
										},
										{
											"begin": 24566,
											"end": 24641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 24566,
											"end": 24641,
											"name": "tag",
											"source": 21,
											"value": "509"
										},
										{
											"begin": 24566,
											"end": 24641,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 24666,
											"end": 24668,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 24661,
											"end": 24664,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 24657,
											"end": 24669,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 24650,
											"end": 24669,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 24650,
											"end": 24669,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 24686,
											"end": 24689,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 24679,
											"end": 24689,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 24679,
											"end": 24689,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23891,
											"end": 24695,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 23891,
											"end": 24695,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 23891,
											"end": 24695,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23891,
											"end": 24695,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23891,
											"end": 24695,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23891,
											"end": 24695,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23891,
											"end": 24695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 24701,
											"end": 25033,
											"name": "tag",
											"source": 21,
											"value": "148"
										},
										{
											"begin": 24701,
											"end": 25033,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 24822,
											"end": 24826,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 24860,
											"end": 24862,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 24849,
											"end": 24858,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 24845,
											"end": 24863,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 24837,
											"end": 24863,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 24837,
											"end": 24863,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 24873,
											"end": 24944,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "511"
										},
										{
											"begin": 24941,
											"end": 24942,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 24930,
											"end": 24939,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 24926,
											"end": 24943,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 24917,
											"end": 24923,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 24873,
											"end": 24944,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "222"
										},
										{
											"begin": 24873,
											"end": 24944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 24873,
											"end": 24944,
											"name": "tag",
											"source": 21,
											"value": "511"
										},
										{
											"begin": 24873,
											"end": 24944,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 24954,
											"end": 25026,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "512"
										},
										{
											"begin": 25022,
											"end": 25024,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 25011,
											"end": 25020,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 25007,
											"end": 25025,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 24998,
											"end": 25004,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 24954,
											"end": 25026,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "239"
										},
										{
											"begin": 24954,
											"end": 25026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 24954,
											"end": 25026,
											"name": "tag",
											"source": 21,
											"value": "512"
										},
										{
											"begin": 24954,
											"end": 25026,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 24701,
											"end": 25033,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 24701,
											"end": 25033,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 24701,
											"end": 25033,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 24701,
											"end": 25033,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 24701,
											"end": 25033,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 24701,
											"end": 25033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 25039,
											"end": 25129,
											"name": "tag",
											"source": 21,
											"value": "275"
										},
										{
											"begin": 25039,
											"end": 25129,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 25073,
											"end": 25080,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 25116,
											"end": 25121,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 25109,
											"end": 25122,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 25102,
											"end": 25123,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 25091,
											"end": 25123,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 25091,
											"end": 25123,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 25039,
											"end": 25129,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 25039,
											"end": 25129,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 25039,
											"end": 25129,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 25039,
											"end": 25129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 25135,
											"end": 25251,
											"name": "tag",
											"source": 21,
											"value": "276"
										},
										{
											"begin": 25135,
											"end": 25251,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 25205,
											"end": 25226,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "515"
										},
										{
											"begin": 25220,
											"end": 25225,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 25205,
											"end": 25226,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "275"
										},
										{
											"begin": 25205,
											"end": 25226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 25205,
											"end": 25226,
											"name": "tag",
											"source": 21,
											"value": "515"
										},
										{
											"begin": 25205,
											"end": 25226,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 25198,
											"end": 25203,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 25195,
											"end": 25227,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 25185,
											"end": 25245,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "516"
										},
										{
											"begin": 25185,
											"end": 25245,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 25241,
											"end": 25242,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 25238,
											"end": 25239,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 25231,
											"end": 25243,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 25185,
											"end": 25245,
											"name": "tag",
											"source": 21,
											"value": "516"
										},
										{
											"begin": 25185,
											"end": 25245,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 25135,
											"end": 25251,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 25135,
											"end": 25251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 25257,
											"end": 25394,
											"name": "tag",
											"source": 21,
											"value": "277"
										},
										{
											"begin": 25257,
											"end": 25394,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 25311,
											"end": 25316,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 25342,
											"end": 25348,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 25336,
											"end": 25349,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 25327,
											"end": 25349,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 25327,
											"end": 25349,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 25358,
											"end": 25388,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "518"
										},
										{
											"begin": 25382,
											"end": 25387,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 25358,
											"end": 25388,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "276"
										},
										{
											"begin": 25358,
											"end": 25388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 25358,
											"end": 25388,
											"name": "tag",
											"source": 21,
											"value": "518"
										},
										{
											"begin": 25358,
											"end": 25388,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 25257,
											"end": 25394,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 25257,
											"end": 25394,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 25257,
											"end": 25394,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 25257,
											"end": 25394,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 25257,
											"end": 25394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 25400,
											"end": 25745,
											"name": "tag",
											"source": 21,
											"value": "156"
										},
										{
											"begin": 25400,
											"end": 25745,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 25467,
											"end": 25473,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 25516,
											"end": 25518,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 25504,
											"end": 25513,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 25495,
											"end": 25502,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 25491,
											"end": 25514,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 25487,
											"end": 25519,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 25484,
											"end": 25603,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 25484,
											"end": 25603,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "520"
										},
										{
											"begin": 25484,
											"end": 25603,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 25522,
											"end": 25601,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "521"
										},
										{
											"begin": 25522,
											"end": 25601,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "213"
										},
										{
											"begin": 25522,
											"end": 25601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 25522,
											"end": 25601,
											"name": "tag",
											"source": 21,
											"value": "521"
										},
										{
											"begin": 25522,
											"end": 25601,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 25484,
											"end": 25603,
											"name": "tag",
											"source": 21,
											"value": "520"
										},
										{
											"begin": 25484,
											"end": 25603,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 25642,
											"end": 25643,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 25667,
											"end": 25728,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "522"
										},
										{
											"begin": 25720,
											"end": 25727,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 25711,
											"end": 25717,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 25700,
											"end": 25709,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 25696,
											"end": 25718,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 25667,
											"end": 25728,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "277"
										},
										{
											"begin": 25667,
											"end": 25728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 25667,
											"end": 25728,
											"name": "tag",
											"source": 21,
											"value": "522"
										},
										{
											"begin": 25667,
											"end": 25728,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 25657,
											"end": 25728,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 25657,
											"end": 25728,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 25613,
											"end": 25738,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 25400,
											"end": 25745,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 25400,
											"end": 25745,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 25400,
											"end": 25745,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 25400,
											"end": 25745,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 25400,
											"end": 25745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 25751,
											"end": 25903,
											"name": "tag",
											"source": 21,
											"value": "278"
										},
										{
											"begin": 25751,
											"end": 25903,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 25891,
											"end": 25895,
											"name": "PUSH",
											"source": 21,
											"value": "5354000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25887,
											"end": 25888,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 25879,
											"end": 25885,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 25875,
											"end": 25889,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 25868,
											"end": 25896,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 25751,
											"end": 25903,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 25751,
											"end": 25903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 25909,
											"end": 26274,
											"name": "tag",
											"source": 21,
											"value": "279"
										},
										{
											"begin": 25909,
											"end": 26274,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 26051,
											"end": 26054,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 26072,
											"end": 26138,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "525"
										},
										{
											"begin": 26136,
											"end": 26137,
											"name": "PUSH",
											"source": 21,
											"value": "2"
										},
										{
											"begin": 26131,
											"end": 26134,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 26072,
											"end": 26138,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "236"
										},
										{
											"begin": 26072,
											"end": 26138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 26072,
											"end": 26138,
											"name": "tag",
											"source": 21,
											"value": "525"
										},
										{
											"begin": 26072,
											"end": 26138,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 26065,
											"end": 26138,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 26065,
											"end": 26138,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 26147,
											"end": 26240,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "526"
										},
										{
											"begin": 26236,
											"end": 26239,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 26147,
											"end": 26240,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "278"
										},
										{
											"begin": 26147,
											"end": 26240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 26147,
											"end": 26240,
											"name": "tag",
											"source": 21,
											"value": "526"
										},
										{
											"begin": 26147,
											"end": 26240,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 26265,
											"end": 26267,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 26260,
											"end": 26263,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 26256,
											"end": 26268,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 26249,
											"end": 26268,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 26249,
											"end": 26268,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 25909,
											"end": 26274,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 25909,
											"end": 26274,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 25909,
											"end": 26274,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 25909,
											"end": 26274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 26280,
											"end": 26699,
											"name": "tag",
											"source": 21,
											"value": "159"
										},
										{
											"begin": 26280,
											"end": 26699,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 26446,
											"end": 26450,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 26484,
											"end": 26486,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 26473,
											"end": 26482,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 26469,
											"end": 26487,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 26461,
											"end": 26487,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 26461,
											"end": 26487,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 26533,
											"end": 26542,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 26527,
											"end": 26531,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 26523,
											"end": 26543,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 26519,
											"end": 26520,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 26508,
											"end": 26517,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 26504,
											"end": 26521,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 26497,
											"end": 26544,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 26561,
											"end": 26692,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "528"
										},
										{
											"begin": 26687,
											"end": 26691,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 26561,
											"end": 26692,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "279"
										},
										{
											"begin": 26561,
											"end": 26692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 26561,
											"end": 26692,
											"name": "tag",
											"source": 21,
											"value": "528"
										},
										{
											"begin": 26561,
											"end": 26692,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 26553,
											"end": 26692,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 26553,
											"end": 26692,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 26280,
											"end": 26699,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 26280,
											"end": 26699,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 26280,
											"end": 26699,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 26280,
											"end": 26699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 26705,
											"end": 26857,
											"name": "tag",
											"source": 21,
											"value": "280"
										},
										{
											"begin": 26705,
											"end": 26857,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 26845,
											"end": 26849,
											"name": "PUSH",
											"source": 21,
											"value": "5341000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26841,
											"end": 26842,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 26833,
											"end": 26839,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 26829,
											"end": 26843,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 26822,
											"end": 26850,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 26705,
											"end": 26857,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 26705,
											"end": 26857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 26863,
											"end": 27228,
											"name": "tag",
											"source": 21,
											"value": "281"
										},
										{
											"begin": 26863,
											"end": 27228,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 27005,
											"end": 27008,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 27026,
											"end": 27092,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "531"
										},
										{
											"begin": 27090,
											"end": 27091,
											"name": "PUSH",
											"source": 21,
											"value": "2"
										},
										{
											"begin": 27085,
											"end": 27088,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 27026,
											"end": 27092,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "236"
										},
										{
											"begin": 27026,
											"end": 27092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 27026,
											"end": 27092,
											"name": "tag",
											"source": 21,
											"value": "531"
										},
										{
											"begin": 27026,
											"end": 27092,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 27019,
											"end": 27092,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 27019,
											"end": 27092,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 27101,
											"end": 27194,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "532"
										},
										{
											"begin": 27190,
											"end": 27193,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 27101,
											"end": 27194,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "280"
										},
										{
											"begin": 27101,
											"end": 27194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 27101,
											"end": 27194,
											"name": "tag",
											"source": 21,
											"value": "532"
										},
										{
											"begin": 27101,
											"end": 27194,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 27219,
											"end": 27221,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 27214,
											"end": 27217,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 27210,
											"end": 27222,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 27203,
											"end": 27222,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 27203,
											"end": 27222,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 26863,
											"end": 27228,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 26863,
											"end": 27228,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 26863,
											"end": 27228,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 26863,
											"end": 27228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 27234,
											"end": 27653,
											"name": "tag",
											"source": 21,
											"value": "174"
										},
										{
											"begin": 27234,
											"end": 27653,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 27400,
											"end": 27404,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 27438,
											"end": 27440,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 27427,
											"end": 27436,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 27423,
											"end": 27441,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 27415,
											"end": 27441,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 27415,
											"end": 27441,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 27487,
											"end": 27496,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 27481,
											"end": 27485,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 27477,
											"end": 27497,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 27473,
											"end": 27474,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 27462,
											"end": 27471,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 27458,
											"end": 27475,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 27451,
											"end": 27498,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 27515,
											"end": 27646,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "534"
										},
										{
											"begin": 27641,
											"end": 27645,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 27515,
											"end": 27646,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "281"
										},
										{
											"begin": 27515,
											"end": 27646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 27515,
											"end": 27646,
											"name": "tag",
											"source": 21,
											"value": "534"
										},
										{
											"begin": 27515,
											"end": 27646,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 27507,
											"end": 27646,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 27507,
											"end": 27646,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 27234,
											"end": 27653,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 27234,
											"end": 27653,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 27234,
											"end": 27653,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 27234,
											"end": 27653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 27659,
											"end": 27839,
											"name": "tag",
											"source": 21,
											"value": "282"
										},
										{
											"begin": 27659,
											"end": 27839,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 27707,
											"end": 27784,
											"name": "PUSH",
											"source": 21,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27704,
											"end": 27705,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 27697,
											"end": 27785,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 27804,
											"end": 27808,
											"name": "PUSH",
											"source": 21,
											"value": "11"
										},
										{
											"begin": 27801,
											"end": 27802,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 27794,
											"end": 27809,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 27828,
											"end": 27832,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 27825,
											"end": 27826,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 27818,
											"end": 27833,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 27845,
											"end": 28036,
											"name": "tag",
											"source": 21,
											"value": "177"
										},
										{
											"begin": 27845,
											"end": 28036,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 27885,
											"end": 27888,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 27904,
											"end": 27924,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "537"
										},
										{
											"begin": 27922,
											"end": 27923,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 27904,
											"end": 27924,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "215"
										},
										{
											"begin": 27904,
											"end": 27924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 27904,
											"end": 27924,
											"name": "tag",
											"source": 21,
											"value": "537"
										},
										{
											"begin": 27904,
											"end": 27924,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 27899,
											"end": 27924,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 27899,
											"end": 27924,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 27938,
											"end": 27958,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "538"
										},
										{
											"begin": 27956,
											"end": 27957,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 27938,
											"end": 27958,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "215"
										},
										{
											"begin": 27938,
											"end": 27958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 27938,
											"end": 27958,
											"name": "tag",
											"source": 21,
											"value": "538"
										},
										{
											"begin": 27938,
											"end": 27958,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 27933,
											"end": 27958,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 27933,
											"end": 27958,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 27981,
											"end": 27982,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 27978,
											"end": 27979,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 27974,
											"end": 27983,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 27967,
											"end": 27983,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 27967,
											"end": 27983,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 28002,
											"end": 28005,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 27999,
											"end": 28000,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 27996,
											"end": 28006,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 27993,
											"end": 28029,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 27993,
											"end": 28029,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "539"
										},
										{
											"begin": 27993,
											"end": 28029,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 28009,
											"end": 28027,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "540"
										},
										{
											"begin": 28009,
											"end": 28027,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "282"
										},
										{
											"begin": 28009,
											"end": 28027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 28009,
											"end": 28027,
											"name": "tag",
											"source": 21,
											"value": "540"
										},
										{
											"begin": 28009,
											"end": 28027,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 27993,
											"end": 28029,
											"name": "tag",
											"source": 21,
											"value": "539"
										},
										{
											"begin": 27993,
											"end": 28029,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 27845,
											"end": 28036,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 27845,
											"end": 28036,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 27845,
											"end": 28036,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 27845,
											"end": 28036,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 27845,
											"end": 28036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 28042,
											"end": 28236,
											"name": "tag",
											"source": 21,
											"value": "197"
										},
										{
											"begin": 28042,
											"end": 28236,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 28082,
											"end": 28086,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 28102,
											"end": 28122,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "542"
										},
										{
											"begin": 28120,
											"end": 28121,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 28102,
											"end": 28122,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "215"
										},
										{
											"begin": 28102,
											"end": 28122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 28102,
											"end": 28122,
											"name": "tag",
											"source": 21,
											"value": "542"
										},
										{
											"begin": 28102,
											"end": 28122,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 28097,
											"end": 28122,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 28097,
											"end": 28122,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 28136,
											"end": 28156,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "543"
										},
										{
											"begin": 28154,
											"end": 28155,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 28136,
											"end": 28156,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "215"
										},
										{
											"begin": 28136,
											"end": 28156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 28136,
											"end": 28156,
											"name": "tag",
											"source": 21,
											"value": "543"
										},
										{
											"begin": 28136,
											"end": 28156,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 28131,
											"end": 28156,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 28131,
											"end": 28156,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 28180,
											"end": 28181,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 28177,
											"end": 28178,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 28173,
											"end": 28182,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 28165,
											"end": 28182,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 28165,
											"end": 28182,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 28204,
											"end": 28205,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 28198,
											"end": 28202,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 28195,
											"end": 28206,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 28192,
											"end": 28229,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 28192,
											"end": 28229,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "544"
										},
										{
											"begin": 28192,
											"end": 28229,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 28209,
											"end": 28227,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "545"
										},
										{
											"begin": 28209,
											"end": 28227,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "282"
										},
										{
											"begin": 28209,
											"end": 28227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 28209,
											"end": 28227,
											"name": "tag",
											"source": 21,
											"value": "545"
										},
										{
											"begin": 28209,
											"end": 28227,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 28192,
											"end": 28229,
											"name": "tag",
											"source": 21,
											"value": "544"
										},
										{
											"begin": 28192,
											"end": 28229,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 28042,
											"end": 28236,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 28042,
											"end": 28236,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 28042,
											"end": 28236,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 28042,
											"end": 28236,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 28042,
											"end": 28236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 28242,
											"end": 28684,
											"name": "tag",
											"source": 21,
											"value": "201"
										},
										{
											"begin": 28242,
											"end": 28684,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 28391,
											"end": 28395,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 28429,
											"end": 28431,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 28418,
											"end": 28427,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 28414,
											"end": 28432,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 28406,
											"end": 28432,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 28406,
											"end": 28432,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 28442,
											"end": 28513,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "547"
										},
										{
											"begin": 28510,
											"end": 28511,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 28499,
											"end": 28508,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 28495,
											"end": 28512,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 28486,
											"end": 28492,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 28442,
											"end": 28513,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "222"
										},
										{
											"begin": 28442,
											"end": 28513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 28442,
											"end": 28513,
											"name": "tag",
											"source": 21,
											"value": "547"
										},
										{
											"begin": 28442,
											"end": 28513,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 28523,
											"end": 28595,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "548"
										},
										{
											"begin": 28591,
											"end": 28593,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 28580,
											"end": 28589,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 28576,
											"end": 28594,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 28567,
											"end": 28573,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 28523,
											"end": 28595,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "222"
										},
										{
											"begin": 28523,
											"end": 28595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 28523,
											"end": 28595,
											"name": "tag",
											"source": 21,
											"value": "548"
										},
										{
											"begin": 28523,
											"end": 28595,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 28605,
											"end": 28677,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "549"
										},
										{
											"begin": 28673,
											"end": 28675,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 28662,
											"end": 28671,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 28658,
											"end": 28676,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 28649,
											"end": 28655,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 28605,
											"end": 28677,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "239"
										},
										{
											"begin": 28605,
											"end": 28677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 28605,
											"end": 28677,
											"name": "tag",
											"source": 21,
											"value": "549"
										},
										{
											"begin": 28605,
											"end": 28677,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 28242,
											"end": 28684,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 28242,
											"end": 28684,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 28242,
											"end": 28684,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 28242,
											"end": 28684,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 28242,
											"end": 28684,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 28242,
											"end": 28684,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 28242,
											"end": 28684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 28690,
											"end": 28843,
											"name": "tag",
											"source": 21,
											"value": "283"
										},
										{
											"begin": 28690,
											"end": 28843,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 28830,
											"end": 28835,
											"name": "PUSH",
											"source": 21,
											"value": "5354460000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28826,
											"end": 28827,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 28818,
											"end": 28824,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 28814,
											"end": 28828,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 28807,
											"end": 28836,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 28690,
											"end": 28843,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 28690,
											"end": 28843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 28849,
											"end": 29214,
											"name": "tag",
											"source": 21,
											"value": "284"
										},
										{
											"begin": 28849,
											"end": 29214,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 28991,
											"end": 28994,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 29012,
											"end": 29078,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "552"
										},
										{
											"begin": 29076,
											"end": 29077,
											"name": "PUSH",
											"source": 21,
											"value": "3"
										},
										{
											"begin": 29071,
											"end": 29074,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 29012,
											"end": 29078,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "236"
										},
										{
											"begin": 29012,
											"end": 29078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 29012,
											"end": 29078,
											"name": "tag",
											"source": 21,
											"value": "552"
										},
										{
											"begin": 29012,
											"end": 29078,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 29005,
											"end": 29078,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 29005,
											"end": 29078,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 29087,
											"end": 29180,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "553"
										},
										{
											"begin": 29176,
											"end": 29179,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 29087,
											"end": 29180,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "283"
										},
										{
											"begin": 29087,
											"end": 29180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 29087,
											"end": 29180,
											"name": "tag",
											"source": 21,
											"value": "553"
										},
										{
											"begin": 29087,
											"end": 29180,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 29205,
											"end": 29207,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 29200,
											"end": 29203,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 29196,
											"end": 29208,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 29189,
											"end": 29208,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 29189,
											"end": 29208,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 28849,
											"end": 29214,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 28849,
											"end": 29214,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 28849,
											"end": 29214,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 28849,
											"end": 29214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 29220,
											"end": 29639,
											"name": "tag",
											"source": 21,
											"value": "211"
										},
										{
											"begin": 29220,
											"end": 29639,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 29386,
											"end": 29390,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 29424,
											"end": 29426,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 29413,
											"end": 29422,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 29409,
											"end": 29427,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 29401,
											"end": 29427,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 29401,
											"end": 29427,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 29473,
											"end": 29482,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 29467,
											"end": 29471,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 29463,
											"end": 29483,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 29459,
											"end": 29460,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 29448,
											"end": 29457,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 29444,
											"end": 29461,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 29437,
											"end": 29484,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 29501,
											"end": 29632,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "555"
										},
										{
											"begin": 29627,
											"end": 29631,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 29501,
											"end": 29632,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "284"
										},
										{
											"begin": 29501,
											"end": 29632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 29501,
											"end": 29632,
											"name": "tag",
											"source": 21,
											"value": "555"
										},
										{
											"begin": 29501,
											"end": 29632,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 29493,
											"end": 29632,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 29493,
											"end": 29632,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 29220,
											"end": 29639,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 29220,
											"end": 29639,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 29220,
											"end": 29639,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 29220,
											"end": 29639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol",
								"contracts_rename/FlashLoan.sol",
								"contracts_rename/interfaces/CustomCustomTransferHelper.sol",
								"contracts_rename/interfaces/IPeripheryImmutableState.sol",
								"contracts_rename/interfaces/IPeripheryPayments.sol",
								"contracts_rename/interfaces/ISwapRouter.sol",
								"contracts_rename/interfaces/IUniswapV3FlashCallback.sol",
								"contracts_rename/interfaces/IUniswapV3SwapCallback.sol",
								"contracts_rename/interfaces/IWETH9.sol",
								"contracts_rename/interfaces/PeripheryImmutableState.sol",
								"contracts_rename/interfaces/PeripheryPayments.sol",
								"contracts_rename/libraries/CallbackValidation.sol",
								"contracts_rename/libraries/PoolAddress.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"factory()": "c45a0155",
							"initFlash(address,address,uint24,uint256,uint256,uint24,uint24)": "833263e6",
							"refundETH()": "12210e8a",
							"swapRouter()": "c31c9c07",
							"sweepToken(address,uint256,address)": "df2ab5bb",
							"uniswapV3FlashCallback(uint256,uint256,bytes)": "e9cbafb0",
							"unwrapWETH9(uint256,address)": "49404b7c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"_swapRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH9\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee1\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee2\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"fee3\",\"type\":\"uint24\"}],\"name\":\"initFlash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3FlashCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"uniswapV3FlashCallback(uint256,uint256,bytes)\":{\"details\":\"fails if the flash is not profitable, meaning the amountOut from the flash is less than the amount borrowed\",\"params\":{\"data\":\"The data needed in the callback passed as FlashCallbackData from `initFlash`\",\"fee0\":\"The fee from calling flash for token0\",\"fee1\":\"The fee from calling flash for token1\"}},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}}},\"title\":\"Flash contract implementation\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"uniswapV3FlashCallback(uint256,uint256,bytes)\":{\"notice\":\"implements the callback called from flash\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"}},\"notice\":\"An example contract using the Uniswap V3 flash function\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts_rename/FlashLoan.sol\":\"FlashLoan\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\":{\"keccak256\":\"0x86715eb960f18e01ac94e3bba4614ed51a887fa3c5bd1c43bf80aa98e019cf2d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfc1d5d58e59015086b0e65a6c3a2ddad312e2350480510f6c0c8167f3d71a37\",\"dweb:/ipfs/QmQndULYjFsHKHjMAKLMfc12vWbVB5FawtioHtvwcWRJZp\"]},\"contracts_rename/FlashLoan.sol\":{\"keccak256\":\"0x1115400f8d7f9a8022450ff6382a3e1ce8105e73e2331fb9d45c1cf9329629f0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5393d84b344bf3a8521a9a84c2a104f1932e923d9af6ea75f6b9bfd2f53e0b9d\",\"dweb:/ipfs/QmbWuy62g1Um4hjPWpLNjsHTNoRH1NG2DaRMMBaFXqVdx1\"]},\"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":{\"keccak256\":\"0x28b9c72b1338a1260f363a9e683ea751c29daf517d91993f5b38f210301a09b1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cad4d350e4c3dd6b4a78e764b95afa6b411aa3ee7e856a164d59aa3303ef89fc\",\"dweb:/ipfs/QmPcLkKL6WAHWfWok4VYVBMXHVDbPvE4DCV5R73R4jbsWm\"]},\"contracts_rename/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0xe5f274fc59251356fdcddad58c3927c3b156301f13c98424ea37ed39af3fa6da\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://55a46b99e05de3af2e18e648b4a70eee6186ba1bfe48e76141137ee7c629ed1c\",\"dweb:/ipfs/QmckEaF9umbtegxEAZZKPJ9JkgZQsC2kz9QK7upavtKoRp\"]},\"contracts_rename/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0x8e0cdb6280728619c44a8220996512b81e85f6fa7bc5373db742ea953a81eda8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f0748123e32874d0e1e405a463fafcf98f686fac0055da2e13bfdaa0db917766\",\"dweb:/ipfs/QmRZPF69X1e6T3yT2z8HTgzEtXHTVScqzoEMbfvp5Niggq\"]},\"contracts_rename/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x3e60d1bec793a83ba7506cfc52ceed6a22069289b190522ea534531f1c0d27dd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://78eec170ac118d238b166d74e794a2d8263efb9308aaeda9ebb28d1b581674e9\",\"dweb:/ipfs/QmUj5KNFJrTy7rcsPbfFUbex7cfUkuY3BcGe7rhgYmuykQ\"]},\"contracts_rename/interfaces/IUniswapV3FlashCallback.sol\":{\"keccak256\":\"0x3bb3bd0d45e438e9c9222e633affeb2f708fa60c9d25bb59ed1dbea73be8f6e0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d2da5814b9acbc2ea6c07d663b05b9b9e5e323ba125250aeae66f61d2f41176c\",\"dweb:/ipfs/QmQM6ekTRV9B2xzG9EfWACb3Z4aTGmbHs7QUsj9LGBn16J\"]},\"contracts_rename/interfaces/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x013cc701717e28b2f5bd92d7a7729f68925afb11a1e8128e1c8aa36be8c9578f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bc4de4e039a32dc739c5200ec1d685458cd542169350bb212c8954dfd3bace27\",\"dweb:/ipfs/QmZCq4SeDZ31wTkQkU3jQHN2NrZUw26QG5WbRWTbDm8995\"]},\"contracts_rename/interfaces/IWETH9.sol\":{\"keccak256\":\"0x720871f2fd9edf1116935a82b8cf2b6c279a65d237822575c8683f0f9d6129fd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://72239dfdab87e15dfe276c7ee55a76ab7b64a829300d7e6317584f2b25d36c12\",\"dweb:/ipfs/QmWoe4WmWq1Z3cqmiro4BZ8z3MbKjWXSBo5Ywx8rKft8tv\"]},\"contracts_rename/interfaces/PeripheryImmutableState.sol\":{\"keccak256\":\"0x5372005eea557df2ca94091e38789a7207363d0f1974d9c212714c8575b9603e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://02937e4060985bd9f920a18f8a692ea21a603552c6851732079447e4c5a5f1ab\",\"dweb:/ipfs/QmXBnDSKtYBmbCjqh2n7DzPYXrMKpMg4eEoB978raAnmmr\"]},\"contracts_rename/interfaces/PeripheryPayments.sol\":{\"keccak256\":\"0x58c458f1f6a71627c621d49a8826d8094c62721ea660d1b3dcdd966eb0edeb66\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://071617d3e983d92a03da738bc65aa232f346bdc7f54830c91ba55f614ca3459a\",\"dweb:/ipfs/QmVCd1YbkmSxiJnVkFrjb4zeugQWRuwQB6QzvjnJzj8MBg\"]},\"contracts_rename/libraries/CallbackValidation.sol\":{\"keccak256\":\"0xaf55d873b07516317a89b7c02d82857c2bd8f7b5f96027a1a7fa814ccaeeebe9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://52f9f83efbc4d08de149c6212ea6f4f9821eb43898e097d06f2ef21ca6f07716\",\"dweb:/ipfs/QmRSfCNS2NPxXhQtjAcs2xXuAVzPNYLqA6YYtJwbghwA7h\"]},\"contracts_rename/libraries/PoolAddress.sol\":{\"keccak256\":\"0x741b5bbbb61f4836c0a09e199b856a0a15dc01deff8ad127e54aacd970a01060\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c28f36044ced42f9b626fe6e7992c4252b978b5bbe7f55c4d2912a24e837bbd7\",\"dweb:/ipfs/QmUdbNihNv2KRq2qccAzJYdzRqxbYtFHqnhHXP4hRE2EaN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"refundETH()": {
								"notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
							},
							"sweepToken(address,uint256,address)": {
								"notice": "Transfers the full amount of a token held by this contract to recipient"
							},
							"uniswapV3FlashCallback(uint256,uint256,bytes)": {
								"notice": "implements the callback called from flash"
							},
							"unwrapWETH9(uint256,address)": {
								"notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH."
							}
						},
						"notice": "An example contract using the Uniswap V3 flash function",
						"version": 1
					}
				}
			},
			"contracts_rename/interfaces/CustomCustomTransferHelper.sol": {
				"CustomTransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":134:2602  library CustomTransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":134:2602  library CustomTransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f72fdff685c4e6f4a4cb6e519eb9c28b2c913c5929aff4a3b42e1d65e80fc3ff64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f72fdff685c4e6f4a4cb6e519eb9c28b2c913c5929aff4a3b42e1d65e80fc3ff64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0x2F 0xDF 0xF6 DUP6 0xC4 0xE6 DELEGATECALL LOG4 0xCB PUSH15 0x519EB9C28B2C913C5929AFF4A3B42E SAR PUSH6 0xE80FC3FF6473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "134:2468:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f72fdff685c4e6f4a4cb6e519eb9c28b2c913c5929aff4a3b42e1d65e80fc3ff64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0x2F 0xDF 0xF6 DUP6 0xC4 0xE6 DELEGATECALL LOG4 0xCB PUSH15 0x519EB9C28B2C913C5929AFF4A3B42E SAR PUSH6 0xE80FC3FF6473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "134:2468:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 134,
									"end": 2602,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 2602,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 2602,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 134,
									"end": 2602,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 134,
									"end": 2602,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 134,
									"end": 2602,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 134,
									"end": 2602,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 134,
									"end": 2602,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 134,
									"end": 2602,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 134,
									"end": 2602,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 2602,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 134,
									"end": 2602,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 2602,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 134,
									"end": 2602,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 2602,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 134,
									"end": 2602,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 2602,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 2602,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 134,
									"end": 2602,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 2602,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 134,
									"end": 2602,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 134,
									"end": 2602,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 134,
									"end": 2602,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 2602,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 134,
									"end": 2602,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 2602,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 134,
									"end": 2602,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 134,
									"end": 2602,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 2602,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 134,
									"end": 2602,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 2602,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 134,
									"end": 2602,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 134,
									"end": 2602,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 134,
									"end": 2602,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 134,
									"end": 2602,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f72fdff685c4e6f4a4cb6e519eb9c28b2c913c5929aff4a3b42e1d65e80fc3ff64736f6c63430008140033",
									".code": [
										{
											"begin": 134,
											"end": 2602,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 134,
											"end": 2602,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 134,
											"end": 2602,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 134,
											"end": 2602,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 134,
											"end": 2602,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 134,
											"end": 2602,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 134,
											"end": 2602,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 2602,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 134,
											"end": 2602,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol",
								"contracts_rename/FlashLoan.sol",
								"contracts_rename/interfaces/CustomCustomTransferHelper.sol",
								"contracts_rename/interfaces/IPeripheryImmutableState.sol",
								"contracts_rename/interfaces/IPeripheryPayments.sol",
								"contracts_rename/interfaces/ISwapRouter.sol",
								"contracts_rename/interfaces/IUniswapV3FlashCallback.sol",
								"contracts_rename/interfaces/IUniswapV3SwapCallback.sol",
								"contracts_rename/interfaces/IWETH9.sol",
								"contracts_rename/interfaces/PeripheryImmutableState.sol",
								"contracts_rename/interfaces/PeripheryPayments.sol",
								"contracts_rename/libraries/CallbackValidation.sol",
								"contracts_rename/libraries/PoolAddress.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":\"CustomTransferHelper\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":{\"keccak256\":\"0x28b9c72b1338a1260f363a9e683ea751c29daf517d91993f5b38f210301a09b1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cad4d350e4c3dd6b4a78e764b95afa6b411aa3ee7e856a164d59aa3303ef89fc\",\"dweb:/ipfs/QmPcLkKL6WAHWfWok4VYVBMXHVDbPvE4DCV5R73R4jbsWm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts_rename/interfaces/IPeripheryImmutableState.sol": {
				"IPeripheryImmutableState": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"WETH9()": {
								"returns": {
									"_0": "Returns the address of WETH9"
								}
							},
							"factory()": {
								"returns": {
									"_0": "Returns the address of the Uniswap V3 factory"
								}
							}
						},
						"title": "Immutable state",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"factory()": "c45a0155"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"WETH9()\":{\"returns\":{\"_0\":\"Returns the address of WETH9\"}},\"factory()\":{\"returns\":{\"_0\":\"Returns the address of the Uniswap V3 factory\"}}},\"title\":\"Immutable state\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Functions that return immutable state of the router\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts_rename/interfaces/IPeripheryImmutableState.sol\":\"IPeripheryImmutableState\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts_rename/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0xe5f274fc59251356fdcddad58c3927c3b156301f13c98424ea37ed39af3fa6da\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://55a46b99e05de3af2e18e648b4a70eee6186ba1bfe48e76141137ee7c629ed1c\",\"dweb:/ipfs/QmckEaF9umbtegxEAZZKPJ9JkgZQsC2kz9QK7upavtKoRp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Functions that return immutable state of the router",
						"version": 1
					}
				}
			},
			"contracts_rename/interfaces/IPeripheryPayments.sol": {
				"IPeripheryPayments": {
					"abi": [
						{
							"inputs": [],
							"name": "refundETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "sweepToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "unwrapWETH9",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"refundETH()": {
								"details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"
							},
							"sweepToken(address,uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
								"params": {
									"amountMinimum": "The minimum amount of token required for a transfer",
									"recipient": "The destination address of the token",
									"token": "The contract address of the token which will be transferred to `recipient`"
								}
							},
							"unwrapWETH9(uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
								"params": {
									"amountMinimum": "The minimum amount of WETH9 to unwrap",
									"recipient": "The address receiving ETH"
								}
							}
						},
						"title": "Periphery Payments",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"refundETH()": "12210e8a",
							"sweepToken(address,uint256,address)": "df2ab5bb",
							"unwrapWETH9(uint256,address)": "49404b7c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}}},\"title\":\"Periphery Payments\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"}},\"notice\":\"Functions to ease deposits and withdrawals of ETH\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts_rename/interfaces/IPeripheryPayments.sol\":\"IPeripheryPayments\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts_rename/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0x8e0cdb6280728619c44a8220996512b81e85f6fa7bc5373db742ea953a81eda8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f0748123e32874d0e1e405a463fafcf98f686fac0055da2e13bfdaa0db917766\",\"dweb:/ipfs/QmRZPF69X1e6T3yT2z8HTgzEtXHTVScqzoEMbfvp5Niggq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"refundETH()": {
								"notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
							},
							"sweepToken(address,uint256,address)": {
								"notice": "Transfers the full amount of a token held by this contract to recipient"
							},
							"unwrapWETH9(uint256,address)": {
								"notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH."
							}
						},
						"notice": "Functions to ease deposits and withdrawals of ETH",
						"version": 1
					}
				}
			},
			"contracts_rename/interfaces/ISwapRouter.sol": {
				"ISwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts_rename/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts_rename/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x3e60d1bec793a83ba7506cfc52ceed6a22069289b190522ea534531f1c0d27dd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://78eec170ac118d238b166d74e794a2d8263efb9308aaeda9ebb28d1b581674e9\",\"dweb:/ipfs/QmUj5KNFJrTy7rcsPbfFUbex7cfUkuY3BcGe7rhgYmuykQ\"]},\"contracts_rename/interfaces/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x013cc701717e28b2f5bd92d7a7729f68925afb11a1e8128e1c8aa36be8c9578f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bc4de4e039a32dc739c5200ec1d685458cd542169350bb212c8954dfd3bace27\",\"dweb:/ipfs/QmZCq4SeDZ31wTkQkU3jQHN2NrZUw26QG5WbRWTbDm8995\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			},
			"contracts_rename/interfaces/IUniswapV3FlashCallback.sol": {
				"IUniswapV3FlashCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "fee0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "fee1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3FlashCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3FlashCallback(uint256,uint256,bytes)": {
								"details": "In the implementation you must repay the pool the tokens sent by flash plus the computed fee amounts. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.",
								"params": {
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#flash call",
									"fee0": "The fee amount in token0 due to the pool by the end of the flash",
									"fee1": "The fee amount in token1 due to the pool by the end of the flash"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#flash",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3FlashCallback(uint256,uint256,bytes)": "e9cbafb0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3FlashCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3FlashCallback(uint256,uint256,bytes)\":{\"details\":\"In the implementation you must repay the pool the tokens sent by flash plus the computed fee amounts. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\",\"params\":{\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#flash call\",\"fee0\":\"The fee amount in token0 due to the pool by the end of the flash\",\"fee1\":\"The fee amount in token1 due to the pool by the end of the flash\"}}},\"title\":\"Callback for IUniswapV3PoolActions#flash\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3FlashCallback(uint256,uint256,bytes)\":{\"notice\":\"Called to `msg.sender` after transferring to the recipient from IUniswapV3Pool#flash.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#flash must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts_rename/interfaces/IUniswapV3FlashCallback.sol\":\"IUniswapV3FlashCallback\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts_rename/interfaces/IUniswapV3FlashCallback.sol\":{\"keccak256\":\"0x3bb3bd0d45e438e9c9222e633affeb2f708fa60c9d25bb59ed1dbea73be8f6e0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d2da5814b9acbc2ea6c07d663b05b9b9e5e323ba125250aeae66f61d2f41176c\",\"dweb:/ipfs/QmQM6ekTRV9B2xzG9EfWACb3Z4aTGmbHs7QUsj9LGBn16J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3FlashCallback(uint256,uint256,bytes)": {
								"notice": "Called to `msg.sender` after transferring to the recipient from IUniswapV3Pool#flash."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#flash must implement this interface",
						"version": 1
					}
				}
			},
			"contracts_rename/interfaces/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts_rename/interfaces/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts_rename/interfaces/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x013cc701717e28b2f5bd92d7a7729f68925afb11a1e8128e1c8aa36be8c9578f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bc4de4e039a32dc739c5200ec1d685458cd542169350bb212c8954dfd3bace27\",\"dweb:/ipfs/QmZCq4SeDZ31wTkQkU3jQHN2NrZUw26QG5WbRWTbDm8995\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"contracts_rename/interfaces/IWETH9.sol": {
				"IWETH9": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"title": "Interface for WETH9",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"deposit()": "d0e30db0",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"title\":\"Interface for WETH9\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit()\":{\"notice\":\"Deposit ether to get wrapped ether\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw wrapped ether to get ether\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts_rename/interfaces/IWETH9.sol\":\"IWETH9\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"contracts_rename/interfaces/IWETH9.sol\":{\"keccak256\":\"0x720871f2fd9edf1116935a82b8cf2b6c279a65d237822575c8683f0f9d6129fd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://72239dfdab87e15dfe276c7ee55a76ab7b64a829300d7e6317584f2b25d36c12\",\"dweb:/ipfs/QmWoe4WmWq1Z3cqmiro4BZ8z3MbKjWXSBo5Ywx8rKft8tv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"deposit()": {
								"notice": "Deposit ether to get wrapped ether"
							},
							"withdraw(uint256)": {
								"notice": "Withdraw wrapped ether to get ether"
							}
						},
						"version": 1
					}
				}
			},
			"contracts_rename/interfaces/PeripheryImmutableState.sol": {
				"PeripheryImmutableState": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"WETH9": {
								"return": "Returns the address of WETH9",
								"returns": {
									"_0": "Returns the address of WETH9"
								}
							},
							"factory": {
								"return": "Returns the address of the Uniswap V3 factory",
								"returns": {
									"_0": "Returns the address of the Uniswap V3 factory"
								}
							}
						},
						"title": "Immutable state",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"factory()": "c45a0155"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"WETH9\":{\"return\":\"Returns the address of WETH9\",\"returns\":{\"_0\":\"Returns the address of WETH9\"}},\"factory\":{\"return\":\"Returns the address of the Uniswap V3 factory\",\"returns\":{\"_0\":\"Returns the address of the Uniswap V3 factory\"}}},\"title\":\"Immutable state\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Immutable state used by periphery contracts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts_rename/interfaces/PeripheryImmutableState.sol\":\"PeripheryImmutableState\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts_rename/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0xe5f274fc59251356fdcddad58c3927c3b156301f13c98424ea37ed39af3fa6da\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://55a46b99e05de3af2e18e648b4a70eee6186ba1bfe48e76141137ee7c629ed1c\",\"dweb:/ipfs/QmckEaF9umbtegxEAZZKPJ9JkgZQsC2kz9QK7upavtKoRp\"]},\"contracts_rename/interfaces/PeripheryImmutableState.sol\":{\"keccak256\":\"0x5372005eea557df2ca94091e38789a7207363d0f1974d9c212714c8575b9603e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://02937e4060985bd9f920a18f8a692ea21a603552c6851732079447e4c5a5f1ab\",\"dweb:/ipfs/QmXBnDSKtYBmbCjqh2n7DzPYXrMKpMg4eEoB978raAnmmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Immutable state used by periphery contracts",
						"version": 1
					}
				}
			},
			"contracts_rename/interfaces/PeripheryPayments.sol": {
				"PeripheryPayments": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "refundETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "sweepToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "unwrapWETH9",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"refundETH()": {
								"details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"
							},
							"sweepToken(address,uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
								"params": {
									"amountMinimum": "The minimum amount of token required for a transfer",
									"recipient": "The destination address of the token",
									"token": "The contract address of the token which will be transferred to `recipient`"
								}
							},
							"unwrapWETH9(uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
								"params": {
									"amountMinimum": "The minimum amount of WETH9 to unwrap",
									"recipient": "The address receiving ETH"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"factory()": "c45a0155",
							"refundETH()": "12210e8a",
							"sweepToken(address,uint256,address)": "df2ab5bb",
							"unwrapWETH9(uint256,address)": "49404b7c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts_rename/interfaces/PeripheryPayments.sol\":\"PeripheryPayments\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"contracts_rename/interfaces/CustomCustomTransferHelper.sol\":{\"keccak256\":\"0x28b9c72b1338a1260f363a9e683ea751c29daf517d91993f5b38f210301a09b1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cad4d350e4c3dd6b4a78e764b95afa6b411aa3ee7e856a164d59aa3303ef89fc\",\"dweb:/ipfs/QmPcLkKL6WAHWfWok4VYVBMXHVDbPvE4DCV5R73R4jbsWm\"]},\"contracts_rename/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0xe5f274fc59251356fdcddad58c3927c3b156301f13c98424ea37ed39af3fa6da\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://55a46b99e05de3af2e18e648b4a70eee6186ba1bfe48e76141137ee7c629ed1c\",\"dweb:/ipfs/QmckEaF9umbtegxEAZZKPJ9JkgZQsC2kz9QK7upavtKoRp\"]},\"contracts_rename/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0x8e0cdb6280728619c44a8220996512b81e85f6fa7bc5373db742ea953a81eda8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f0748123e32874d0e1e405a463fafcf98f686fac0055da2e13bfdaa0db917766\",\"dweb:/ipfs/QmRZPF69X1e6T3yT2z8HTgzEtXHTVScqzoEMbfvp5Niggq\"]},\"contracts_rename/interfaces/IWETH9.sol\":{\"keccak256\":\"0x720871f2fd9edf1116935a82b8cf2b6c279a65d237822575c8683f0f9d6129fd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://72239dfdab87e15dfe276c7ee55a76ab7b64a829300d7e6317584f2b25d36c12\",\"dweb:/ipfs/QmWoe4WmWq1Z3cqmiro4BZ8z3MbKjWXSBo5Ywx8rKft8tv\"]},\"contracts_rename/interfaces/PeripheryImmutableState.sol\":{\"keccak256\":\"0x5372005eea557df2ca94091e38789a7207363d0f1974d9c212714c8575b9603e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://02937e4060985bd9f920a18f8a692ea21a603552c6851732079447e4c5a5f1ab\",\"dweb:/ipfs/QmXBnDSKtYBmbCjqh2n7DzPYXrMKpMg4eEoB978raAnmmr\"]},\"contracts_rename/interfaces/PeripheryPayments.sol\":{\"keccak256\":\"0x58c458f1f6a71627c621d49a8826d8094c62721ea660d1b3dcdd966eb0edeb66\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://071617d3e983d92a03da738bc65aa232f346bdc7f54830c91ba55f614ca3459a\",\"dweb:/ipfs/QmVCd1YbkmSxiJnVkFrjb4zeugQWRuwQB6QzvjnJzj8MBg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"refundETH()": {
								"notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
							},
							"sweepToken(address,uint256,address)": {
								"notice": "Transfers the full amount of a token held by this contract to recipient"
							},
							"unwrapWETH9(uint256,address)": {
								"notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH."
							}
						},
						"version": 1
					}
				}
			},
			"contracts_rename/libraries/CallbackValidation.sol": {
				"CallbackValidation": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts_rename/libraries/CallbackValidation.sol\":243:1507  library CallbackValidation {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts_rename/libraries/CallbackValidation.sol\":243:1507  library CallbackValidation {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f0e7f1b33d8a8b880780b1c4e24fb30c272fe8e0cadc06291e612f7f0abd8a0d64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f0e7f1b33d8a8b880780b1c4e24fb30c272fe8e0cadc06291e612f7f0abd8a0d64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE 0xE7 CALL 0xB3 RETURNDATASIZE DUP11 DUP12 DUP9 SMOD DUP1 0xB1 0xC4 0xE2 0x4F 0xB3 0xC 0x27 0x2F 0xE8 0xE0 0xCA 0xDC MOD 0x29 0x1E PUSH2 0x2F7F EXP 0xBD DUP11 0xD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "243:1264:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f0e7f1b33d8a8b880780b1c4e24fb30c272fe8e0cadc06291e612f7f0abd8a0d64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE 0xE7 CALL 0xB3 RETURNDATASIZE DUP11 DUP12 DUP9 SMOD DUP1 0xB1 0xC4 0xE2 0x4F 0xB3 0xC 0x27 0x2F 0xE8 0xE0 0xCA 0xDC MOD 0x29 0x1E PUSH2 0x2F7F EXP 0xBD DUP11 0xD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "243:1264:19:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"verifyCallback(address,address,address,uint24)": "infinite",
								"verifyCallback(address,struct PoolAddress.PoolKey memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 243,
									"end": 1507,
									"name": "PUSH #[$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 1507,
									"name": "PUSH [$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 1507,
									"name": "PUSH",
									"source": 19,
									"value": "B"
								},
								{
									"begin": 243,
									"end": 1507,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 243,
									"end": 1507,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 243,
									"end": 1507,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 243,
									"end": 1507,
									"name": "CODECOPY",
									"source": 19
								},
								{
									"begin": 243,
									"end": 1507,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 243,
									"end": 1507,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 243,
									"end": 1507,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 1507,
									"name": "BYTE",
									"source": 19
								},
								{
									"begin": 243,
									"end": 1507,
									"name": "PUSH",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 243,
									"end": 1507,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 243,
									"end": 1507,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 243,
									"end": 1507,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 243,
									"end": 1507,
									"name": "PUSH",
									"source": 19,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 1507,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 1507,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 243,
									"end": 1507,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 1507,
									"name": "PUSH",
									"source": 19,
									"value": "4"
								},
								{
									"begin": 243,
									"end": 1507,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 243,
									"end": 1507,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 243,
									"end": 1507,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 1507,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 243,
									"end": 1507,
									"name": "tag",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 243,
									"end": 1507,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 243,
									"end": 1507,
									"name": "ADDRESS",
									"source": 19
								},
								{
									"begin": 243,
									"end": 1507,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 1507,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 243,
									"end": 1507,
									"name": "PUSH",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 243,
									"end": 1507,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 243,
									"end": 1507,
									"name": "MSTORE8",
									"source": 19
								},
								{
									"begin": 243,
									"end": 1507,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 243,
									"end": 1507,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 243,
									"end": 1507,
									"name": "RETURN",
									"source": 19
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f0e7f1b33d8a8b880780b1c4e24fb30c272fe8e0cadc06291e612f7f0abd8a0d64736f6c63430008140033",
									".code": [
										{
											"begin": 243,
											"end": 1507,
											"name": "PUSHDEPLOYADDRESS",
											"source": 19
										},
										{
											"begin": 243,
											"end": 1507,
											"name": "ADDRESS",
											"source": 19
										},
										{
											"begin": 243,
											"end": 1507,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 243,
											"end": 1507,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 243,
											"end": 1507,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 243,
											"end": 1507,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 243,
											"end": 1507,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 1507,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 243,
											"end": 1507,
											"name": "REVERT",
											"source": 19
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol",
								"contracts_rename/FlashLoan.sol",
								"contracts_rename/interfaces/CustomCustomTransferHelper.sol",
								"contracts_rename/interfaces/IPeripheryImmutableState.sol",
								"contracts_rename/interfaces/IPeripheryPayments.sol",
								"contracts_rename/interfaces/ISwapRouter.sol",
								"contracts_rename/interfaces/IUniswapV3FlashCallback.sol",
								"contracts_rename/interfaces/IUniswapV3SwapCallback.sol",
								"contracts_rename/interfaces/IWETH9.sol",
								"contracts_rename/interfaces/PeripheryImmutableState.sol",
								"contracts_rename/interfaces/PeripheryPayments.sol",
								"contracts_rename/libraries/CallbackValidation.sol",
								"contracts_rename/libraries/PoolAddress.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Provides validation for callbacks from Uniswap V3 Pools\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts_rename/libraries/CallbackValidation.sol\":\"CallbackValidation\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"contracts_rename/libraries/CallbackValidation.sol\":{\"keccak256\":\"0xaf55d873b07516317a89b7c02d82857c2bd8f7b5f96027a1a7fa814ccaeeebe9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://52f9f83efbc4d08de149c6212ea6f4f9821eb43898e097d06f2ef21ca6f07716\",\"dweb:/ipfs/QmRSfCNS2NPxXhQtjAcs2xXuAVzPNYLqA6YYtJwbghwA7h\"]},\"contracts_rename/libraries/PoolAddress.sol\":{\"keccak256\":\"0x741b5bbbb61f4836c0a09e199b856a0a15dc01deff8ad127e54aacd970a01060\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c28f36044ced42f9b626fe6e7992c4252b978b5bbe7f55c4d2912a24e837bbd7\",\"dweb:/ipfs/QmUdbNihNv2KRq2qccAzJYdzRqxbYtFHqnhHXP4hRE2EaN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Provides validation for callbacks from Uniswap V3 Pools",
						"version": 1
					}
				}
			},
			"contracts_rename/libraries/PoolAddress.sol": {
				"PoolAddress": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Provides functions for deriving a pool address from the factory, tokens, and the fee",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts_rename/libraries/PoolAddress.sol\":169:1712  library PoolAddress {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts_rename/libraries/PoolAddress.sol\":169:1712  library PoolAddress {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200af0595ab708e42ef80573076998384ad7e401c3060f603fb4a80335804967c564736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200af0595ab708e42ef80573076998384ad7e401c3060f603fb4a80335804967c564736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP CREATE MSIZE GAS 0xB7 ADDMOD 0xE4 0x2E 0xF8 SDIV PUSH20 0x76998384AD7E401C3060F603FB4A80335804967 0xC5 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "169:1543:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200af0595ab708e42ef80573076998384ad7e401c3060f603fb4a80335804967c564736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP CREATE MSIZE GAS 0xB7 ADDMOD 0xE4 0x2E 0xF8 SDIV PUSH20 0x76998384AD7E401C3060F603FB4A80335804967 0xC5 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "169:1543:20:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"computeAddress(address,struct PoolAddress.PoolKey memory)": "infinite",
								"getPoolKey(address,address,uint24)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 169,
									"end": 1712,
									"name": "PUSH #[$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 169,
									"end": 1712,
									"name": "PUSH [$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 169,
									"end": 1712,
									"name": "PUSH",
									"source": 20,
									"value": "B"
								},
								{
									"begin": 169,
									"end": 1712,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 169,
									"end": 1712,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 169,
									"end": 1712,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 169,
									"end": 1712,
									"name": "CODECOPY",
									"source": 20
								},
								{
									"begin": 169,
									"end": 1712,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 169,
									"end": 1712,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 169,
									"end": 1712,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 1712,
									"name": "BYTE",
									"source": 20
								},
								{
									"begin": 169,
									"end": 1712,
									"name": "PUSH",
									"source": 20,
									"value": "73"
								},
								{
									"begin": 169,
									"end": 1712,
									"name": "EQ",
									"source": 20
								},
								{
									"begin": 169,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 169,
									"end": 1712,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 169,
									"end": 1712,
									"name": "PUSH",
									"source": 20,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 169,
									"end": 1712,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 1712,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 169,
									"end": 1712,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 1712,
									"name": "PUSH",
									"source": 20,
									"value": "4"
								},
								{
									"begin": 169,
									"end": 1712,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 169,
									"end": 1712,
									"name": "PUSH",
									"source": 20,
									"value": "24"
								},
								{
									"begin": 169,
									"end": 1712,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 1712,
									"name": "REVERT",
									"source": 20
								},
								{
									"begin": 169,
									"end": 1712,
									"name": "tag",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 169,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 169,
									"end": 1712,
									"name": "ADDRESS",
									"source": 20
								},
								{
									"begin": 169,
									"end": 1712,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 1712,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 169,
									"end": 1712,
									"name": "PUSH",
									"source": 20,
									"value": "73"
								},
								{
									"begin": 169,
									"end": 1712,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 169,
									"end": 1712,
									"name": "MSTORE8",
									"source": 20
								},
								{
									"begin": 169,
									"end": 1712,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 169,
									"end": 1712,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 169,
									"end": 1712,
									"name": "RETURN",
									"source": 20
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200af0595ab708e42ef80573076998384ad7e401c3060f603fb4a80335804967c564736f6c63430008140033",
									".code": [
										{
											"begin": 169,
											"end": 1712,
											"name": "PUSHDEPLOYADDRESS",
											"source": 20
										},
										{
											"begin": 169,
											"end": 1712,
											"name": "ADDRESS",
											"source": 20
										},
										{
											"begin": 169,
											"end": 1712,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 169,
											"end": 1712,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 169,
											"end": 1712,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 169,
											"end": 1712,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 169,
											"end": 1712,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 1712,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 169,
											"end": 1712,
											"name": "REVERT",
											"source": 20
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol",
								"contracts_rename/FlashLoan.sol",
								"contracts_rename/interfaces/CustomCustomTransferHelper.sol",
								"contracts_rename/interfaces/IPeripheryImmutableState.sol",
								"contracts_rename/interfaces/IPeripheryPayments.sol",
								"contracts_rename/interfaces/ISwapRouter.sol",
								"contracts_rename/interfaces/IUniswapV3FlashCallback.sol",
								"contracts_rename/interfaces/IUniswapV3SwapCallback.sol",
								"contracts_rename/interfaces/IWETH9.sol",
								"contracts_rename/interfaces/PeripheryImmutableState.sol",
								"contracts_rename/interfaces/PeripheryPayments.sol",
								"contracts_rename/libraries/CallbackValidation.sol",
								"contracts_rename/libraries/PoolAddress.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Provides functions for deriving a pool address from the factory, tokens, and the fee\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts_rename/libraries/PoolAddress.sol\":\"PoolAddress\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts_rename/libraries/PoolAddress.sol\":{\"keccak256\":\"0x741b5bbbb61f4836c0a09e199b856a0a15dc01deff8ad127e54aacd970a01060\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c28f36044ced42f9b626fe6e7992c4252b978b5bbe7f55c4d2912a24e837bbd7\",\"dweb:/ipfs/QmUdbNihNv2KRq2qccAzJYdzRqxbYtFHqnhHXP4hRE2EaN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
					"exportedSymbols": {
						"IUniswapV3Pool": [
							99
						],
						"IUniswapV3PoolActions": [
							195
						],
						"IUniswapV3PoolDerivedState": [
							226
						],
						"IUniswapV3PoolEvents": [
							345
						],
						"IUniswapV3PoolImmutables": [
							385
						],
						"IUniswapV3PoolOwnerActions": [
							411
						],
						"IUniswapV3PoolState": [
							519
						]
					},
					"id": 100,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
							"file": "./pool/IUniswapV3PoolImmutables.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 100,
							"sourceUnit": 386,
							"src": "71:45:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
							"file": "./pool/IUniswapV3PoolState.sol",
							"id": 81,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 100,
							"sourceUnit": 520,
							"src": "117:40:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
							"file": "./pool/IUniswapV3PoolDerivedState.sol",
							"id": 82,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 100,
							"sourceUnit": 227,
							"src": "158:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
							"file": "./pool/IUniswapV3PoolActions.sol",
							"id": 83,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 100,
							"sourceUnit": 196,
							"src": "206:42:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
							"file": "./pool/IUniswapV3PoolOwnerActions.sol",
							"id": 84,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 100,
							"sourceUnit": 412,
							"src": "249:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
							"file": "./pool/IUniswapV3PoolEvents.sol",
							"id": 85,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 100,
							"sourceUnit": 346,
							"src": "297:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 87,
										"name": "IUniswapV3PoolImmutables",
										"nameLocations": [
											"637:24:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 385,
										"src": "637:24:1"
									},
									"id": 88,
									"nodeType": "InheritanceSpecifier",
									"src": "637:24:1"
								},
								{
									"baseName": {
										"id": 89,
										"name": "IUniswapV3PoolState",
										"nameLocations": [
											"667:19:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 519,
										"src": "667:19:1"
									},
									"id": 90,
									"nodeType": "InheritanceSpecifier",
									"src": "667:19:1"
								},
								{
									"baseName": {
										"id": 91,
										"name": "IUniswapV3PoolDerivedState",
										"nameLocations": [
											"692:26:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 226,
										"src": "692:26:1"
									},
									"id": 92,
									"nodeType": "InheritanceSpecifier",
									"src": "692:26:1"
								},
								{
									"baseName": {
										"id": 93,
										"name": "IUniswapV3PoolActions",
										"nameLocations": [
											"724:21:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 195,
										"src": "724:21:1"
									},
									"id": 94,
									"nodeType": "InheritanceSpecifier",
									"src": "724:21:1"
								},
								{
									"baseName": {
										"id": 95,
										"name": "IUniswapV3PoolOwnerActions",
										"nameLocations": [
											"751:26:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 411,
										"src": "751:26:1"
									},
									"id": 96,
									"nodeType": "InheritanceSpecifier",
									"src": "751:26:1"
								},
								{
									"baseName": {
										"id": 97,
										"name": "IUniswapV3PoolEvents",
										"nameLocations": [
											"783:20:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 345,
										"src": "783:20:1"
									},
									"id": 98,
									"nodeType": "InheritanceSpecifier",
									"src": "783:20:1"
								}
							],
							"canonicalName": "IUniswapV3Pool",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 86,
								"nodeType": "StructuredDocumentation",
								"src": "340:265:1",
								"text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
							},
							"fullyImplemented": false,
							"id": 99,
							"linearizedBaseContracts": [
								99,
								345,
								411,
								195,
								226,
								519,
								385
							],
							"name": "IUniswapV3Pool",
							"nameLocation": "615:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 100,
							"src": "605:203:1",
							"usedErrors": [],
							"usedEvents": [
								236,
								253,
								268,
								283,
								300,
								315,
								322,
								333,
								344
							]
						}
					],
					"src": "45:764:1"
				},
				"id": 1
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolActions": [
							195
						]
					},
					"id": 196,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 101,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "71:102:2",
								"text": "@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"
							},
							"fullyImplemented": false,
							"id": 195,
							"linearizedBaseContracts": [
								195
							],
							"name": "IUniswapV3PoolActions",
							"nameLocation": "183:21:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "211:206:2",
										"text": "@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"
									},
									"functionSelector": "f637731d",
									"id": 108,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "431:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "450:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "442:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 104,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:22:2"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "472:0:2"
									},
									"scope": 195,
									"src": "422:51:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "479:1029:2",
										"text": "@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
									},
									"functionSelector": "3c8a7d8d",
									"id": 126,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1522:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1544:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1536:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1569:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1563:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 112,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1563:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1594:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1588:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 114,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1588:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1621:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1613:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 116,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1652:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1637:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1637:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1526:136:2"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1689:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1681:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1706:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1698:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:34:2"
									},
									"scope": 195,
									"src": "1513:202:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "1721:1053:2",
										"text": "@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "4f1eb3d8",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nameLocation": "2788:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2813:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "2805:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2838:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "2832:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 130,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2863:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "2857:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 132,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2857:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "2890:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "2882:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 134,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "2924:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "2916:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 136,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2916:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2795:151:2"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2973:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "2965:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 139,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2965:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "2982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 141,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2982:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2964:34:2"
									},
									"scope": 195,
									"src": "2779:220:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "3005:631:2",
										"text": "@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
									},
									"functionSelector": "a34123a7",
									"id": 158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "3650:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "3670:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "3664:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 146,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3664:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "3695:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "3689:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 148,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3689:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3722:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "3714:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 150,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3714:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3654:80:2"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3761:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "3753:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3778:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "3770:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3752:34:2"
									},
									"scope": 195,
									"src": "3641:146:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "3793:1015:2",
										"text": "@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
									},
									"functionSelector": "128acb08",
									"id": 176,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "4822:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4844:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "4836:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nameLocation": "4868:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "4863:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 162,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "amountSpecified",
												"nameLocation": "4895:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "4888:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 164,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4888:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nameLocation": "4928:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "4920:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 166,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4920:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4970:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "4955:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 168,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4955:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4826:154:2"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5006:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "4999:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 171,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4999:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5022:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "5015:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 173,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5015:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4998:32:2"
									},
									"scope": 195,
									"src": "4813:218:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "5037:657:2",
										"text": "@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"
									},
									"functionSelector": "490e6cbc",
									"id": 188,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flash",
									"nameLocation": "5708:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5731:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "5723:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5723:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5758:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "5750:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5783:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "5775:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5775:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5815:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "5800:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 184,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5800:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5713:112:2"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5834:0:2"
									},
									"scope": 195,
									"src": "5699:136:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "5841:367:2",
										"text": "@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"
									},
									"functionSelector": "32148f67",
									"id": 194,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseObservationCardinalityNext",
									"nameLocation": "6222:34:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "6264:26:2",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "6257:33:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 190,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6256:35:2"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6300:0:2"
									},
									"scope": 195,
									"src": "6213:88:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 196,
							"src": "173:6130:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:6259:2"
				},
				"id": 2
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolDerivedState": [
							226
						]
					},
					"id": 227,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 197,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolDerivedState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 198,
								"nodeType": "StructuredDocumentation",
								"src": "71:222:3",
								"text": "@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."
							},
							"fullyImplemented": false,
							"id": 226,
							"linearizedBaseContracts": [
								226
							],
							"name": "IUniswapV3PoolDerivedState",
							"nameLocation": "303:26:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "336:1045:3",
										"text": "@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"
									},
									"functionSelector": "883bdbfd",
									"id": 211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observe",
									"nameLocation": "1395:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "secondsAgos",
												"nameLocation": "1421:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1403:29:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 200,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1403:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 201,
													"nodeType": "ArrayTypeName",
													"src": "1403:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:31:3"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "tickCumulatives",
												"nameLocation": "1496:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1481:30:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
													"typeString": "int56[]"
												},
												"typeName": {
													"baseType": {
														"id": 204,
														"name": "int56",
														"nodeType": "ElementaryTypeName",
														"src": "1481:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"id": 205,
													"nodeType": "ArrayTypeName",
													"src": "1481:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
														"typeString": "int56[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128s",
												"nameLocation": "1530:34:3",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1513:51:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 207,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "1513:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 208,
													"nodeType": "ArrayTypeName",
													"src": "1513:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1480:85:3"
									},
									"scope": 226,
									"src": "1386:180:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "1572:771:3",
										"text": "@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"
									},
									"functionSelector": "a38807f2",
									"id": 225,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "snapshotCumulativesInside",
									"nameLocation": "2357:25:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2389:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "2383:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 213,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2383:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2406:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "2400:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 215,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2400:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2382:34:3"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "tickCumulativeInside",
												"nameLocation": "2483:20:3",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "2477:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 218,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "2477:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "secondsPerLiquidityInsideX128",
												"nameLocation": "2525:29:3",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "2517:37:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 220,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "secondsInside",
												"nameLocation": "2575:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "2568:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 222,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2463:135:3"
									},
									"scope": 226,
									"src": "2348:251:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 227,
							"src": "293:2308:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2557:3"
				},
				"id": 3
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
					"exportedSymbols": {
						"IUniswapV3PoolEvents": [
							345
						]
					},
					"id": 346,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 228,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolEvents",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 229,
								"nodeType": "StructuredDocumentation",
								"src": "71:88:4",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 345,
							"linearizedBaseContracts": [
								345
							],
							"name": "IUniswapV3PoolEvents",
							"nameLocation": "169:20:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "196:344:4",
										"text": "@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
									},
									"eventSelector": "98636036cb66a9c19a37435efc1e90142190214e8abeb821bdba3f2990dd4c95",
									"id": 236,
									"name": "Initialize",
									"nameLocation": "551:10:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "570:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "562:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 231,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "590:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "584:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 233,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "584:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:34:4"
									},
									"src": "545:51:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "602:551:4",
										"text": "@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
									},
									"eventSelector": "7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde",
									"id": 253,
									"name": "Mint",
									"nameLocation": "1164:4:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1186:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "1178:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1218:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "1202:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1247:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "1233:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 242,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1233:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1280:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "1266:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 244,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1266:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1307:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "1299:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 246,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1331:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "1323:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1356:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "1348:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1168:201:4"
									},
									"src": "1158:212:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "1376:493:4",
										"text": "@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
									},
									"eventSelector": "70935338e69775456a85ddef226c395fb668b63fa0115f5f20610b388e6ca9c0",
									"id": 268,
									"name": "Collect",
									"nameLocation": "1880:7:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1913:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1897:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1897:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1936:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1928:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1969:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1955:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 259,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1955:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2002:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1988:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 261,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1988:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2029:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "2021:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 263,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2054:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "2046:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 265,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1887:180:4"
									},
									"src": "1874:194:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "2074:523:4",
										"text": "@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
									},
									"eventSelector": "0c396cd989a39f4459b5fa1aed6a9a8dcdbc45908acfd67e028cd568da98982c",
									"id": 283,
									"name": "Burn",
									"nameLocation": "2608:4:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2638:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "2622:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2622:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2667:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "2653:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 272,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2653:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2700:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "2686:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 274,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2686:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "2719:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 276,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2751:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "2743:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2743:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2776:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "2768:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:177:4"
									},
									"src": "2602:188:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "2796:600:4",
										"text": "@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
									},
									"eventSelector": "c42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca67",
									"id": 300,
									"name": "Swap",
									"nameLocation": "3407:4:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3437:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "3421:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3421:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3469:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "3453:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3495:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "3488:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 289,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3488:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3519:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "3512:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 291,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3512:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "3544:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "3536:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 293,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3536:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3574:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "3566:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 295,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3599:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "3593:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 297,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3593:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3411:198:4"
									},
									"src": "3401:209:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "3616:562:4",
										"text": "@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
									},
									"eventSelector": "bdbdb71d7860376ba52b25a5028beea23581364a40522f6bcfb86bb1f2dca633",
									"id": 315,
									"name": "Flash",
									"nameLocation": "4189:5:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4220:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "4204:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4204:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4252:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "4236:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "4279:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "4271:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4271:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "4304:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "4296:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4296:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid0",
												"nameLocation": "4329:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "4321:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4321:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid1",
												"nameLocation": "4352:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "4344:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4344:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4194:169:4"
									},
									"src": "4183:181:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "4370:451:4",
										"text": "@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"
									},
									"eventSelector": "ac49e518f90a358f652e4400164f05a5d8f7e35e7747279bc3a93dbf584e125a",
									"id": 322,
									"name": "IncreaseObservationCardinalityNext",
									"nameLocation": "4832:34:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextOld",
												"nameLocation": "4883:29:4",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "4876:36:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 317,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4876:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextNew",
												"nameLocation": "4929:29:4",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "4922:36:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 319,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4922:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4866:98:4"
									},
									"src": "4826:139:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "4971:370:4",
										"text": "@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"
									},
									"eventSelector": "973d8d92bb299f4af6ce49b52a8adb85ae46b9f214c4c4fc06ac77401237b133",
									"id": 333,
									"name": "SetFeeProtocol",
									"nameLocation": "5352:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0Old",
												"nameLocation": "5373:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "5367:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 324,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5367:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1Old",
												"nameLocation": "5396:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "5390:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 326,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5390:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0New",
												"nameLocation": "5419:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "5413:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 328,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5413:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1New",
												"nameLocation": "5442:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "5436:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 330,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5436:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5366:92:4"
									},
									"src": "5346:113:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 334,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:4",
										"text": "@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"
									},
									"eventSelector": "596b573906218d3411850b26a6b437d6c4522fdb43d2d2386263f86d50b8b151",
									"id": 344,
									"name": "CollectProtocol",
									"nameLocation": "5860:15:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5892:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "5876:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5876:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5916:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "5900:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5935:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "5927:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 339,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5927:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5952:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "5944:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 341,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5875:85:4"
									},
									"src": "5854:107:4"
								}
							],
							"scope": 346,
							"src": "159:5804:4",
							"usedErrors": [],
							"usedEvents": [
								236,
								253,
								268,
								283,
								300,
								315,
								322,
								333,
								344
							]
						}
					],
					"src": "45:5919:4"
				},
				"id": 4
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
					"exportedSymbols": {
						"IUniswapV3PoolImmutables": [
							385
						]
					},
					"id": 386,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 347,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolImmutables",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 348,
								"nodeType": "StructuredDocumentation",
								"src": "71:153:5",
								"text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
							},
							"fullyImplemented": false,
							"id": 385,
							"linearizedBaseContracts": [
								385
							],
							"name": "IUniswapV3PoolImmutables",
							"nameLocation": "234:24:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "265:138:5",
										"text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
									},
									"functionSelector": "c45a0155",
									"id": 354,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "417:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:2:5"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "450:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "449:9:5"
									},
									"scope": 385,
									"src": "408:51:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "465:113:5",
										"text": "@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "0dfe1681",
									"id": 360,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "592:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "598:2:5"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "624:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:9:5"
									},
									"scope": 385,
									"src": "583:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "639:114:5",
										"text": "@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "d21220a7",
									"id": 366,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "767:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "773:2:5"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "799:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:9:5"
									},
									"scope": 385,
									"src": "758:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "814:84:5",
										"text": "@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"
									},
									"functionSelector": "ddca3f43",
									"id": 372,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nameLocation": "912:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "915:2:5"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "941:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 369,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "941:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "940:8:5"
									},
									"scope": 385,
									"src": "903:46:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "955:358:5",
										"text": "@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
									},
									"functionSelector": "d0c93a7c",
									"id": 378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacing",
									"nameLocation": "1327:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:2:5"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "1364:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 375,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1364:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:7:5"
									},
									"scope": 385,
									"src": "1318:53:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 379,
										"nodeType": "StructuredDocumentation",
										"src": "1377:363:5",
										"text": "@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
									},
									"functionSelector": "70cf754a",
									"id": 384,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxLiquidityPerTick",
									"nameLocation": "1754:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:5"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1799:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 381,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1798:9:5"
									},
									"scope": 385,
									"src": "1745:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 386,
							"src": "224:1586:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1766:5"
				},
				"id": 5
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolOwnerActions": [
							411
						]
					},
					"id": 412,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 387,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolOwnerActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 388,
								"nodeType": "StructuredDocumentation",
								"src": "71:116:6",
								"text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
							},
							"fullyImplemented": false,
							"id": 411,
							"linearizedBaseContracts": [
								411
							],
							"name": "IUniswapV3PoolOwnerActions",
							"nameLocation": "197:26:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 389,
										"nodeType": "StructuredDocumentation",
										"src": "230:205:6",
										"text": "@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"
									},
									"functionSelector": "8206a4d1",
									"id": 396,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeProtocol",
									"nameLocation": "449:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "feeProtocol0",
												"nameLocation": "470:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "464:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 390,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "464:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "feeProtocol1",
												"nameLocation": "490:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "484:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 392,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "484:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:40:6"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:0:6"
									},
									"scope": 411,
									"src": "440:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 397,
										"nodeType": "StructuredDocumentation",
										"src": "519:483:6",
										"text": "@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"
									},
									"functionSelector": "85b66729",
									"id": 410,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectProtocol",
									"nameLocation": "1016:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1049:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "1041:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "1076:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "1068:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 400,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1068:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "1110:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "1102:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 402,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1031:101:6"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1159:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "1151:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 405,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1176:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "1168:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 407,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1150:34:6"
									},
									"scope": 411,
									"src": "1007:178:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 412,
							"src": "187:1000:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1143:6"
				},
				"id": 6
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolState": [
							519
						]
					},
					"id": 520,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 413,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 414,
								"nodeType": "StructuredDocumentation",
								"src": "71:169:7",
								"text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
							},
							"fullyImplemented": false,
							"id": 519,
							"linearizedBaseContracts": [
								519
							],
							"name": "IUniswapV3PoolState",
							"nameLocation": "250:19:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "276:1140:7",
										"text": "@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"
									},
									"functionSelector": "3850c7bd",
									"id": 432,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slot0",
									"nameLocation": "1430:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1435:2:7"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1506:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "1498:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 417,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1498:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1538:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "1532:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 419,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1532:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "observationIndex",
												"nameLocation": "1563:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "1556:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 421,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1556:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "observationCardinality",
												"nameLocation": "1600:22:7",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "1593:29:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 423,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1593:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "1643:26:7",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "1636:33:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 425,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1636:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "feeProtocol",
												"nameLocation": "1689:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "1683:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 427,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1683:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "unlocked",
												"nameLocation": "1719:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "1714:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 429,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1714:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1484:253:7"
									},
									"scope": 519,
									"src": "1421:317:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 433,
										"nodeType": "StructuredDocumentation",
										"src": "1744:168:7",
										"text": "@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "f3058399",
									"id": 438,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal0X128",
									"nameLocation": "1926:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1946:2:7"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "1972:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1972:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1971:9:7"
									},
									"scope": 519,
									"src": "1917:64:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "1987:168:7",
										"text": "@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "46141319",
									"id": 444,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal1X128",
									"nameLocation": "2169:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2189:2:7"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "2215:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2215:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2214:9:7"
									},
									"scope": 519,
									"src": "2160:64:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "2230:147:7",
										"text": "@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"
									},
									"functionSelector": "1ad8b03b",
									"id": 452,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolFees",
									"nameLocation": "2391:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2403:2:7"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "2437:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "2429:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 447,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "2453:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "2445:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 449,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:32:7"
									},
									"scope": 519,
									"src": "2382:79:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "2467:150:7",
										"text": "@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"
									},
									"functionSelector": "1a686502",
									"id": 458,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidity",
									"nameLocation": "2631:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:7"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2666:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 455,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:9:7"
									},
									"scope": 519,
									"src": "2622:53:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "2681:1244:7",
										"text": "@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."
									},
									"functionSelector": "f30dba93",
									"id": 480,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ticks",
									"nameLocation": "3939:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3951:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "3945:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 460,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3945:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3944:12:7"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "liquidityGross",
												"nameLocation": "4025:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4017:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 463,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4017:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "liquidityNet",
												"nameLocation": "4060:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4053:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 465,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4053:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "feeGrowthOutside0X128",
												"nameLocation": "4094:21:7",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4086:29:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "feeGrowthOutside1X128",
												"nameLocation": "4137:21:7",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4129:29:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4129:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "tickCumulativeOutside",
												"nameLocation": "4178:21:7",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4172:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 471,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "4172:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "secondsPerLiquidityOutsideX128",
												"nameLocation": "4221:30:7",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4213:38:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 473,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4213:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "secondsOutside",
												"nameLocation": "4272:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4265:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 475,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4265:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "4305:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4300:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 477,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4300:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:323:7"
									},
									"scope": 519,
									"src": "3930:397:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "4333:99:7",
										"text": "@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
									},
									"functionSelector": "5339c296",
									"id": 488,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickBitmap",
									"nameLocation": "4446:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "wordPosition",
												"nameLocation": "4463:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "4457:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 482,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "4457:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:20:7"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "4500:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4500:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4499:9:7"
									},
									"scope": 519,
									"src": "4437:72:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "4515:700:7",
										"text": "@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
									},
									"functionSelector": "514ea4bf",
									"id": 504,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nameLocation": "5229:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "5247:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "5239:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 490,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5238:13:7"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "_liquidity",
												"nameLocation": "5320:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "5312:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 493,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5312:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nameLocation": "5352:24:7",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "5344:32:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5344:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nameLocation": "5398:24:7",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "5390:32:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5390:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nameLocation": "5444:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "5436:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 499,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5436:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nameLocation": "5477:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "5469:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 501,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5469:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5298:200:7"
									},
									"scope": 519,
									"src": "5220:279:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "5505:749:7",
										"text": "@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"
									},
									"functionSelector": "252c09d7",
									"id": 518,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observations",
									"nameLocation": "6268:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "6289:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "6281:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6281:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6280:15:7"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nameLocation": "6363:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "6356:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 509,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6356:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nameLocation": "6397:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "6391:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 511,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "6391:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nameLocation": "6433:33:7",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "6425:41:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 513,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6425:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "6485:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "6480:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 515,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6480:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6342:164:7"
									},
									"scope": 519,
									"src": "6259:248:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 520,
							"src": "240:6269:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:6465:7"
				},
				"id": 7
			},
			"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol",
					"exportedSymbols": {
						"LowGasSafeMath": [
							649
						]
					},
					"id": 650,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 521,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LowGasSafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 522,
								"nodeType": "StructuredDocumentation",
								"src": "71:178:8",
								"text": "@title Optimized overflow and underflow safe math operations\n @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost"
							},
							"fullyImplemented": true,
							"id": 649,
							"linearizedBaseContracts": [
								649
							],
							"name": "LowGasSafeMath",
							"nameLocation": "257:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "504:42:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 533,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 530,
																			"src": "523:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 534,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 525,
																				"src": "527:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 535,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 527,
																				"src": "531:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "527:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "523:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 538,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "522:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 539,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 525,
																"src": "537:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "522:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 532,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "514:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "514:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "514:25:8"
											}
										]
									},
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "278:152:8",
										"text": "@notice Returns x + y, reverts if sum overflows uint256\n @param x The augend\n @param y The addend\n @return z The sum of x and y"
									},
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "444:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "456:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "448:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "467:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "459:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "459:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "447:22:8"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "501:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "493:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:11:8"
									},
									"scope": 649,
									"src": "435:111:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 565,
										"nodeType": "Block",
										"src": "779:42:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 555,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 552,
																			"src": "798:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 556,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 547,
																				"src": "802:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 557,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 549,
																				"src": "806:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "802:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "798:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 560,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "797:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 561,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 547,
																"src": "812:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "797:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 554,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "789:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "789:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 564,
												"nodeType": "ExpressionStatement",
												"src": "789:25:8"
											}
										]
									},
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "552:153:8",
										"text": "@notice Returns x - y, reverts if underflows\n @param x The minuend\n @param y The subtrahend\n @return z The difference of x and y"
									},
									"id": 566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "719:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "731:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "723:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "723:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "742:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "734:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:22:8"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "776:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "768:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "768:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "767:11:8"
									},
									"scope": 649,
									"src": "710:111:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "1055:56:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 577,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 569,
																	"src": "1073:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1078:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1073:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"id": 584,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 580,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 574,
																					"src": "1084:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 583,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 581,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 569,
																						"src": "1088:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 582,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 571,
																						"src": "1092:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1088:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1084:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 585,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1083:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 586,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "1097:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1083:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 588,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 571,
																	"src": "1102:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1083:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1073:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 576,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1065:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1065:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "1065:39:8"
											}
										]
									},
									"documentation": {
										"id": 567,
										"nodeType": "StructuredDocumentation",
										"src": "827:154:8",
										"text": "@notice Returns x * y, reverts if overflows\n @param x The multiplicand\n @param y The multiplier\n @return z The product of x and y"
									},
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "995:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1007:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "999:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "999:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1018:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "1010:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1010:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "998:22:8"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "1052:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "1044:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1043:11:8"
									},
									"scope": 649,
									"src": "986:125:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 620,
										"nodeType": "Block",
										"src": "1342:54:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"id": 609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 605,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 602,
																				"src": "1361:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 608,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 606,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 597,
																					"src": "1365:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 607,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 599,
																					"src": "1369:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "1365:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1361:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 610,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1360:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 611,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "1375:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1360:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 613,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 599,
																			"src": "1381:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1386:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1381:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 616,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1380:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1360:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 604,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1352:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1352:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "1352:37:8"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "1117:154:8",
										"text": "@notice Returns x + y, reverts if overflows or underflows\n @param x The augend\n @param y The addend\n @return z The sum of x and y"
									},
									"id": 621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "1285:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1296:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "1289:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 596,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1289:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1306:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "1299:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 598,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1299:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:20:8"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "1339:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "1332:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 601,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1332:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1331:10:8"
									},
									"scope": 649,
									"src": "1276:120:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "1639:54:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"id": 636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 632,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 629,
																				"src": "1658:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 635,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 633,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 624,
																					"src": "1662:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 634,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 626,
																					"src": "1666:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "1662:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1658:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 637,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1657:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 638,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "1672:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1657:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 640,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 626,
																			"src": "1678:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1683:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1678:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 643,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1677:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1657:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 631,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1649:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1649:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 646,
												"nodeType": "ExpressionStatement",
												"src": "1649:37:8"
											}
										]
									},
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "1402:166:8",
										"text": "@notice Returns x - y, reverts if overflows or underflows\n @param x The minuend\n @param y The subtrahend\n @return z The difference of x and y"
									},
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1582:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1593:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "1586:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 623,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1586:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1603:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "1596:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 625,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1596:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1585:20:8"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "1636:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "1629:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 628,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1629:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1628:10:8"
									},
									"scope": 649,
									"src": "1573:120:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 650,
							"src": "249:1446:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1651:8"
				},
				"id": 8
			},
			"contracts_rename/FlashLoan.sol": {
				"ast": {
					"absolutePath": "contracts_rename/FlashLoan.sol",
					"exportedSymbols": {
						"CallbackValidation": [
							1714
						],
						"CustomTransferHelper": [
							1229
						],
						"FlashLoan": [
							1058
						],
						"IERC20": [
							77
						],
						"IPeripheryImmutableState": [
							1245
						],
						"IPeripheryPayments": [
							1271
						],
						"ISwapRouter": [
							1371
						],
						"IUniswapV3FlashCallback": [
							1385
						],
						"IUniswapV3Pool": [
							99
						],
						"IUniswapV3PoolActions": [
							195
						],
						"IUniswapV3PoolDerivedState": [
							226
						],
						"IUniswapV3PoolEvents": [
							345
						],
						"IUniswapV3PoolImmutables": [
							385
						],
						"IUniswapV3PoolOwnerActions": [
							411
						],
						"IUniswapV3PoolState": [
							519
						],
						"IUniswapV3SwapCallback": [
							1399
						],
						"IWETH9": [
							1416
						],
						"LowGasSafeMath": [
							649
						],
						"PeripheryImmutableState": [
							1447
						],
						"PeripheryPayments": [
							1649
						],
						"PoolAddress": [
							1816
						]
					},
					"id": 1059,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 651,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "48:33:9"
						},
						{
							"id": 652,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "83:19:9"
						},
						{
							"absolutePath": "contracts_rename/interfaces/IUniswapV3FlashCallback.sol",
							"file": "./interfaces/IUniswapV3FlashCallback.sol",
							"id": 653,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1059,
							"sourceUnit": 1386,
							"src": "106:50:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol",
							"file": "@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol",
							"id": 654,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1059,
							"sourceUnit": 650,
							"src": "158:65:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts_rename/interfaces/PeripheryPayments.sol",
							"file": "./interfaces/PeripheryPayments.sol",
							"id": 655,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1059,
							"sourceUnit": 1650,
							"src": "227:44:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts_rename/interfaces/PeripheryImmutableState.sol",
							"file": "./interfaces/PeripheryImmutableState.sol",
							"id": 656,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1059,
							"sourceUnit": 1448,
							"src": "273:50:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts_rename/libraries/PoolAddress.sol",
							"file": "./libraries/PoolAddress.sol",
							"id": 657,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1059,
							"sourceUnit": 1817,
							"src": "325:37:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts_rename/libraries/CallbackValidation.sol",
							"file": "./libraries/CallbackValidation.sol",
							"id": 658,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1059,
							"sourceUnit": 1715,
							"src": "364:44:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts_rename/interfaces/ISwapRouter.sol",
							"file": "./interfaces/ISwapRouter.sol",
							"id": 659,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1059,
							"sourceUnit": 1372,
							"src": "410:38:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 661,
										"name": "IUniswapV3FlashCallback",
										"nameLocations": [
											"585:23:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1385,
										"src": "585:23:9"
									},
									"id": 662,
									"nodeType": "InheritanceSpecifier",
									"src": "585:23:9"
								},
								{
									"baseName": {
										"id": 663,
										"name": "PeripheryImmutableState",
										"nameLocations": [
											"610:23:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1447,
										"src": "610:23:9"
									},
									"id": 664,
									"nodeType": "InheritanceSpecifier",
									"src": "610:23:9"
								},
								{
									"baseName": {
										"id": 665,
										"name": "PeripheryPayments",
										"nameLocations": [
											"635:17:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1649,
										"src": "635:17:9"
									},
									"id": 666,
									"nodeType": "InheritanceSpecifier",
									"src": "635:17:9"
								}
							],
							"canonicalName": "FlashLoan",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 660,
								"nodeType": "StructuredDocumentation",
								"src": "452:111:9",
								"text": "@title Flash contract implementation\n @notice An example contract using the Uniswap V3 flash function"
							},
							"fullyImplemented": true,
							"id": 1058,
							"linearizedBaseContracts": [
								1058,
								1649,
								1447,
								1245,
								1271,
								1385
							],
							"name": "FlashLoan",
							"nameLocation": "572:9:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 669,
									"libraryName": {
										"id": 667,
										"name": "LowGasSafeMath",
										"nameLocations": [
											"666:14:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 649,
										"src": "666:14:9"
									},
									"nodeType": "UsingForDirective",
									"src": "660:33:9",
									"typeName": {
										"id": 668,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "685:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 672,
									"libraryName": {
										"id": 670,
										"name": "LowGasSafeMath",
										"nameLocations": [
											"705:14:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 649,
										"src": "705:14:9"
									},
									"nodeType": "UsingForDirective",
									"src": "699:32:9",
									"typeName": {
										"id": 671,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "724:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "c31c9c07",
									"id": 675,
									"mutability": "immutable",
									"name": "swapRouter",
									"nameLocation": "768:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1058,
									"src": "739:39:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ISwapRouter_$1371",
										"typeString": "contract ISwapRouter"
									},
									"typeName": {
										"id": 674,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 673,
											"name": "ISwapRouter",
											"nameLocations": [
												"739:11:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1371,
											"src": "739:11:9"
										},
										"referencedDeclaration": 1371,
										"src": "739:11:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISwapRouter_$1371",
											"typeString": "contract ISwapRouter"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 693,
										"nodeType": "Block",
										"src": "1539:43:9",
										"statements": [
											{
												"expression": {
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 689,
														"name": "swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "1550:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$1371",
															"typeString": "contract ISwapRouter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 690,
														"name": "_swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "1563:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$1371",
															"typeString": "contract ISwapRouter"
														}
													},
													"src": "1550:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$1371",
														"typeString": "contract ISwapRouter"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "1550:24:9"
											}
										]
									},
									"id": 694,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 685,
													"name": "_factory",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 680,
													"src": "1521:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 686,
													"name": "_WETH9",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 682,
													"src": "1531:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 687,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 684,
												"name": "PeripheryImmutableState",
												"nameLocations": [
													"1497:23:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1447,
												"src": "1497:23:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1497:41:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "_swapRouter",
												"nameLocation": "1426:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "1414:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISwapRouter_$1371",
													"typeString": "contract ISwapRouter"
												},
												"typeName": {
													"id": 677,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 676,
														"name": "ISwapRouter",
														"nameLocations": [
															"1414:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1371,
														"src": "1414:11:9"
													},
													"referencedDeclaration": 1371,
													"src": "1414:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$1371",
														"typeString": "contract ISwapRouter"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "_factory",
												"nameLocation": "1456:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "1448:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1448:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "_WETH9",
												"nameLocation": "1483:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "1475:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1403:93:9"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1539:0:9"
									},
									"scope": 1058,
									"src": "1392:190:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1384
									],
									"body": {
										"id": 963,
										"nodeType": "Block",
										"src": "2120:3061:9",
										"statements": [
											{
												"assignments": [
													707
												],
												"declarations": [
													{
														"constant": false,
														"id": 707,
														"mutability": "mutable",
														"name": "decoded",
														"nameLocation": "2156:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 963,
														"src": "2131:32:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FlashCallbackData_$993_memory_ptr",
															"typeString": "struct FlashLoan.FlashCallbackData"
														},
														"typeName": {
															"id": 706,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 705,
																"name": "FlashCallbackData",
																"nameLocations": [
																	"2131:17:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 993,
																"src": "2131:17:9"
															},
															"referencedDeclaration": 993,
															"src": "2131:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FlashCallbackData_$993_storage_ptr",
																"typeString": "struct FlashLoan.FlashCallbackData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 714,
												"initialValue": {
													"arguments": [
														{
															"id": 710,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "2177:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"components": [
																{
																	"id": 711,
																	"name": "FlashCallbackData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "2184:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_FlashCallbackData_$993_storage_ptr_$",
																		"typeString": "type(struct FlashLoan.FlashCallbackData storage pointer)"
																	}
																}
															],
															"id": 712,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2183:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_FlashCallbackData_$993_storage_ptr_$",
																"typeString": "type(struct FlashLoan.FlashCallbackData storage pointer)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															},
															{
																"typeIdentifier": "t_type$_t_struct$_FlashCallbackData_$993_storage_ptr_$",
																"typeString": "type(struct FlashLoan.FlashCallbackData storage pointer)"
															}
														],
														"expression": {
															"id": 708,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "2166:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 709,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2170:6:9",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "2166:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2166:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FlashCallbackData_$993_memory_ptr",
														"typeString": "struct FlashLoan.FlashCallbackData memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2131:72:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 718,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1426,
															"src": "2248:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 719,
																"name": "decoded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "2257:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FlashCallbackData_$993_memory_ptr",
																	"typeString": "struct FlashLoan.FlashCallbackData memory"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2265:7:9",
															"memberName": "poolKey",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 988,
															"src": "2257:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolKey_$1728_memory_ptr",
																"typeString": "struct PoolAddress.PoolKey memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_struct$_PoolKey_$1728_memory_ptr",
																"typeString": "struct PoolAddress.PoolKey memory"
															}
														],
														"expression": {
															"id": 715,
															"name": "CallbackValidation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1714,
															"src": "2214:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_CallbackValidation_$1714_$",
																"typeString": "type(library CallbackValidation)"
															}
														},
														"id": 717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2233:14:9",
														"memberName": "verifyCallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1713,
														"src": "2214:33:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_struct$_PoolKey_$1728_memory_ptr_$returns$_t_contract$_IUniswapV3Pool_$99_$",
															"typeString": "function (address,struct PoolAddress.PoolKey memory) view returns (contract IUniswapV3Pool)"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2214:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$99",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"id": 722,
												"nodeType": "ExpressionStatement",
												"src": "2214:59:9"
											},
											{
												"assignments": [
													724
												],
												"declarations": [
													{
														"constant": false,
														"id": 724,
														"mutability": "mutable",
														"name": "token0",
														"nameLocation": "2294:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 963,
														"src": "2286:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 723,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2286:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 728,
												"initialValue": {
													"expression": {
														"expression": {
															"id": 725,
															"name": "decoded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "2303:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FlashCallbackData_$993_memory_ptr",
																"typeString": "struct FlashLoan.FlashCallbackData memory"
															}
														},
														"id": 726,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2311:7:9",
														"memberName": "poolKey",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 988,
														"src": "2303:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolKey_$1728_memory_ptr",
															"typeString": "struct PoolAddress.PoolKey memory"
														}
													},
													"id": 727,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2319:6:9",
													"memberName": "token0",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1723,
													"src": "2303:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2286:39:9"
											},
											{
												"assignments": [
													730
												],
												"declarations": [
													{
														"constant": false,
														"id": 730,
														"mutability": "mutable",
														"name": "token1",
														"nameLocation": "2344:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 963,
														"src": "2336:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 729,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2336:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 734,
												"initialValue": {
													"expression": {
														"expression": {
															"id": 731,
															"name": "decoded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "2353:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FlashCallbackData_$993_memory_ptr",
																"typeString": "struct FlashLoan.FlashCallbackData memory"
															}
														},
														"id": 732,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2361:7:9",
														"memberName": "poolKey",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 988,
														"src": "2353:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolKey_$1728_memory_ptr",
															"typeString": "struct PoolAddress.PoolKey memory"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2369:6:9",
													"memberName": "token1",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1725,
													"src": "2353:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2336:39:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 738,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 724,
															"src": "2421:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 741,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "2437:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$1371",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$1371",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2429:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 739,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2429:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 743,
																"name": "decoded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "2450:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FlashCallbackData_$993_memory_ptr",
																	"typeString": "struct FlashLoan.FlashCallbackData memory"
																}
															},
															"id": 744,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2458:7:9",
															"memberName": "amount0",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 981,
															"src": "2450:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 735,
															"name": "CustomTransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1229,
															"src": "2388:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_CustomTransferHelper_$1229_$",
																"typeString": "type(library CustomTransferHelper)"
															}
														},
														"id": 737,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2409:11:9",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1202,
														"src": "2388:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2388:78:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 746,
												"nodeType": "ExpressionStatement",
												"src": "2388:78:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 750,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "2510:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 753,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "2526:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$1371",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$1371",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2518:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 751,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2518:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2518:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 755,
																"name": "decoded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "2539:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FlashCallbackData_$993_memory_ptr",
																	"typeString": "struct FlashLoan.FlashCallbackData memory"
																}
															},
															"id": 756,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2547:7:9",
															"memberName": "amount1",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 983,
															"src": "2539:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 747,
															"name": "CustomTransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1229,
															"src": "2477:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_CustomTransferHelper_$1229_$",
																"typeString": "type(library CustomTransferHelper)"
															}
														},
														"id": 749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2498:11:9",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1202,
														"src": "2477:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2477:78:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "ExpressionStatement",
												"src": "2477:78:9"
											},
											{
												"assignments": [
													760
												],
												"declarations": [
													{
														"constant": false,
														"id": 760,
														"mutability": "mutable",
														"name": "amount1Min",
														"nameLocation": "2667:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 963,
														"src": "2659:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 759,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2659:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 767,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 763,
																"name": "decoded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "2699:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FlashCallbackData_$993_memory_ptr",
																	"typeString": "struct FlashLoan.FlashCallbackData memory"
																}
															},
															"id": 764,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2707:7:9",
															"memberName": "amount1",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 983,
															"src": "2699:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 765,
															"name": "fee1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "2716:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 761,
															"name": "LowGasSafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "2680:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LowGasSafeMath_$649_$",
																"typeString": "type(library LowGasSafeMath)"
															}
														},
														"id": 762,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2695:3:9",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 544,
														"src": "2680:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2680:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2659:62:9"
											},
											{
												"assignments": [
													769
												],
												"declarations": [
													{
														"constant": false,
														"id": 769,
														"mutability": "mutable",
														"name": "amount0Min",
														"nameLocation": "2740:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 963,
														"src": "2732:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 768,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2732:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 776,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 772,
																"name": "decoded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "2772:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FlashCallbackData_$993_memory_ptr",
																	"typeString": "struct FlashLoan.FlashCallbackData memory"
																}
															},
															"id": 773,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2780:7:9",
															"memberName": "amount0",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 981,
															"src": "2772:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 774,
															"name": "fee0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "2789:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 770,
															"name": "LowGasSafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "2753:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LowGasSafeMath_$649_$",
																"typeString": "type(library LowGasSafeMath)"
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2768:3:9",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 544,
														"src": "2753:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2753:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2732:62:9"
											},
											{
												"assignments": [
													778
												],
												"declarations": [
													{
														"constant": false,
														"id": 778,
														"mutability": "mutable",
														"name": "amountOut0",
														"nameLocation": "2895:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 963,
														"src": "2887:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 777,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2887:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 799,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 783,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 730,
																	"src": "3034:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 784,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "3073:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 785,
																		"name": "decoded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 707,
																		"src": "3107:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FlashCallbackData_$993_memory_ptr",
																			"typeString": "struct FlashLoan.FlashCallbackData memory"
																		}
																	},
																	"id": 786,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3115:8:9",
																	"memberName": "poolFee2",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 990,
																	"src": "3107:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 789,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3165:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_FlashLoan_$1058",
																				"typeString": "contract FlashLoan"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_FlashLoan_$1058",
																				"typeString": "contract FlashLoan"
																			}
																		],
																		"id": 788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3157:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 787,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3157:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3157:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 791,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3203:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3209:9:9",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3203:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 793,
																		"name": "decoded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 707,
																		"src": "3251:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FlashCallbackData_$993_memory_ptr",
																			"typeString": "struct FlashLoan.FlashCallbackData memory"
																		}
																	},
																	"id": 794,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3259:7:9",
																	"memberName": "amount1",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 983,
																	"src": "3251:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 795,
																	"name": "amount0Min",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 769,
																	"src": "3307:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3359:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"expression": {
																	"id": 781,
																	"name": "ISwapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1371,
																	"src": "2967:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$1371_$",
																		"typeString": "type(contract ISwapRouter)"
																	}
																},
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2979:22:9",
																"memberName": "ExactInputSingleParams",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1295,
																"src": "2967:34:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$1295_storage_ptr_$",
																	"typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
																}
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"3025:7:9",
																"3063:8:9",
																"3102:3:9",
																"3146:9:9",
																"3193:8:9",
																"3241:8:9",
																"3289:16:9",
																"3340:17:9"
															],
															"names": [
																"tokenIn",
																"tokenOut",
																"fee",
																"recipient",
																"deadline",
																"amountIn",
																"amountOutMinimum",
																"sqrtPriceLimitX96"
															],
															"nodeType": "FunctionCall",
															"src": "2967:413:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$1295_memory_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$1295_memory_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
															}
														],
														"expression": {
															"id": 779,
															"name": "swapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "2921:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISwapRouter_$1371",
																"typeString": "contract ISwapRouter"
															}
														},
														"id": 780,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2932:16:9",
														"memberName": "exactInputSingle",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1304,
														"src": "2921:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$1295_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2921:474:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2887:508:9"
											},
											{
												"assignments": [
													801
												],
												"declarations": [
													{
														"constant": false,
														"id": 801,
														"mutability": "mutable",
														"name": "amountOut1",
														"nameLocation": "3497:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 963,
														"src": "3489:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 800,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3489:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 822,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 806,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "3636:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 807,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 730,
																	"src": "3675:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 808,
																		"name": "decoded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 707,
																		"src": "3709:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FlashCallbackData_$993_memory_ptr",
																			"typeString": "struct FlashLoan.FlashCallbackData memory"
																		}
																	},
																	"id": 809,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3717:8:9",
																	"memberName": "poolFee3",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 992,
																	"src": "3709:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 812,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3767:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_FlashLoan_$1058",
																				"typeString": "contract FlashLoan"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_FlashLoan_$1058",
																				"typeString": "contract FlashLoan"
																			}
																		],
																		"id": 811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3759:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 810,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3759:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3759:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 814,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3805:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3811:9:9",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3805:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 816,
																		"name": "decoded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 707,
																		"src": "3853:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FlashCallbackData_$993_memory_ptr",
																			"typeString": "struct FlashLoan.FlashCallbackData memory"
																		}
																	},
																	"id": 817,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3861:7:9",
																	"memberName": "amount0",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 981,
																	"src": "3853:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 818,
																	"name": "amount1Min",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 760,
																	"src": "3909:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3961:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"expression": {
																	"id": 804,
																	"name": "ISwapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1371,
																	"src": "3569:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$1371_$",
																		"typeString": "type(contract ISwapRouter)"
																	}
																},
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3581:22:9",
																"memberName": "ExactInputSingleParams",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1295,
																"src": "3569:34:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$1295_storage_ptr_$",
																	"typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
																}
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"3627:7:9",
																"3665:8:9",
																"3704:3:9",
																"3748:9:9",
																"3795:8:9",
																"3843:8:9",
																"3891:16:9",
																"3942:17:9"
															],
															"names": [
																"tokenIn",
																"tokenOut",
																"fee",
																"recipient",
																"deadline",
																"amountIn",
																"amountOutMinimum",
																"sqrtPriceLimitX96"
															],
															"nodeType": "FunctionCall",
															"src": "3569:413:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$1295_memory_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$1295_memory_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
															}
														],
														"expression": {
															"id": 802,
															"name": "swapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "3523:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISwapRouter_$1371",
																"typeString": "contract ISwapRouter"
															}
														},
														"id": 803,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3534:16:9",
														"memberName": "exactInputSingle",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1304,
														"src": "3523:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$1295_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3523:474:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3489:508:9"
											},
											{
												"assignments": [
													824
												],
												"declarations": [
													{
														"constant": false,
														"id": 824,
														"mutability": "mutable",
														"name": "amount0Owed",
														"nameLocation": "4121:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 963,
														"src": "4113:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 823,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4113:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 831,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 827,
																"name": "decoded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "4154:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FlashCallbackData_$993_memory_ptr",
																	"typeString": "struct FlashLoan.FlashCallbackData memory"
																}
															},
															"id": 828,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4162:7:9",
															"memberName": "amount0",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 981,
															"src": "4154:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 829,
															"name": "fee0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "4171:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 825,
															"name": "LowGasSafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "4135:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LowGasSafeMath_$649_$",
																"typeString": "type(library LowGasSafeMath)"
															}
														},
														"id": 826,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4150:3:9",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 544,
														"src": "4135:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4135:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4113:63:9"
											},
											{
												"assignments": [
													833
												],
												"declarations": [
													{
														"constant": false,
														"id": 833,
														"mutability": "mutable",
														"name": "amount1Owed",
														"nameLocation": "4195:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 963,
														"src": "4187:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 832,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4187:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 840,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 836,
																"name": "decoded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "4228:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FlashCallbackData_$993_memory_ptr",
																	"typeString": "struct FlashLoan.FlashCallbackData memory"
																}
															},
															"id": 837,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4236:7:9",
															"memberName": "amount1",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 983,
															"src": "4228:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 838,
															"name": "fee1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "4245:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 834,
															"name": "LowGasSafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "4209:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LowGasSafeMath_$649_$",
																"typeString": "type(library LowGasSafeMath)"
															}
														},
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4224:3:9",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 544,
														"src": "4209:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4209:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4187:63:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 844,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 724,
															"src": "4296:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 847,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4312:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_FlashLoan_$1058",
																		"typeString": "contract FlashLoan"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_FlashLoan_$1058",
																		"typeString": "contract FlashLoan"
																	}
																],
																"id": 846,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4304:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 845,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4304:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4304:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 849,
															"name": "amount0Owed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "4319:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 841,
															"name": "CustomTransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1229,
															"src": "4263:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_CustomTransferHelper_$1229_$",
																"typeString": "type(library CustomTransferHelper)"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4284:11:9",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1202,
														"src": "4263:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4263:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "4263:68:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 855,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "4375:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 858,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4391:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_FlashLoan_$1058",
																		"typeString": "contract FlashLoan"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_FlashLoan_$1058",
																		"typeString": "contract FlashLoan"
																	}
																],
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4383:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 856,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4383:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4383:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 860,
															"name": "amount1Owed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "4398:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 852,
															"name": "CustomTransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1229,
															"src": "4342:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_CustomTransferHelper_$1229_$",
																"typeString": "type(library CustomTransferHelper)"
															}
														},
														"id": 854,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4363:11:9",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1202,
														"src": "4342:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4342:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 862,
												"nodeType": "ExpressionStatement",
												"src": "4342:68:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 863,
														"name": "amount0Owed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "4427:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4441:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4427:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 877,
												"nodeType": "IfStatement",
												"src": "4423:72:9",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"id": 867,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 724,
																"src": "4448:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 870,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4464:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_FlashLoan_$1058",
																			"typeString": "contract FlashLoan"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_FlashLoan_$1058",
																			"typeString": "contract FlashLoan"
																		}
																	],
																	"id": 869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4456:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 868,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4456:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4456:13:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"id": 872,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4471:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4475:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4471:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 874,
																"name": "amount0Owed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 824,
																"src": "4483:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 866,
															"name": "pay",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1648,
															"src": "4444:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																"typeString": "function (address,address,address,uint256)"
															}
														},
														"id": 875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4444:51:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 876,
													"nodeType": "ExpressionStatement",
													"src": "4444:51:9"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 878,
														"name": "amount1Owed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 833,
														"src": "4510:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4524:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4510:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 892,
												"nodeType": "IfStatement",
												"src": "4506:72:9",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"id": 882,
																"name": "token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 730,
																"src": "4531:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 885,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4547:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_FlashLoan_$1058",
																			"typeString": "contract FlashLoan"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_FlashLoan_$1058",
																			"typeString": "contract FlashLoan"
																		}
																	],
																	"id": 884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4539:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 883,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4539:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4539:13:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"id": 887,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4554:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4558:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4554:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 889,
																"name": "amount1Owed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "4566:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 881,
															"name": "pay",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1648,
															"src": "4527:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																"typeString": "function (address,address,address,uint256)"
															}
														},
														"id": 890,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4527:51:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 891,
													"nodeType": "ExpressionStatement",
													"src": "4527:51:9"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 893,
														"name": "amountOut0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "4642:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 894,
														"name": "amount0Owed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "4655:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4642:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 927,
												"nodeType": "IfStatement",
												"src": "4638:264:9",
												"trueBody": {
													"id": 926,
													"nodeType": "Block",
													"src": "4668:234:9",
													"statements": [
														{
															"assignments": [
																897
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 897,
																	"mutability": "mutable",
																	"name": "profit0",
																	"nameLocation": "4691:7:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 926,
																	"src": "4683:15:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 896,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4683:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 903,
															"initialValue": {
																"arguments": [
																	{
																		"id": 900,
																		"name": "amountOut0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 778,
																		"src": "4720:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 901,
																		"name": "amount0Owed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 824,
																		"src": "4732:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 898,
																		"name": "LowGasSafeMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 649,
																		"src": "4701:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_LowGasSafeMath_$649_$",
																			"typeString": "type(library LowGasSafeMath)"
																		}
																	},
																	"id": 899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4716:3:9",
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 566,
																	"src": "4701:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4701:43:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4683:61:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 907,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 724,
																		"src": "4794:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 910,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4810:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_FlashLoan_$1058",
																					"typeString": "contract FlashLoan"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_FlashLoan_$1058",
																					"typeString": "contract FlashLoan"
																				}
																			],
																			"id": 909,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4802:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 908,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4802:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4802:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 912,
																		"name": "profit0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 897,
																		"src": "4817:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 904,
																		"name": "CustomTransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1229,
																		"src": "4761:20:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_CustomTransferHelper_$1229_$",
																			"typeString": "type(library CustomTransferHelper)"
																		}
																	},
																	"id": 906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4782:11:9",
																	"memberName": "safeApprove",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1202,
																	"src": "4761:32:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4761:64:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 914,
															"nodeType": "ExpressionStatement",
															"src": "4761:64:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 916,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 724,
																		"src": "4844:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 919,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4860:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_FlashLoan_$1058",
																					"typeString": "contract FlashLoan"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_FlashLoan_$1058",
																					"typeString": "contract FlashLoan"
																				}
																			],
																			"id": 918,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4852:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 917,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4852:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4852:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 921,
																			"name": "decoded",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 707,
																			"src": "4867:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_FlashCallbackData_$993_memory_ptr",
																				"typeString": "struct FlashLoan.FlashCallbackData memory"
																			}
																		},
																		"id": 922,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4875:5:9",
																		"memberName": "payer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 985,
																		"src": "4867:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 923,
																		"name": "profit0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 897,
																		"src": "4882:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 915,
																	"name": "pay",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1648,
																	"src": "4840:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256)"
																	}
																},
																"id": 924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4840:50:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 925,
															"nodeType": "ExpressionStatement",
															"src": "4840:50:9"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 928,
														"name": "amountOut1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "4916:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 929,
														"name": "amount1Owed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 833,
														"src": "4929:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4916:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 962,
												"nodeType": "IfStatement",
												"src": "4912:262:9",
												"trueBody": {
													"id": 961,
													"nodeType": "Block",
													"src": "4942:232:9",
													"statements": [
														{
															"assignments": [
																932
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 932,
																	"mutability": "mutable",
																	"name": "profit1",
																	"nameLocation": "4965:7:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 961,
																	"src": "4957:15:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 931,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4957:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 938,
															"initialValue": {
																"arguments": [
																	{
																		"id": 935,
																		"name": "amountOut1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "4994:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 936,
																		"name": "amount1Owed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 833,
																		"src": "5006:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 933,
																		"name": "LowGasSafeMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 649,
																		"src": "4975:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_LowGasSafeMath_$649_$",
																			"typeString": "type(library LowGasSafeMath)"
																		}
																	},
																	"id": 934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4990:3:9",
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 566,
																	"src": "4975:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4975:43:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4957:61:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 942,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 724,
																		"src": "5066:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 945,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "5082:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_FlashLoan_$1058",
																					"typeString": "contract FlashLoan"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_FlashLoan_$1058",
																					"typeString": "contract FlashLoan"
																				}
																			],
																			"id": 944,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5074:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 943,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5074:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5074:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 947,
																		"name": "profit1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 932,
																		"src": "5089:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 939,
																		"name": "CustomTransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1229,
																		"src": "5033:20:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_CustomTransferHelper_$1229_$",
																			"typeString": "type(library CustomTransferHelper)"
																		}
																	},
																	"id": 941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5054:11:9",
																	"memberName": "safeApprove",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1202,
																	"src": "5033:32:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5033:64:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 949,
															"nodeType": "ExpressionStatement",
															"src": "5033:64:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 951,
																		"name": "token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 730,
																		"src": "5116:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 954,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "5132:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_FlashLoan_$1058",
																					"typeString": "contract FlashLoan"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_FlashLoan_$1058",
																					"typeString": "contract FlashLoan"
																				}
																			],
																			"id": 953,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5124:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 952,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5124:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5124:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 956,
																			"name": "decoded",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 707,
																			"src": "5139:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_FlashCallbackData_$993_memory_ptr",
																				"typeString": "struct FlashLoan.FlashCallbackData memory"
																			}
																		},
																		"id": 957,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5147:5:9",
																		"memberName": "payer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 985,
																		"src": "5139:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 958,
																		"name": "profit1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 932,
																		"src": "5154:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 950,
																	"name": "pay",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1648,
																	"src": "5112:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256)"
																	}
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5112:50:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 960,
															"nodeType": "ExpressionStatement",
															"src": "5112:50:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 695,
										"nodeType": "StructuredDocumentation",
										"src": "1590:391:9",
										"text": "@param fee0 The fee from calling flash for token0\n @param fee1 The fee from calling flash for token1\n @param data The data needed in the callback passed as FlashCallbackData from `initFlash`\n @notice implements the callback called from flash\n @dev fails if the flash is not profitable, meaning the amountOut from the flash is less than the amount borrowed"
									},
									"functionSelector": "e9cbafb0",
									"id": 964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3FlashCallback",
									"nameLocation": "1996:22:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 703,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2111:8:9"
									},
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "fee0",
												"nameLocation": "2037:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "2029:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2029:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "fee1",
												"nameLocation": "2060:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "2052:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2052:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2090:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "2075:19:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 700,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2075:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2018:83:9"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2120:0:9"
									},
									"scope": 1058,
									"src": "1987:3194:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "FlashLoan.FlashParams",
									"id": 979,
									"members": [
										{
											"constant": false,
											"id": 966,
											"mutability": "mutable",
											"name": "token0",
											"nameLocation": "5393:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 979,
											"src": "5385:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 965,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5385:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 968,
											"mutability": "mutable",
											"name": "token1",
											"nameLocation": "5418:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 979,
											"src": "5410:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 967,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5410:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 970,
											"mutability": "mutable",
											"name": "fee1",
											"nameLocation": "5442:4:9",
											"nodeType": "VariableDeclaration",
											"scope": 979,
											"src": "5435:11:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 969,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "5435:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 972,
											"mutability": "mutable",
											"name": "amount0",
											"nameLocation": "5465:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 979,
											"src": "5457:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 971,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5457:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 974,
											"mutability": "mutable",
											"name": "amount1",
											"nameLocation": "5491:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 979,
											"src": "5483:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 973,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5483:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 976,
											"mutability": "mutable",
											"name": "fee2",
											"nameLocation": "5516:4:9",
											"nodeType": "VariableDeclaration",
											"scope": 979,
											"src": "5509:11:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 975,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "5509:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 978,
											"mutability": "mutable",
											"name": "fee3",
											"nameLocation": "5538:4:9",
											"nodeType": "VariableDeclaration",
											"scope": 979,
											"src": "5531:11:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 977,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "5531:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FlashParams",
									"nameLocation": "5362:11:9",
									"nodeType": "StructDefinition",
									"scope": 1058,
									"src": "5355:195:9",
									"visibility": "public"
								},
								{
									"canonicalName": "FlashLoan.FlashCallbackData",
									"id": 993,
									"members": [
										{
											"constant": false,
											"id": 981,
											"mutability": "mutable",
											"name": "amount0",
											"nameLocation": "5702:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 993,
											"src": "5694:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 980,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5694:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 983,
											"mutability": "mutable",
											"name": "amount1",
											"nameLocation": "5728:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 993,
											"src": "5720:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 982,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5720:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 985,
											"mutability": "mutable",
											"name": "payer",
											"nameLocation": "5754:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 993,
											"src": "5746:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 984,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5746:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 988,
											"mutability": "mutable",
											"name": "poolKey",
											"nameLocation": "5790:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 993,
											"src": "5770:27:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolKey_$1728_storage_ptr",
												"typeString": "struct PoolAddress.PoolKey"
											},
											"typeName": {
												"id": 987,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 986,
													"name": "PoolAddress.PoolKey",
													"nameLocations": [
														"5770:11:9",
														"5782:7:9"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1728,
													"src": "5770:19:9"
												},
												"referencedDeclaration": 1728,
												"src": "5770:19:9",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1728_storage_ptr",
													"typeString": "struct PoolAddress.PoolKey"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 990,
											"mutability": "mutable",
											"name": "poolFee2",
											"nameLocation": "5815:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 993,
											"src": "5808:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 989,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "5808:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 992,
											"mutability": "mutable",
											"name": "poolFee3",
											"nameLocation": "5841:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 993,
											"src": "5834:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 991,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "5834:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FlashCallbackData",
									"nameLocation": "5665:17:9",
									"nodeType": "StructDefinition",
									"scope": 1058,
									"src": "5658:199:9",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "6057:920:9",
										"statements": [
											{
												"assignments": [
													1014
												],
												"declarations": [
													{
														"constant": false,
														"id": 1014,
														"mutability": "mutable",
														"name": "poolKey",
														"nameLocation": "6095:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1056,
														"src": "6068:34:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolKey_$1728_memory_ptr",
															"typeString": "struct PoolAddress.PoolKey"
														},
														"typeName": {
															"id": 1013,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1012,
																"name": "PoolAddress.PoolKey",
																"nameLocations": [
																	"6068:11:9",
																	"6080:7:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1728,
																"src": "6068:19:9"
															},
															"referencedDeclaration": 1728,
															"src": "6068:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolKey_$1728_storage_ptr",
																"typeString": "struct PoolAddress.PoolKey"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1021,
												"initialValue": {
													"arguments": [
														{
															"id": 1017,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "6147:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1018,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "6163:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1019,
															"name": "fee1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "6176:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														],
														"expression": {
															"id": 1015,
															"name": "PoolAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1816,
															"src": "6118:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_PoolAddress_$1816_$",
																"typeString": "type(library PoolAddress)"
															}
														},
														"id": 1016,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6130:7:9",
														"memberName": "PoolKey",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1728,
														"src": "6118:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_PoolKey_$1728_storage_ptr_$",
															"typeString": "type(struct PoolAddress.PoolKey storage pointer)"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"6139:6:9",
														"6155:6:9",
														"6171:3:9"
													],
													"names": [
														"token0",
														"token1",
														"fee"
													],
													"nodeType": "FunctionCall",
													"src": "6118:64:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1728_memory_ptr",
														"typeString": "struct PoolAddress.PoolKey memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6068:114:9"
											},
											{
												"assignments": [
													1024
												],
												"declarations": [
													{
														"constant": false,
														"id": 1024,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "6208:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1056,
														"src": "6193:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$99",
															"typeString": "contract IUniswapV3Pool"
														},
														"typeName": {
															"id": 1023,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1022,
																"name": "IUniswapV3Pool",
																"nameLocations": [
																	"6193:14:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 99,
																"src": "6193:14:9"
															},
															"referencedDeclaration": 99,
															"src": "6193:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$99",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1032,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1028,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "6257:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1029,
																	"name": "poolKey",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "6266:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolKey_$1728_memory_ptr",
																		"typeString": "struct PoolAddress.PoolKey memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_struct$_PoolKey_$1728_memory_ptr",
																		"typeString": "struct PoolAddress.PoolKey memory"
																	}
																],
																"expression": {
																	"id": 1026,
																	"name": "PoolAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1816,
																	"src": "6230:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_PoolAddress_$1816_$",
																		"typeString": "type(library PoolAddress)"
																	}
																},
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6242:14:9",
																"memberName": "computeAddress",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1815,
																"src": "6230:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_address_$_t_struct$_PoolKey_$1728_memory_ptr_$returns$_t_address_$",
																	"typeString": "function (address,struct PoolAddress.PoolKey memory) pure returns (address)"
																}
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6230:44:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1025,
														"name": "IUniswapV3Pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "6215:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$99_$",
															"typeString": "type(contract IUniswapV3Pool)"
														}
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6215:60:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$99",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6193:82:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1038,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6581:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_FlashLoan_$1058",
																		"typeString": "contract FlashLoan"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_FlashLoan_$1058",
																		"typeString": "contract FlashLoan"
																	}
																],
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6573:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1036,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6573:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6573:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1040,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "6601:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1041,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "6623:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1045,
																			"name": "amount0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1001,
																			"src": "6724:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1046,
																			"name": "amount1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1003,
																			"src": "6763:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"expression": {
																				"id": 1047,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "6800:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1048,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6804:6:9",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "6800:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1049,
																			"name": "poolKey",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1014,
																			"src": "6842:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolKey_$1728_memory_ptr",
																				"typeString": "struct PoolAddress.PoolKey memory"
																			}
																		},
																		{
																			"id": 1050,
																			"name": "fee2",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1005,
																			"src": "6882:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint24",
																				"typeString": "uint24"
																			}
																		},
																		{
																			"id": 1051,
																			"name": "fee3",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1007,
																			"src": "6919:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint24",
																				"typeString": "uint24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_struct$_PoolKey_$1728_memory_ptr",
																				"typeString": "struct PoolAddress.PoolKey memory"
																			},
																			{
																				"typeIdentifier": "t_uint24",
																				"typeString": "uint24"
																			},
																			{
																				"typeIdentifier": "t_uint24",
																				"typeString": "uint24"
																			}
																		],
																		"id": 1044,
																		"name": "FlashCallbackData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "6674:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_FlashCallbackData_$993_storage_ptr_$",
																			"typeString": "type(struct FlashLoan.FlashCallbackData storage pointer)"
																		}
																	},
																	"id": 1052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"nameLocations": [
																		"6715:7:9",
																		"6754:7:9",
																		"6793:5:9",
																		"6833:7:9",
																		"6872:8:9",
																		"6909:8:9"
																	],
																	"names": [
																		"amount0",
																		"amount1",
																		"payer",
																		"poolKey",
																		"poolFee2",
																		"poolFee3"
																	],
																	"nodeType": "FunctionCall",
																	"src": "6674:269:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FlashCallbackData_$993_memory_ptr",
																		"typeString": "struct FlashLoan.FlashCallbackData memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_FlashCallbackData_$993_memory_ptr",
																		"typeString": "struct FlashLoan.FlashCallbackData memory"
																	}
																],
																"expression": {
																	"id": 1042,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "6645:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6649:6:9",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "6645:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6645:313:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1033,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "6548:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$99",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 1035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6553:5:9",
														"memberName": "flash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 188,
														"src": "6548:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory) external"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6548:421:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1055,
												"nodeType": "ExpressionStatement",
												"src": "6548:421:9"
											}
										]
									},
									"functionSelector": "833263e6",
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initFlash",
									"nameLocation": "5879:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "5897:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "5889:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5889:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "5922:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "5914:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5914:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "fee1",
												"nameLocation": "5946:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "5939:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 998,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "5939:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5969:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "5961:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5995:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "5987:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5987:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "fee2",
												"nameLocation": "6020:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "6013:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1004,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "6013:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "fee3",
												"nameLocation": "6042:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "6035:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1006,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "6035:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5888:159:9"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6057:0:9"
									},
									"scope": 1058,
									"src": "5870:1107:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1059,
							"src": "563:6417:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "48:6934:9"
				},
				"id": 9
			},
			"contracts_rename/interfaces/CustomCustomTransferHelper.sol": {
				"ast": {
					"absolutePath": "contracts_rename/interfaces/CustomCustomTransferHelper.sol",
					"exportedSymbols": {
						"CustomTransferHelper": [
							1229
						],
						"IERC20": [
							77
						]
					},
					"id": 1230,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1060,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1061,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1230,
							"sourceUnit": 78,
							"src": "74:56:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CustomTransferHelper",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1229,
							"linearizedBaseContracts": [
								1229
							],
							"name": "CustomTransferHelper",
							"nameLocation": "142:20:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "713:233:10",
										"statements": [
											{
												"assignments": [
													1074,
													1076
												],
												"declarations": [
													{
														"constant": false,
														"id": 1074,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "730:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1109,
														"src": "725:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1073,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "725:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1076,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "752:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1109,
														"src": "739:17:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1075,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "739:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1089,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1081,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "807:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1082,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "814:12:10",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 76,
																		"src": "807:19:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transferFrom(address,address,uint256) returns (bool)"
																		}
																	},
																	"id": 1083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "827:8:10",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "807:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1084,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1066,
																	"src": "837:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1085,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1068,
																	"src": "843:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1086,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1070,
																	"src": "847:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1079,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "784:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1080,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "788:18:10",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "784:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "784:69:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1077,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "773:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1078,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "779:4:10",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "773:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "773:81:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "724:130:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1091,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1074,
																"src": "873:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1095,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1092,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1076,
																					"src": "885:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1093,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "890:6:10",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "885:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1094,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "900:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "885:16:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1098,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1076,
																					"src": "916:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 1100,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "923:4:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 1099,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "923:4:10",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 1101,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "922:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 1096,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "905:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1097,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "909:6:10",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "905:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "905:24:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "885:44:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1104,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "884:46:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "873:57:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535446",
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "932:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															},
															"value": "STF"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															}
														],
														"id": 1090,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "865:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "865:73:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "865:73:10"
											}
										]
									},
									"documentation": {
										"id": 1062,
										"nodeType": "StructuredDocumentation",
										"src": "170:403:10",
										"text": "@notice Transfers tokens from the targeted address to the given destination\n @notice Errors with 'STF' if transfer fails\n @param token The contract address of the token to be transferred\n @param from The originating address from which the tokens will be transferred\n @param to The destination address of the transfer\n @param value The amount to be transferred"
									},
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "588:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "623:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "615:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "647:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "639:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "670:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "662:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "662:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "683:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "604:99:10"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "713:0:10"
									},
									"scope": 1229,
									"src": "579:367:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1155,
										"nodeType": "Block",
										"src": "1352:209:10",
										"statements": [
											{
												"assignments": [
													1121,
													1123
												],
												"declarations": [
													{
														"constant": false,
														"id": 1121,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1369:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1155,
														"src": "1364:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1120,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1364:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1123,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1391:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1155,
														"src": "1378:17:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1122,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1378:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1135,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1128,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "1433:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1440:8:10",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "1433:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transfer(address,uint256) returns (bool)"
																		}
																	},
																	"id": 1130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1449:8:10",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1433:24:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1131,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "1459:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1132,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1117,
																	"src": "1463:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1126,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1410:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1414:18:10",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1410:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1410:59:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1124,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "1399:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1405:4:10",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1399:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1399:71:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1363:107:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1137,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "1489:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1138,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1123,
																					"src": "1501:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1139,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1506:6:10",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1501:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1140,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1516:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1501:16:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1144,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1123,
																					"src": "1532:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 1146,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1539:4:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 1145,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1539:4:10",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 1147,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1538:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 1142,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1521:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1143,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "1525:6:10",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1521:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1521:24:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1501:44:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1150,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1500:46:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1489:57:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5354",
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1548:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															},
															"value": "ST"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															}
														],
														"id": 1136,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1481:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1481:72:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1154,
												"nodeType": "ExpressionStatement",
												"src": "1481:72:10"
											}
										]
									},
									"documentation": {
										"id": 1111,
										"nodeType": "StructuredDocumentation",
										"src": "954:285:10",
										"text": "@notice Transfers tokens from msg.sender to a recipient\n @dev Errors with ST if transfer fails\n @param token The contract address of the token which will be transferred\n @param to The recipient of the transfer\n @param value The value of the transfer"
									},
									"id": 1156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1254:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1285:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "1277:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1277:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1309:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "1301:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1301:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1330:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "1322:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1322:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:76:10"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1352:0:10"
									},
									"scope": 1229,
									"src": "1245:316:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1201,
										"nodeType": "Block",
										"src": "2027:208:10",
										"statements": [
											{
												"assignments": [
													1167,
													1169
												],
												"declarations": [
													{
														"constant": false,
														"id": 1167,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2044:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1201,
														"src": "2039:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1166,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2039:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1169,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "2066:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1201,
														"src": "2053:17:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1168,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2053:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1181,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1174,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "2108:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2115:7:10",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "2108:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.approve(address,uint256) returns (bool)"
																		}
																	},
																	"id": 1176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2123:8:10",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2108:23:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1177,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1161,
																	"src": "2133:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1178,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1163,
																	"src": "2137:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1172,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2085:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2089:18:10",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2085:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2085:58:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1170,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "2074:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1171,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2080:4:10",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "2074:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2074:70:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2038:106:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1183,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "2163:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1195,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1187,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1184,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1169,
																					"src": "2175:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1185,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2180:6:10",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2175:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1186,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2190:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2175:16:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1190,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1169,
																					"src": "2206:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 1192,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "2213:4:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 1191,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "2213:4:10",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 1193,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2212:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 1188,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "2195:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1189,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "2199:6:10",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "2195:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1194,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2195:24:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2175:44:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1196,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2174:46:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2163:57:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5341",
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2222:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															},
															"value": "SA"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															}
														],
														"id": 1182,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2155:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2155:72:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1200,
												"nodeType": "ExpressionStatement",
												"src": "2155:72:10"
											}
										]
									},
									"documentation": {
										"id": 1157,
										"nodeType": "StructuredDocumentation",
										"src": "1569:346:10",
										"text": "@notice Approves the stipulated contract to spend the given allowance in the given token\n @dev Errors with 'SA' if transfer fails\n @param token The contract address of the token to be approved\n @param to The target of the approval\n @param value The amount of the given token the target will be allowed to spend"
									},
									"id": 1202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1930:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1960:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1952:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1952:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1984:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1976:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1976:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2005:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1997:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1941:76:10"
									},
									"returnParameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2027:0:10"
									},
									"scope": 1229,
									"src": "1921:314:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "2492:107:10",
										"statements": [
											{
												"assignments": [
													1211,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1211,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2509:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1227,
														"src": "2504:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1210,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2504:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1221,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2554:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1217,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "2544:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 1216,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "2548:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2544:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1212,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1205,
																"src": "2522:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2525:4:10",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2522:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1214,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1207,
																"src": "2537:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2522:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2522:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2503:54:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1223,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "2576:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535445",
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2585:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															},
															"value": "STE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															}
														],
														"id": 1222,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2568:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2568:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1226,
												"nodeType": "ExpressionStatement",
												"src": "2568:23:10"
											}
										]
									},
									"documentation": {
										"id": 1203,
										"nodeType": "StructuredDocumentation",
										"src": "2243:182:10",
										"text": "@notice Transfers ETH to the recipient address\n @dev Fails with `STE`\n @param to The destination of the transfer\n @param value The value to be transferred"
									},
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "2440:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2464:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "2456:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2456:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2476:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "2468:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2468:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2455:27:10"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2492:0:10"
									},
									"scope": 1229,
									"src": "2431:168:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1230,
							"src": "134:2468:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:2556:10"
				},
				"id": 10
			},
			"contracts_rename/interfaces/IPeripheryImmutableState.sol": {
				"ast": {
					"absolutePath": "contracts_rename/interfaces/IPeripheryImmutableState.sol",
					"exportedSymbols": {
						"IPeripheryImmutableState": [
							1245
						]
					},
					"id": 1246,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1231,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPeripheryImmutableState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1232,
								"nodeType": "StructuredDocumentation",
								"src": "74:93:11",
								"text": "@title Immutable state\n @notice Functions that return immutable state of the router"
							},
							"fullyImplemented": false,
							"id": 1245,
							"linearizedBaseContracts": [
								1245
							],
							"name": "IPeripheryImmutableState",
							"nameLocation": "177:24:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1233,
										"nodeType": "StructuredDocumentation",
										"src": "209:57:11",
										"text": "@return Returns the address of the Uniswap V3 factory"
									},
									"functionSelector": "c45a0155",
									"id": 1238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "281:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "288:2:11"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "314:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "314:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "313:9:11"
									},
									"scope": 1245,
									"src": "272:51:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1239,
										"nodeType": "StructuredDocumentation",
										"src": "331:40:11",
										"text": "@return Returns the address of WETH9"
									},
									"functionSelector": "4aa4a4fc",
									"id": 1244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH9",
									"nameLocation": "386:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:11"
									},
									"returnParameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "417:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "417:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:9:11"
									},
									"scope": 1245,
									"src": "377:49:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1246,
							"src": "167:262:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:383:11"
				},
				"id": 11
			},
			"contracts_rename/interfaces/IPeripheryPayments.sol": {
				"ast": {
					"absolutePath": "contracts_rename/interfaces/IPeripheryPayments.sol",
					"exportedSymbols": {
						"IPeripheryPayments": [
							1271
						]
					},
					"id": 1272,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1247,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPeripheryPayments",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1248,
								"nodeType": "StructuredDocumentation",
								"src": "74:94:12",
								"text": "@title Periphery Payments\n @notice Functions to ease deposits and withdrawals of ETH"
							},
							"fullyImplemented": false,
							"id": 1271,
							"linearizedBaseContracts": [
								1271
							],
							"name": "IPeripheryPayments",
							"nameLocation": "178:18:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "204:305:12",
										"text": "@notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\n @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\n @param amountMinimum The minimum amount of WETH9 to unwrap\n @param recipient The address receiving ETH"
									},
									"functionSelector": "49404b7c",
									"id": 1256,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unwrapWETH9",
									"nameLocation": "524:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "amountMinimum",
												"nameLocation": "544:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "536:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "536:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "567:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "559:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "559:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "535:42:12"
									},
									"returnParameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "594:0:12"
									},
									"scope": 1271,
									"src": "515:80:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1257,
										"nodeType": "StructuredDocumentation",
										"src": "603:227:12",
										"text": "@notice Refunds any ETH balance held by this contract to the `msg.sender`\n @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\n that use ether for the input amount"
									},
									"functionSelector": "12210e8a",
									"id": 1260,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "refundETH",
									"nameLocation": "845:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "854:2:12"
									},
									"returnParameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "873:0:12"
									},
									"scope": 1271,
									"src": "836:38:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1261,
										"nodeType": "StructuredDocumentation",
										"src": "882:431:12",
										"text": "@notice Transfers the full amount of a token held by this contract to recipient\n @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\n @param token The contract address of the token which will be transferred to `recipient`\n @param amountMinimum The minimum amount of token required for a transfer\n @param recipient The destination address of the token"
									},
									"functionSelector": "df2ab5bb",
									"id": 1270,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sweepToken",
									"nameLocation": "1328:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1357:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "1349:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1349:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "amountMinimum",
												"nameLocation": "1381:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "1373:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1373:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1413:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "1405:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1405:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1338:91:12"
									},
									"returnParameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1446:0:12"
									},
									"scope": 1271,
									"src": "1319:128:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1272,
							"src": "168:1282:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:1406:12"
				},
				"id": 12
			},
			"contracts_rename/interfaces/ISwapRouter.sol": {
				"ast": {
					"absolutePath": "contracts_rename/interfaces/ISwapRouter.sol",
					"exportedSymbols": {
						"ISwapRouter": [
							1371
						],
						"IUniswapV3SwapCallback": [
							1399
						]
					},
					"id": 1372,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1273,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:13"
						},
						{
							"id": 1274,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "72:19:13"
						},
						{
							"absolutePath": "contracts_rename/interfaces/IUniswapV3SwapCallback.sol",
							"file": "./IUniswapV3SwapCallback.sol",
							"id": 1275,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1372,
							"sourceUnit": 1400,
							"src": "95:38:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1277,
										"name": "IUniswapV3SwapCallback",
										"nameLocations": [
											"268:22:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1399,
										"src": "268:22:13"
									},
									"id": 1278,
									"nodeType": "InheritanceSpecifier",
									"src": "268:22:13"
								}
							],
							"canonicalName": "ISwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1276,
								"nodeType": "StructuredDocumentation",
								"src": "137:106:13",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 1371,
							"linearizedBaseContracts": [
								1371,
								1399
							],
							"name": "ISwapRouter",
							"nameLocation": "253:11:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISwapRouter.ExactInputSingleParams",
									"id": 1295,
									"members": [
										{
											"constant": false,
											"id": 1280,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "347:7:13",
											"nodeType": "VariableDeclaration",
											"scope": 1295,
											"src": "339:15:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1279,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "339:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1282,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "373:8:13",
											"nodeType": "VariableDeclaration",
											"scope": 1295,
											"src": "365:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1281,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "365:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1284,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "399:3:13",
											"nodeType": "VariableDeclaration",
											"scope": 1295,
											"src": "392:10:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1283,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "392:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1286,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "421:9:13",
											"nodeType": "VariableDeclaration",
											"scope": 1295,
											"src": "413:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1285,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "413:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1288,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "449:8:13",
											"nodeType": "VariableDeclaration",
											"scope": 1295,
											"src": "441:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1287,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "441:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1290,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "476:8:13",
											"nodeType": "VariableDeclaration",
											"scope": 1295,
											"src": "468:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1289,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "468:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1292,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "503:16:13",
											"nodeType": "VariableDeclaration",
											"scope": 1295,
											"src": "495:24:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1291,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "495:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1294,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "538:17:13",
											"nodeType": "VariableDeclaration",
											"scope": 1295,
											"src": "530:25:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 1293,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "530:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "305:22:13",
									"nodeType": "StructDefinition",
									"scope": 1371,
									"src": "298:265:13",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1296,
										"nodeType": "StructuredDocumentation",
										"src": "571:252:13",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "414bf389",
									"id": 1304,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "838:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "887:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "855:38:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$1295_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 1298,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1297,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"855:22:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1295,
														"src": "855:22:13"
													},
													"referencedDeclaration": 1295,
													"src": "855:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$1295_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:40:13"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "929:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "921:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "921:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "920:19:13"
									},
									"scope": 1371,
									"src": "829:111:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactInputParams",
									"id": 1315,
									"members": [
										{
											"constant": false,
											"id": 1306,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "989:4:13",
											"nodeType": "VariableDeclaration",
											"scope": 1315,
											"src": "983:10:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1305,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "983:5:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1308,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1012:9:13",
											"nodeType": "VariableDeclaration",
											"scope": 1315,
											"src": "1004:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1307,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1004:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1310,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1040:8:13",
											"nodeType": "VariableDeclaration",
											"scope": 1315,
											"src": "1032:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1309,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1032:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1312,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1067:8:13",
											"nodeType": "VariableDeclaration",
											"scope": 1315,
											"src": "1059:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1311,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1059:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1314,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1094:16:13",
											"nodeType": "VariableDeclaration",
											"scope": 1315,
											"src": "1086:24:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1313,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1086:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "955:16:13",
									"nodeType": "StructDefinition",
									"scope": 1371,
									"src": "948:170:13",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1316,
										"nodeType": "StructuredDocumentation",
										"src": "1126:275:13",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "c04b8d59",
									"id": 1324,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "1416:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1453:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "1427:32:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$1315_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 1318,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1317,
														"name": "ExactInputParams",
														"nameLocations": [
															"1427:16:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1315,
														"src": "1427:16:13"
													},
													"referencedDeclaration": 1315,
													"src": "1427:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$1315_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1426:34:13"
									},
									"returnParameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1495:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "1487:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1486:19:13"
									},
									"scope": 1371,
									"src": "1407:99:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputSingleParams",
									"id": 1341,
									"members": [
										{
											"constant": false,
											"id": 1326,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1564:7:13",
											"nodeType": "VariableDeclaration",
											"scope": 1341,
											"src": "1556:15:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1325,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1556:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1328,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1590:8:13",
											"nodeType": "VariableDeclaration",
											"scope": 1341,
											"src": "1582:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1327,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1582:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1330,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1616:3:13",
											"nodeType": "VariableDeclaration",
											"scope": 1341,
											"src": "1609:10:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1329,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1609:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1332,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1638:9:13",
											"nodeType": "VariableDeclaration",
											"scope": 1341,
											"src": "1630:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1331,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1630:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1334,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1666:8:13",
											"nodeType": "VariableDeclaration",
											"scope": 1341,
											"src": "1658:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1333,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1658:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1336,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1693:9:13",
											"nodeType": "VariableDeclaration",
											"scope": 1341,
											"src": "1685:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1335,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1685:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1338,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "1721:15:13",
											"nodeType": "VariableDeclaration",
											"scope": 1341,
											"src": "1713:23:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1337,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1713:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1340,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "1755:17:13",
											"nodeType": "VariableDeclaration",
											"scope": 1341,
											"src": "1747:25:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 1339,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1747:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1521:23:13",
									"nodeType": "StructDefinition",
									"scope": 1371,
									"src": "1514:266:13",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1342,
										"nodeType": "StructuredDocumentation",
										"src": "1788:252:13",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "db3e2198",
									"id": 1350,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "2055:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2106:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "2073:39:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$1341_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 1344,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1343,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"2073:23:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1341,
														"src": "2073:23:13"
													},
													"referencedDeclaration": 1341,
													"src": "2073:23:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$1341_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2072:41:13"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2148:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "2140:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2140:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2139:18:13"
									},
									"scope": 1371,
									"src": "2046:112:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputParams",
									"id": 1361,
									"members": [
										{
											"constant": false,
											"id": 1352,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2208:4:13",
											"nodeType": "VariableDeclaration",
											"scope": 1361,
											"src": "2202:10:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1351,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2202:5:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1354,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2231:9:13",
											"nodeType": "VariableDeclaration",
											"scope": 1361,
											"src": "2223:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1353,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2223:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1356,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2259:8:13",
											"nodeType": "VariableDeclaration",
											"scope": 1361,
											"src": "2251:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1355,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2251:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1358,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2286:9:13",
											"nodeType": "VariableDeclaration",
											"scope": 1361,
											"src": "2278:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1357,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2278:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1360,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2314:15:13",
											"nodeType": "VariableDeclaration",
											"scope": 1361,
											"src": "2306:23:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1359,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2306:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "2173:17:13",
									"nodeType": "StructDefinition",
									"scope": 1371,
									"src": "2166:171:13",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1362,
										"nodeType": "StructuredDocumentation",
										"src": "2345:286:13",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "f28c0498",
									"id": 1370,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "2646:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2685:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "2658:33:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$1361_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 1364,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1363,
														"name": "ExactOutputParams",
														"nameLocations": [
															"2658:17:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1361,
														"src": "2658:17:13"
													},
													"referencedDeclaration": 1361,
													"src": "2658:17:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$1361_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2657:35:13"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2727:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "2719:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2718:18:13"
									},
									"scope": 1371,
									"src": "2637:100:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1372,
							"src": "243:2497:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:2694:13"
				},
				"id": 13
			},
			"contracts_rename/interfaces/IUniswapV3FlashCallback.sol": {
				"ast": {
					"absolutePath": "contracts_rename/interfaces/IUniswapV3FlashCallback.sol",
					"exportedSymbols": {
						"IUniswapV3FlashCallback": [
							1385
						]
					},
					"id": 1386,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1373,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3FlashCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1374,
								"nodeType": "StructuredDocumentation",
								"src": "74:148:14",
								"text": "@title Callback for IUniswapV3PoolActions#flash\n @notice Any contract that calls IUniswapV3PoolActions#flash must implement this interface"
							},
							"fullyImplemented": false,
							"id": 1385,
							"linearizedBaseContracts": [
								1385
							],
							"name": "IUniswapV3FlashCallback",
							"nameLocation": "232:23:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1375,
										"nodeType": "StructuredDocumentation",
										"src": "263:602:14",
										"text": "@notice Called to `msg.sender` after transferring to the recipient from IUniswapV3Pool#flash.\n @dev In the implementation you must repay the pool the tokens sent by flash plus the computed fee amounts.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n @param fee0 The fee amount in token0 due to the pool by the end of the flash\n @param fee1 The fee amount in token1 due to the pool by the end of the flash\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#flash call"
									},
									"functionSelector": "e9cbafb0",
									"id": 1384,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3FlashCallback",
									"nameLocation": "880:22:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "fee0",
												"nameLocation": "921:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "913:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "913:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "fee1",
												"nameLocation": "944:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "936:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "936:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "974:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "959:19:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1380,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "959:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:83:14"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "994:0:14"
									},
									"scope": 1385,
									"src": "871:124:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1386,
							"src": "222:776:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:954:14"
				},
				"id": 14
			},
			"contracts_rename/interfaces/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "contracts_rename/interfaces/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							1399
						]
					},
					"id": 1400,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1387,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3SwapCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1388,
								"nodeType": "StructuredDocumentation",
								"src": "74:146:15",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 1399,
							"linearizedBaseContracts": [
								1399
							],
							"name": "IUniswapV3SwapCallback",
							"nameLocation": "230:22:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1389,
										"nodeType": "StructuredDocumentation",
										"src": "260:906:15",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 1398,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "1181:21:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "1220:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "1213:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1390,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1213:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "1250:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "1243:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1392,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1243:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1288:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "1273:19:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1394,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1273:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:97:15"
									},
									"returnParameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1308:0:15"
									},
									"scope": 1399,
									"src": "1172:137:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1400,
							"src": "220:1092:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:1266:15"
				},
				"id": 15
			},
			"contracts_rename/interfaces/IWETH9.sol": {
				"ast": {
					"absolutePath": "contracts_rename/interfaces/IWETH9.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"IWETH9": [
							1416
						]
					},
					"id": 1417,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1401,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:16"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1402,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1417,
							"sourceUnit": 78,
							"src": "74:56:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1404,
										"name": "IERC20",
										"nameLocations": [
											"186:6:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "186:6:16"
									},
									"id": 1405,
									"nodeType": "InheritanceSpecifier",
									"src": "186:6:16"
								}
							],
							"canonicalName": "IWETH9",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1403,
								"nodeType": "StructuredDocumentation",
								"src": "134:32:16",
								"text": "@title Interface for WETH9"
							},
							"fullyImplemented": false,
							"id": 1416,
							"linearizedBaseContracts": [
								1416,
								77
							],
							"name": "IWETH9",
							"nameLocation": "176:6:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1406,
										"nodeType": "StructuredDocumentation",
										"src": "200:46:16",
										"text": "@notice Deposit ether to get wrapped ether"
									},
									"functionSelector": "d0e30db0",
									"id": 1409,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "261:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "268:2:16"
									},
									"returnParameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "287:0:16"
									},
									"scope": 1416,
									"src": "252:36:16",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1410,
										"nodeType": "StructuredDocumentation",
										"src": "296:47:16",
										"text": "@notice Withdraw wrapped ether to get ether"
									},
									"functionSelector": "2e1a7d4d",
									"id": 1415,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "358:8:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "367:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "367:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:9:16"
									},
									"returnParameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "384:0:16"
									},
									"scope": 1416,
									"src": "349:36:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1417,
							"src": "166:222:16",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "46:342:16"
				},
				"id": 16
			},
			"contracts_rename/interfaces/PeripheryImmutableState.sol": {
				"ast": {
					"absolutePath": "contracts_rename/interfaces/PeripheryImmutableState.sol",
					"exportedSymbols": {
						"IPeripheryImmutableState": [
							1245
						],
						"PeripheryImmutableState": [
							1447
						]
					},
					"id": 1448,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1418,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:17"
						},
						{
							"absolutePath": "contracts_rename/interfaces/IPeripheryImmutableState.sol",
							"file": "./IPeripheryImmutableState.sol",
							"id": 1419,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1448,
							"sourceUnit": 1246,
							"src": "76:40:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1421,
										"name": "IPeripheryImmutableState",
										"nameLocations": [
											"250:24:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1245,
										"src": "250:24:17"
									},
									"id": 1422,
									"nodeType": "InheritanceSpecifier",
									"src": "250:24:17"
								}
							],
							"canonicalName": "PeripheryImmutableState",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1420,
								"nodeType": "StructuredDocumentation",
								"src": "120:85:17",
								"text": "@title Immutable state\n @notice Immutable state used by periphery contracts"
							},
							"fullyImplemented": true,
							"id": 1447,
							"linearizedBaseContracts": [
								1447,
								1245
							],
							"name": "PeripheryImmutableState",
							"nameLocation": "223:23:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1238
									],
									"constant": false,
									"documentation": {
										"id": 1423,
										"nodeType": "StructuredDocumentation",
										"src": "282:40:17",
										"text": "@inheritdoc IPeripheryImmutableState"
									},
									"functionSelector": "c45a0155",
									"id": 1426,
									"mutability": "immutable",
									"name": "factory",
									"nameLocation": "362:7:17",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 1425,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "353:8:17"
									},
									"scope": 1447,
									"src": "328:41:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1424,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "328:7:17",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1244
									],
									"constant": false,
									"documentation": {
										"id": 1427,
										"nodeType": "StructuredDocumentation",
										"src": "376:40:17",
										"text": "@inheritdoc IPeripheryImmutableState"
									},
									"functionSelector": "4aa4a4fc",
									"id": 1430,
									"mutability": "immutable",
									"name": "WETH9",
									"nameLocation": "456:5:17",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 1429,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "447:8:17"
									},
									"scope": 1447,
									"src": "422:39:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1428,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "422:7:17",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1445,
										"nodeType": "Block",
										"src": "516:62:17",
										"statements": [
											{
												"expression": {
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1437,
														"name": "factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1426,
														"src": "527:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1438,
														"name": "_factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1432,
														"src": "537:8:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "527:18:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1440,
												"nodeType": "ExpressionStatement",
												"src": "527:18:17"
											},
											{
												"expression": {
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1441,
														"name": "WETH9",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1430,
														"src": "556:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1442,
														"name": "_WETH9",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1434,
														"src": "564:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "556:14:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1444,
												"nodeType": "ExpressionStatement",
												"src": "556:14:17"
											}
										]
									},
									"id": 1446,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "_factory",
												"nameLocation": "490:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "482:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "482:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "_WETH9",
												"nameLocation": "508:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "500:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "481:34:17"
									},
									"returnParameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "516:0:17"
									},
									"scope": 1447,
									"src": "470:108:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1448,
							"src": "205:376:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:535:17"
				},
				"id": 17
			},
			"contracts_rename/interfaces/PeripheryPayments.sol": {
				"ast": {
					"absolutePath": "contracts_rename/interfaces/PeripheryPayments.sol",
					"exportedSymbols": {
						"CustomTransferHelper": [
							1229
						],
						"IERC20": [
							77
						],
						"IPeripheryImmutableState": [
							1245
						],
						"IPeripheryPayments": [
							1271
						],
						"IWETH9": [
							1416
						],
						"PeripheryImmutableState": [
							1447
						],
						"PeripheryPayments": [
							1649
						]
					},
					"id": 1650,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1449,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:18"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1450,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1650,
							"sourceUnit": 78,
							"src": "74:56:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts_rename/interfaces/IPeripheryPayments.sol",
							"file": "./IPeripheryPayments.sol",
							"id": 1451,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1650,
							"sourceUnit": 1272,
							"src": "134:34:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts_rename/interfaces/IWETH9.sol",
							"file": "./IWETH9.sol",
							"id": 1452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1650,
							"sourceUnit": 1417,
							"src": "170:22:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts_rename/interfaces/CustomCustomTransferHelper.sol",
							"file": "./CustomCustomTransferHelper.sol",
							"id": 1453,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1650,
							"sourceUnit": 1230,
							"src": "196:42:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts_rename/interfaces/PeripheryImmutableState.sol",
							"file": "./PeripheryImmutableState.sol",
							"id": 1454,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1650,
							"sourceUnit": 1448,
							"src": "242:39:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1455,
										"name": "IPeripheryPayments",
										"nameLocations": [
											"324:18:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1271,
										"src": "324:18:18"
									},
									"id": 1456,
									"nodeType": "InheritanceSpecifier",
									"src": "324:18:18"
								},
								{
									"baseName": {
										"id": 1457,
										"name": "PeripheryImmutableState",
										"nameLocations": [
											"344:23:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1447,
										"src": "344:23:18"
									},
									"id": 1458,
									"nodeType": "InheritanceSpecifier",
									"src": "344:23:18"
								}
							],
							"canonicalName": "PeripheryPayments",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1649,
							"linearizedBaseContracts": [
								1649,
								1447,
								1245,
								1271
							],
							"name": "PeripheryPayments",
							"nameLocation": "303:17:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1461,
										"nodeType": "Block",
										"src": "402:8:18",
										"statements": []
									},
									"id": 1462,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "382:2:18"
									},
									"returnParameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "402:0:18"
									},
									"scope": 1649,
									"src": "375:35:18",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1256
									],
									"body": {
										"id": 1509,
										"nodeType": "Block",
										"src": "545:324:18",
										"statements": [
											{
												"assignments": [
													1472
												],
												"declarations": [
													{
														"constant": false,
														"id": 1472,
														"mutability": "mutable",
														"name": "balanceWETH9",
														"nameLocation": "564:12:18",
														"nodeType": "VariableDeclaration",
														"scope": 1509,
														"src": "556:20:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1471,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "556:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1482,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1479,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "611:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PeripheryPayments_$1649",
																		"typeString": "contract PeripheryPayments"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PeripheryPayments_$1649",
																		"typeString": "contract PeripheryPayments"
																	}
																],
																"id": 1478,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "603:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1477,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "603:7:18",
																	"typeDescriptions": {}
																}
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "603:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1474,
																	"name": "WETH9",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1430,
																	"src": "586:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1473,
																"name": "IWETH9",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1416,
																"src": "579:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IWETH9_$1416_$",
																	"typeString": "type(contract IWETH9)"
																}
															},
															"id": 1475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "579:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWETH9_$1416",
																"typeString": "contract IWETH9"
															}
														},
														"id": 1476,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "593:9:18",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "579:23:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "579:38:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "556:61:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1484,
																"name": "balanceWETH9",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1472,
																"src": "636:12:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1485,
																"name": "amountMinimum",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1465,
																"src": "652:13:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "636:29:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74205745544839",
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "667:20:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01e23337f78f001c03af3011e04e4dea54f4997ff97d41da263c1606bf0f9f73",
																"typeString": "literal_string \"Insufficient WETH9\""
															},
															"value": "Insufficient WETH9"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01e23337f78f001c03af3011e04e4dea54f4997ff97d41da263c1606bf0f9f73",
																"typeString": "literal_string \"Insufficient WETH9\""
															}
														],
														"id": 1483,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "628:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "628:60:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1489,
												"nodeType": "ExpressionStatement",
												"src": "628:60:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1490,
														"name": "balanceWETH9",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1472,
														"src": "705:12:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1491,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "720:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "705:16:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1508,
												"nodeType": "IfStatement",
												"src": "701:161:18",
												"trueBody": {
													"id": 1507,
													"nodeType": "Block",
													"src": "723:139:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1497,
																		"name": "balanceWETH9",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1472,
																		"src": "761:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1494,
																				"name": "WETH9",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1430,
																				"src": "745:5:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1493,
																			"name": "IWETH9",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1416,
																			"src": "738:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IWETH9_$1416_$",
																				"typeString": "type(contract IWETH9)"
																			}
																		},
																		"id": 1495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "738:13:18",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWETH9_$1416",
																			"typeString": "contract IWETH9"
																		}
																	},
																	"id": 1496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "752:8:18",
																	"memberName": "withdraw",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1415,
																	"src": "738:22:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) external"
																	}
																},
																"id": 1498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "738:36:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1499,
															"nodeType": "ExpressionStatement",
															"src": "738:36:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1503,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1467,
																		"src": "826:9:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1504,
																		"name": "balanceWETH9",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1472,
																		"src": "837:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1500,
																		"name": "CustomTransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1229,
																		"src": "789:20:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_CustomTransferHelper_$1229_$",
																			"typeString": "type(library CustomTransferHelper)"
																		}
																	},
																	"id": 1502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "810:15:18",
																	"memberName": "safeTransferETH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1228,
																	"src": "789:36:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "789:61:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1506,
															"nodeType": "ExpressionStatement",
															"src": "789:61:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1463,
										"nodeType": "StructuredDocumentation",
										"src": "418:34:18",
										"text": "@inheritdoc IPeripheryPayments"
									},
									"functionSelector": "49404b7c",
									"id": 1510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unwrapWETH9",
									"nameLocation": "467:11:18",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1469,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "536:8:18"
									},
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "amountMinimum",
												"nameLocation": "487:13:18",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "479:21:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "479:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "510:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "502:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "502:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "478:42:18"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "545:0:18"
									},
									"scope": 1649,
									"src": "458:411:18",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1270
									],
									"body": {
										"id": 1553,
										"nodeType": "Block",
										"src": "1052:277:18",
										"statements": [
											{
												"assignments": [
													1522
												],
												"declarations": [
													{
														"constant": false,
														"id": 1522,
														"mutability": "mutable",
														"name": "balanceToken",
														"nameLocation": "1071:12:18",
														"nodeType": "VariableDeclaration",
														"scope": 1553,
														"src": "1063:20:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1521,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1063:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1532,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1529,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1118:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PeripheryPayments_$1649",
																		"typeString": "contract PeripheryPayments"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PeripheryPayments_$1649",
																		"typeString": "contract PeripheryPayments"
																	}
																],
																"id": 1528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1110:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1527,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1110:7:18",
																	"typeDescriptions": {}
																}
															},
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1110:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1524,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1513,
																	"src": "1093:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1523,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "1086:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1086:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 1526,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1100:9:18",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "1086:23:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1086:38:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1063:61:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1534,
																"name": "balanceToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1522,
																"src": "1143:12:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1535,
																"name": "amountMinimum",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1515,
																"src": "1159:13:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1143:29:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420746f6b656e",
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1174:20:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2cf3b53843c7738cfb0b95230b455802cee89f2ea29be4a30eee707228c97571",
																"typeString": "literal_string \"Insufficient token\""
															},
															"value": "Insufficient token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2cf3b53843c7738cfb0b95230b455802cee89f2ea29be4a30eee707228c97571",
																"typeString": "literal_string \"Insufficient token\""
															}
														],
														"id": 1533,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1135:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1135:60:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1539,
												"nodeType": "ExpressionStatement",
												"src": "1135:60:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1540,
														"name": "balanceToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1522,
														"src": "1212:12:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1227:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1212:16:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1552,
												"nodeType": "IfStatement",
												"src": "1208:114:18",
												"trueBody": {
													"id": 1551,
													"nodeType": "Block",
													"src": "1230:92:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1546,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1513,
																		"src": "1279:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1547,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1517,
																		"src": "1286:9:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1548,
																		"name": "balanceToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1522,
																		"src": "1297:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1543,
																		"name": "CustomTransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1229,
																		"src": "1245:20:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_CustomTransferHelper_$1229_$",
																			"typeString": "type(library CustomTransferHelper)"
																		}
																	},
																	"id": 1545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1266:12:18",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1156,
																	"src": "1245:33:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1245:65:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1550,
															"nodeType": "ExpressionStatement",
															"src": "1245:65:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1511,
										"nodeType": "StructuredDocumentation",
										"src": "877:34:18",
										"text": "@inheritdoc IPeripheryPayments"
									},
									"functionSelector": "df2ab5bb",
									"id": 1554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sweepToken",
									"nameLocation": "926:10:18",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1519,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1043:8:18"
									},
									"parameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "955:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "947:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "947:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "amountMinimum",
												"nameLocation": "979:13:18",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "971:21:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1011:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "1003:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1003:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "936:91:18"
									},
									"returnParameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1052:0:18"
									},
									"scope": 1649,
									"src": "917:412:18",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1260
									],
									"body": {
										"id": 1579,
										"nodeType": "Block",
										"src": "1424:121:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1561,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1447:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PeripheryPayments_$1649",
																		"typeString": "contract PeripheryPayments"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PeripheryPayments_$1649",
																		"typeString": "contract PeripheryPayments"
																	}
																],
																"id": 1560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1439:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1559,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1439:7:18",
																	"typeDescriptions": {}
																}
															},
															"id": 1562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1439:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1453:7:18",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1439:21:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1564,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1463:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1439:25:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1578,
												"nodeType": "IfStatement",
												"src": "1435:102:18",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1569,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1503:3:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1507:6:18",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1503:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1573,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1523:4:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_PeripheryPayments_$1649",
																				"typeString": "contract PeripheryPayments"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_PeripheryPayments_$1649",
																				"typeString": "contract PeripheryPayments"
																			}
																		],
																		"id": 1572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1515:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1571,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1515:7:18",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1515:13:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1575,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1529:7:18",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "1515:21:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1566,
																"name": "CustomTransferHelper",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1229,
																"src": "1466:20:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_CustomTransferHelper_$1229_$",
																	"typeString": "type(library CustomTransferHelper)"
																}
															},
															"id": 1568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1487:15:18",
															"memberName": "safeTransferETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1228,
															"src": "1466:36:18",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																"typeString": "function (address,uint256)"
															}
														},
														"id": 1576,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1466:71:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1577,
													"nodeType": "ExpressionStatement",
													"src": "1466:71:18"
												}
											}
										]
									},
									"documentation": {
										"id": 1555,
										"nodeType": "StructuredDocumentation",
										"src": "1337:34:18",
										"text": "@inheritdoc IPeripheryPayments"
									},
									"functionSelector": "12210e8a",
									"id": 1580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "refundETH",
									"nameLocation": "1386:9:18",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1557,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1415:8:18"
									},
									"parameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1395:2:18"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1424:0:18"
									},
									"scope": 1649,
									"src": "1377:168:18",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1647,
										"nodeType": "Block",
										"src": "1871:599:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1592,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "1886:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1593,
															"name": "WETH9",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "1895:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1886:14:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1597,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1912:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_PeripheryPayments_$1649",
																			"typeString": "contract PeripheryPayments"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_PeripheryPayments_$1649",
																			"typeString": "contract PeripheryPayments"
																		}
																	],
																	"id": 1596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1904:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1595,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1904:7:18",
																		"typeDescriptions": {}
																	}
																},
																"id": 1598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1904:13:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1918:7:18",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "1904:21:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 1600,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "1929:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1904:30:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1886:48:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1620,
															"name": "payer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1585,
															"src": "2131:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"id": 1623,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2148:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PeripheryPayments_$1649",
																		"typeString": "contract PeripheryPayments"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PeripheryPayments_$1649",
																		"typeString": "contract PeripheryPayments"
																	}
																],
																"id": 1622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2140:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1621,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2140:7:18",
																	"typeDescriptions": {}
																}
															},
															"id": 1624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2140:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2131:22:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1644,
														"nodeType": "Block",
														"src": "2338:125:18",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1638,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1583,
																			"src": "2420:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1639,
																			"name": "payer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1585,
																			"src": "2427:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1640,
																			"name": "recipient",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1587,
																			"src": "2434:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1641,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1589,
																			"src": "2445:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1635,
																			"name": "CustomTransferHelper",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1229,
																			"src": "2382:20:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_CustomTransferHelper_$1229_$",
																				"typeString": "type(library CustomTransferHelper)"
																			}
																		},
																		"id": 1637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2403:16:18",
																		"memberName": "safeTransferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1110,
																		"src": "2382:37:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,address,address,uint256)"
																		}
																	},
																	"id": 1642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2382:69:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1643,
																"nodeType": "ExpressionStatement",
																"src": "2382:69:18"
															}
														]
													},
													"id": 1645,
													"nodeType": "IfStatement",
													"src": "2127:336:18",
													"trueBody": {
														"id": 1634,
														"nodeType": "Block",
														"src": "2155:177:18",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1629,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1583,
																			"src": "2296:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1630,
																			"name": "recipient",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1587,
																			"src": "2303:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1631,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1589,
																			"src": "2314:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1626,
																			"name": "CustomTransferHelper",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1229,
																			"src": "2262:20:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_CustomTransferHelper_$1229_$",
																				"typeString": "type(library CustomTransferHelper)"
																			}
																		},
																		"id": 1628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2283:12:18",
																		"memberName": "safeTransfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1156,
																		"src": "2262:33:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,address,uint256)"
																		}
																	},
																	"id": 1632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2262:58:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1633,
																"nodeType": "ExpressionStatement",
																"src": "2262:58:18"
															}
														]
													}
												},
												"id": 1646,
												"nodeType": "IfStatement",
												"src": "1882:581:18",
												"trueBody": {
													"id": 1619,
													"nodeType": "Block",
													"src": "1936:185:18",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1604,
																					"name": "WETH9",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1430,
																					"src": "1989:5:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1603,
																				"name": "IWETH9",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1416,
																				"src": "1982:6:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IWETH9_$1416_$",
																					"typeString": "type(contract IWETH9)"
																				}
																			},
																			"id": 1605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1982:13:18",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IWETH9_$1416",
																				"typeString": "contract IWETH9"
																			}
																		},
																		"id": 1606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1996:7:18",
																		"memberName": "deposit",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1409,
																		"src": "1982:21:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_payable$__$returns$__$",
																			"typeString": "function () payable external"
																		}
																	},
																	"id": 1608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1607,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1589,
																			"src": "2011:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "1982:35:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_payable$__$returns$__$value",
																		"typeString": "function () payable external"
																	}
																},
																"id": 1609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1982:37:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1610,
															"nodeType": "ExpressionStatement",
															"src": "1982:37:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1615,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1587,
																		"src": "2092:9:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1616,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1589,
																		"src": "2103:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1612,
																				"name": "WETH9",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1430,
																				"src": "2076:5:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1611,
																			"name": "IWETH9",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1416,
																			"src": "2069:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IWETH9_$1416_$",
																				"typeString": "type(contract IWETH9)"
																			}
																		},
																		"id": 1613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2069:13:18",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWETH9_$1416",
																			"typeString": "contract IWETH9"
																		}
																	},
																	"id": 1614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2083:8:18",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "2069:22:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2069:40:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1618,
															"nodeType": "ExpressionStatement",
															"src": "2069:40:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1581,
										"nodeType": "StructuredDocumentation",
										"src": "1553:183:18",
										"text": "@param token The token to pay\n @param payer The entity that must pay\n @param recipient The entity that will receive payment\n @param value The amount to pay"
									},
									"id": 1648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pay",
									"nameLocation": "1751:3:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1773:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "1765:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1765:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "payer",
												"nameLocation": "1797:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "1789:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1789:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1821:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "1813:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1849:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "1841:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1841:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:107:18"
									},
									"returnParameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1871:0:18"
									},
									"scope": 1649,
									"src": "1742:728:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1650,
							"src": "285:2188:18",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:2427:18"
				},
				"id": 18
			},
			"contracts_rename/libraries/CallbackValidation.sol": {
				"ast": {
					"absolutePath": "contracts_rename/libraries/CallbackValidation.sol",
					"exportedSymbols": {
						"CallbackValidation": [
							1714
						],
						"IUniswapV3Pool": [
							99
						],
						"IUniswapV3PoolActions": [
							195
						],
						"IUniswapV3PoolDerivedState": [
							226
						],
						"IUniswapV3PoolEvents": [
							345
						],
						"IUniswapV3PoolImmutables": [
							385
						],
						"IUniswapV3PoolOwnerActions": [
							411
						],
						"IUniswapV3PoolState": [
							519
						],
						"PoolAddress": [
							1816
						]
					},
					"id": 1715,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1651,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "46:25:19"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"id": 1652,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1715,
							"sourceUnit": 100,
							"src": "75:66:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts_rename/libraries/PoolAddress.sol",
							"file": "./PoolAddress.sol",
							"id": 1653,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1715,
							"sourceUnit": 1817,
							"src": "143:27:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CallbackValidation",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1654,
								"nodeType": "StructuredDocumentation",
								"src": "174:69:19",
								"text": "@notice Provides validation for callbacks from Uniswap V3 Pools"
							},
							"fullyImplemented": true,
							"id": 1714,
							"linearizedBaseContracts": [
								1714
							],
							"name": "CallbackValidation",
							"nameLocation": "251:18:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1679,
										"nodeType": "Block",
										"src": "871:94:19",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1670,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1657,
															"src": "904:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1673,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1659,
																	"src": "936:6:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1674,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1661,
																	"src": "944:6:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1675,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1663,
																	"src": "952:3:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																],
																"expression": {
																	"id": 1671,
																	"name": "PoolAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1816,
																	"src": "913:11:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_PoolAddress_$1816_$",
																		"typeString": "type(library PoolAddress)"
																	}
																},
																"id": 1672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "925:10:19",
																"memberName": "getPoolKey",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1760,
																"src": "913:22:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_uint24_$returns$_t_struct$_PoolKey_$1728_memory_ptr_$",
																	"typeString": "function (address,address,uint24) pure returns (struct PoolAddress.PoolKey memory)"
																}
															},
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "913:43:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolKey_$1728_memory_ptr",
																"typeString": "struct PoolAddress.PoolKey memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_struct$_PoolKey_$1728_memory_ptr",
																"typeString": "struct PoolAddress.PoolKey memory"
															}
														],
														"id": 1669,
														"name": "verifyCallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1680,
															1713
														],
														"referencedDeclaration": 1713,
														"src": "889:14:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_struct$_PoolKey_$1728_memory_ptr_$returns$_t_contract$_IUniswapV3Pool_$99_$",
															"typeString": "function (address,struct PoolAddress.PoolKey memory) view returns (contract IUniswapV3Pool)"
														}
													},
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "889:68:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$99",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"functionReturnParameters": 1668,
												"id": 1678,
												"nodeType": "Return",
												"src": "882:75:19"
											}
										]
									},
									"documentation": {
										"id": 1655,
										"nodeType": "StructuredDocumentation",
										"src": "277:416:19",
										"text": "@notice Returns the address of a valid Uniswap V3 Pool\n @param factory The contract address of the Uniswap V3 factory\n @param tokenA The contract address of either token0 or token1\n @param tokenB The contract address of the other token\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @return pool The V3 pool contract address"
									},
									"id": 1680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallback",
									"nameLocation": "708:14:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "factory",
												"nameLocation": "741:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "733:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "767:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "759:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "759:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "792:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "784:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "816:3:19",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "809:10:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1662,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "809:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:104:19"
									},
									"returnParameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "865:4:19",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "850:19:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV3Pool_$99",
													"typeString": "contract IUniswapV3Pool"
												},
												"typeName": {
													"id": 1666,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1665,
														"name": "IUniswapV3Pool",
														"nameLocations": [
															"850:14:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 99,
														"src": "850:14:19"
													},
													"referencedDeclaration": 99,
													"src": "850:14:19",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$99",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:21:19"
									},
									"scope": 1714,
									"src": "699:266:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1712,
										"nodeType": "Block",
										"src": "1371:133:19",
										"statements": [
											{
												"expression": {
													"id": 1700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1692,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1690,
														"src": "1382:4:19",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$99",
															"typeString": "contract IUniswapV3Pool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1696,
																		"name": "factory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1683,
																		"src": "1431:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1697,
																		"name": "poolKey",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1686,
																		"src": "1440:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolKey_$1728_memory_ptr",
																			"typeString": "struct PoolAddress.PoolKey memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_struct$_PoolKey_$1728_memory_ptr",
																			"typeString": "struct PoolAddress.PoolKey memory"
																		}
																	],
																	"expression": {
																		"id": 1694,
																		"name": "PoolAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1816,
																		"src": "1404:11:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_PoolAddress_$1816_$",
																			"typeString": "type(library PoolAddress)"
																		}
																	},
																	"id": 1695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1416:14:19",
																	"memberName": "computeAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1815,
																	"src": "1404:26:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_address_$_t_struct$_PoolKey_$1728_memory_ptr_$returns$_t_address_$",
																		"typeString": "function (address,struct PoolAddress.PoolKey memory) pure returns (address)"
																	}
																},
																"id": 1698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1404:44:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1693,
															"name": "IUniswapV3Pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "1389:14:19",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$99_$",
																"typeString": "type(contract IUniswapV3Pool)"
															}
														},
														"id": 1699,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1389:60:19",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$99",
															"typeString": "contract IUniswapV3Pool"
														}
													},
													"src": "1382:67:19",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$99",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"id": 1701,
												"nodeType": "ExpressionStatement",
												"src": "1382:67:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1703,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1468:3:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1472:6:19",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1468:10:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1707,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1690,
																		"src": "1490:4:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV3Pool_$99",
																			"typeString": "contract IUniswapV3Pool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IUniswapV3Pool_$99",
																			"typeString": "contract IUniswapV3Pool"
																		}
																	],
																	"id": 1706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1482:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1705,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1482:7:19",
																		"typeDescriptions": {}
																	}
																},
																"id": 1708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1482:13:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1468:27:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1702,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1460:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1460:36:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1711,
												"nodeType": "ExpressionStatement",
												"src": "1460:36:19"
											}
										]
									},
									"documentation": {
										"id": 1681,
										"nodeType": "StructuredDocumentation",
										"src": "973:239:19",
										"text": "@notice Returns the address of a valid Uniswap V3 Pool\n @param factory The contract address of the Uniswap V3 factory\n @param poolKey The identifying key of the V3 pool\n @return pool The V3 pool contract address"
									},
									"id": 1713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallback",
									"nameLocation": "1227:14:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "factory",
												"nameLocation": "1250:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "1242:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "poolKey",
												"nameLocation": "1286:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "1259:34:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1728_memory_ptr",
													"typeString": "struct PoolAddress.PoolKey"
												},
												"typeName": {
													"id": 1685,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1684,
														"name": "PoolAddress.PoolKey",
														"nameLocations": [
															"1259:11:19",
															"1271:7:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1728,
														"src": "1259:19:19"
													},
													"referencedDeclaration": 1728,
													"src": "1259:19:19",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1728_storage_ptr",
														"typeString": "struct PoolAddress.PoolKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1241:53:19"
									},
									"returnParameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1360:4:19",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "1345:19:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV3Pool_$99",
													"typeString": "contract IUniswapV3Pool"
												},
												"typeName": {
													"id": 1689,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1688,
														"name": "IUniswapV3Pool",
														"nameLocations": [
															"1345:14:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 99,
														"src": "1345:14:19"
													},
													"referencedDeclaration": 99,
													"src": "1345:14:19",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$99",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1344:21:19"
									},
									"scope": 1714,
									"src": "1218:286:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1715,
							"src": "243:1264:19",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:1461:19"
				},
				"id": 19
			},
			"contracts_rename/libraries/PoolAddress.sol": {
				"ast": {
					"absolutePath": "contracts_rename/libraries/PoolAddress.sol",
					"exportedSymbols": {
						"PoolAddress": [
							1816
						]
					},
					"id": 1817,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1716,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:20"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PoolAddress",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1717,
								"nodeType": "StructuredDocumentation",
								"src": "72:97:20",
								"text": "@title Provides functions for deriving a pool address from the factory, tokens, and the fee"
							},
							"fullyImplemented": true,
							"id": 1816,
							"linearizedBaseContracts": [
								1816
							],
							"name": "PoolAddress",
							"nameLocation": "177:11:20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1720,
									"mutability": "constant",
									"name": "POOL_INIT_CODE_HASH",
									"nameLocation": "222:19:20",
									"nodeType": "VariableDeclaration",
									"scope": 1816,
									"src": "196:114:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1718,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "196:7:20",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307865333466313939623139623262346634376636383434323631396435353535323764323434663738613332393765613839333235663834336638376238623534",
										"id": 1719,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "244:66:20",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_102814774271675688723325049954498779091328469440286648861889194717372678376276_by_1",
											"typeString": "int_const 1028...(70 digits omitted)...6276"
										},
										"value": "0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "PoolAddress.PoolKey",
									"documentation": {
										"id": 1721,
										"nodeType": "StructuredDocumentation",
										"src": "319:43:20",
										"text": "@notice The identifying key of the pool"
									},
									"id": 1728,
									"members": [
										{
											"constant": false,
											"id": 1723,
											"mutability": "mutable",
											"name": "token0",
											"nameLocation": "402:6:20",
											"nodeType": "VariableDeclaration",
											"scope": 1728,
											"src": "394:14:20",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1722,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "394:7:20",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1725,
											"mutability": "mutable",
											"name": "token1",
											"nameLocation": "427:6:20",
											"nodeType": "VariableDeclaration",
											"scope": 1728,
											"src": "419:14:20",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1724,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "419:7:20",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1727,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "451:3:20",
											"nodeType": "VariableDeclaration",
											"scope": 1728,
											"src": "444:10:20",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1726,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "444:6:20",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolKey",
									"nameLocation": "375:7:20",
									"nodeType": "StructDefinition",
									"scope": 1816,
									"src": "368:94:20",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1759,
										"nodeType": "Block",
										"src": "938:144:20",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1741,
														"name": "tokenA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1731,
														"src": "953:6:20",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1742,
														"name": "tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1733,
														"src": "962:6:20",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "953:15:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1752,
												"nodeType": "IfStatement",
												"src": "949:56:20",
												"trueBody": {
													"expression": {
														"id": 1750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 1744,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1731,
																	"src": "971:6:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1745,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1733,
																	"src": "979:6:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 1746,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "970:16:20",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
																"typeString": "tuple(address,address)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 1747,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1733,
																	"src": "990:6:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1748,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1731,
																	"src": "998:6:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 1749,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "989:16:20",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
																"typeString": "tuple(address,address)"
															}
														},
														"src": "970:35:20",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1751,
													"nodeType": "ExpressionStatement",
													"src": "970:35:20"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1754,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1731,
															"src": "1040:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1755,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "1056:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1756,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1735,
															"src": "1069:3:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														],
														"id": 1753,
														"name": "PoolKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1728,
														"src": "1023:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_PoolKey_$1728_storage_ptr_$",
															"typeString": "type(struct PoolAddress.PoolKey storage pointer)"
														}
													},
													"id": 1757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"1032:6:20",
														"1048:6:20",
														"1064:3:20"
													],
													"names": [
														"token0",
														"token1",
														"fee"
													],
													"nodeType": "FunctionCall",
													"src": "1023:51:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1728_memory_ptr",
														"typeString": "struct PoolAddress.PoolKey memory"
													}
												},
												"functionReturnParameters": 1740,
												"id": 1758,
												"nodeType": "Return",
												"src": "1016:58:20"
											}
										]
									},
									"documentation": {
										"id": 1729,
										"nodeType": "StructuredDocumentation",
										"src": "470:325:20",
										"text": "@notice Returns PoolKey: the ordered tokens with the matched fee levels\n @param tokenA The first token of a pool, unsorted\n @param tokenB The second token of a pool, unsorted\n @param fee The fee level of the pool\n @return Poolkey The pool details with ordered token0 and token1 assignments"
									},
									"id": 1760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolKey",
									"nameLocation": "810:10:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "839:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "831:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "864:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "856:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "888:3:20",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "881:10:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1734,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "881:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:78:20"
									},
									"returnParameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "922:14:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1728_memory_ptr",
													"typeString": "struct PoolAddress.PoolKey"
												},
												"typeName": {
													"id": 1738,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1737,
														"name": "PoolKey",
														"nameLocations": [
															"922:7:20"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1728,
														"src": "922:7:20"
													},
													"referencedDeclaration": 1728,
													"src": "922:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1728_storage_ptr",
														"typeString": "struct PoolAddress.PoolKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "921:16:20"
									},
									"scope": 1816,
									"src": "801:281:20",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1814,
										"nodeType": "Block",
										"src": "1432:275:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1772,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1766,
																	"src": "1447:3:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolKey_$1728_memory_ptr",
																		"typeString": "struct PoolAddress.PoolKey memory"
																	}
																},
																"id": 1773,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1451:6:20",
																"memberName": "token0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1723,
																"src": "1447:10:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1774,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1766,
																	"src": "1460:3:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolKey_$1728_memory_ptr",
																		"typeString": "struct PoolAddress.PoolKey memory"
																	}
																},
																"id": 1775,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1464:6:20",
																"memberName": "token1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1725,
																"src": "1460:10:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1447:23:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1771,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1439:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1439:32:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1778,
												"nodeType": "ExpressionStatement",
												"src": "1439:32:20"
											},
											{
												"assignments": [
													1780
												],
												"declarations": [
													{
														"constant": false,
														"id": 1780,
														"mutability": "mutable",
														"name": "hash",
														"nameLocation": "1486:4:20",
														"nodeType": "VariableDeclaration",
														"scope": 1814,
														"src": "1478:12:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1779,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1478:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1800,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "ff",
																	"id": 1784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "hexString",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1530:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9",
																		"typeString": "literal_string hex\"ff\""
																	}
																},
																{
																	"id": 1785,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1763,
																	"src": "1548:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1789,
																						"name": "key",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1766,
																						"src": "1587:3:20",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolKey_$1728_memory_ptr",
																							"typeString": "struct PoolAddress.PoolKey memory"
																						}
																					},
																					"id": 1790,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "1591:6:20",
																					"memberName": "token0",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1723,
																					"src": "1587:10:20",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"id": 1791,
																						"name": "key",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1766,
																						"src": "1599:3:20",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolKey_$1728_memory_ptr",
																							"typeString": "struct PoolAddress.PoolKey memory"
																						}
																					},
																					"id": 1792,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "1603:6:20",
																					"memberName": "token1",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1725,
																					"src": "1599:10:20",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"id": 1793,
																						"name": "key",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1766,
																						"src": "1611:3:20",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolKey_$1728_memory_ptr",
																							"typeString": "struct PoolAddress.PoolKey memory"
																						}
																					},
																					"id": 1794,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "1615:3:20",
																					"memberName": "fee",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1727,
																					"src": "1611:7:20",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint24",
																						"typeString": "uint24"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint24",
																						"typeString": "uint24"
																					}
																				],
																				"expression": {
																					"id": 1787,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1576:3:20",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1788,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "1580:6:20",
																				"memberName": "encode",
																				"nodeType": "MemberAccess",
																				"src": "1576:10:20",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 1795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1576:43:20",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 1786,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "1566:9:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 1796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1566:54:20",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1797,
																	"name": "POOL_INIT_CODE_HASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1720,
																	"src": "1631:19:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9",
																		"typeString": "literal_string hex\"ff\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1782,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1503:3:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1783,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1507:12:20",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1503:16:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1503:154:20",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1781,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "1493:9:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1493:165:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1478:180:20"
											},
											{
												"expression": {
													"id": 1812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1801,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1769,
														"src": "1665:4:20",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1808,
																				"name": "hash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1780,
																				"src": "1696:4:20",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 1807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1688:7:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1806,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "1688:7:20",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1688:13:20",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1680:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1804,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "1680:7:20",
																		"typeDescriptions": {}
																	}
																},
																"id": 1810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1680:22:20",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1672:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1802,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1672:7:20",
																"typeDescriptions": {}
															}
														},
														"id": 1811,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1672:31:20",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1665:38:20",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1813,
												"nodeType": "ExpressionStatement",
												"src": "1665:38:20"
											}
										]
									},
									"documentation": {
										"id": 1761,
										"nodeType": "StructuredDocumentation",
										"src": "1090:239:20",
										"text": "@notice Deterministically computes the pool address given the factory and PoolKey\n @param factory The Uniswap V3 factory contract address\n @param key The PoolKey\n @return pool The contract address of the V3 pool"
									},
									"id": 1815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeAddress",
									"nameLocation": "1343:14:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "factory",
												"nameLocation": "1366:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "1358:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1358:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1390:3:20",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "1375:18:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1728_memory_ptr",
													"typeString": "struct PoolAddress.PoolKey"
												},
												"typeName": {
													"id": 1765,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1764,
														"name": "PoolKey",
														"nameLocations": [
															"1375:7:20"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1728,
														"src": "1375:7:20"
													},
													"referencedDeclaration": 1728,
													"src": "1375:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1728_storage_ptr",
														"typeString": "struct PoolAddress.PoolKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1357:37:20"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1426:4:20",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "1418:12:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1418:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1417:14:20"
									},
									"scope": 1816,
									"src": "1334:373:20",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1817,
							"src": "169:1543:20",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:1675:20"
				},
				"id": 20
			}
		}
	}
}